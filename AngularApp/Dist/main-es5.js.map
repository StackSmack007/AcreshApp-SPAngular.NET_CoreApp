{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/profile-edit/profile-edit.component.ts","webpack:///src/app/auth/profile-edit/profile-edit.component.html","webpack:///src/app/auth/profile-info/profile-info.component.ts","webpack:///src/app/auth/profile-info/profile-info.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/auth/user-small-info/user-small-info.component.ts","webpack:///src/app/auth/user-small-info/user-small-info.component.html","webpack:///src/app/categories/categories.module.ts","webpack:///src/app/categories/category-tree/category-tree.component.ts","webpack:///src/app/categories/category-tree/category-tree.component.html","webpack:///src/app/categories/create-edit-form/create-edit-form.component.ts","webpack:///src/app/categories/create-edit-form/create-edit-form.component.html","webpack:///src/app/categories/create/create.component.ts","webpack:///src/app/categories/create/create.component.html","webpack:///src/app/categories/details/details.component.ts","webpack:///src/app/categories/details/details.component.html","webpack:///src/app/categories/edit/edit.component.ts","webpack:///src/app/categories/edit/edit.component.html","webpack:///src/app/categories/main-board/main-board-categories.component.ts","webpack:///src/app/categories/main-board/main-board-categories.component.html","webpack:///src/app/comments/comment/comment.component.ts","webpack:///src/app/comments/comment/comment.component.html","webpack:///src/app/comments/comments.module.ts","webpack:///src/app/comments/list-comments/list-comments.component.ts","webpack:///src/app/comments/list-comments/list-comments.component.html","webpack:///src/app/core/components/questionComponent/dialog-question.component.ts","webpack:///src/app/core/components/questionComponent/dialog-question.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/directives/class-if-class.directive.ts","webpack:///src/app/core/enumerations/CookRank.ts","webpack:///src/app/core/enumerations/Gender.ts","webpack:///src/app/core/enumerations/MeasureTypes.ts","webpack:///src/app/core/enumerations/OriginTypes.ts","webpack:///src/app/core/enumerations/RecipeDifficulty.ts","webpack:///src/app/core/guards/authorized.only.ts","webpack:///src/app/core/interceptors/auth.interceptor.ts","webpack:///src/app/core/material/material.module.ts","webpack:///src/app/core/pipes/htmlRaw.pipe.ts","webpack:///src/app/core/pipes/safeUrl.pipe.ts","webpack:///src/app/core/resolvers/ingredient-edit-data-resolver.ts","webpack:///src/app/core/resolvers/recipe-details-resolver.ts","webpack:///src/app/core/resolvers/recipe-edit-data-resolver.ts","webpack:///src/app/core/resolvers/user-data-profile-edit.resolver.ts","webpack:///src/app/core/resolvers/user-data.resolver.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/category.service.ts","webpack:///src/app/core/services/comments.service.ts","webpack:///src/app/core/services/helper.service.ts","webpack:///src/app/core/services/ingredient.service.ts","webpack:///src/app/core/services/message.service.ts","webpack:///src/app/core/services/recipe.service.ts","webpack:///src/app/core/services/signal-r.new-messages.service.ts","webpack:///src/app/core/services/signal-r.recipe-details.service.ts","webpack:///src/app/core/services/user-data.service.ts","webpack:///src/app/core/settings/apiSettings.ts","webpack:///src/app/core/settings/globalConstants.ts","webpack:///src/app/core/validators/sameInputVal.ts","webpack:///src/app/core/validators/takenName.ts","webpack:///src/app/core/validators/takenNameValidatorAsync.ts","webpack:///src/app/ingredients/create-edit-ingredient-form/create-edit-ingredient-form.component.ts","webpack:///src/app/ingredients/create-edit-ingredient-form/create-edit-ingredient-form.component.html","webpack:///src/app/ingredients/create-ingredient/create-ingredient.component.ts","webpack:///src/app/ingredients/create-ingredient/create-ingredient.component.html","webpack:///src/app/ingredients/edit-ingredient/edit-ingredient.component.ts","webpack:///src/app/ingredients/edit-ingredient/edit-ingredient.component.html","webpack:///src/app/ingredients/ingredient-card/ingredient-card.component.ts","webpack:///src/app/ingredients/ingredient-card/ingredient-card.component.html","webpack:///src/app/ingredients/ingredient-details/ingredient-details.component.ts","webpack:///src/app/ingredients/ingredient-details/ingredient-details.component.html","webpack:///src/app/ingredients/ingredients.module.ts","webpack:///src/app/ingredients/list-ingredients/list-ingredients.component.ts","webpack:///src/app/ingredients/list-ingredients/list-ingredients.component.html","webpack:///src/app/messages/list-all/list-all.component.ts","webpack:///src/app/messages/list-all/list-all.component.html","webpack:///src/app/messages/message-display-deleted/message-deleted.component.ts","webpack:///src/app/messages/message-display-deleted/message-deleted.component.html","webpack:///src/app/messages/message-display-recieved/message-recieved.component.ts","webpack:///src/app/messages/message-display-recieved/message-recieved.component.html","webpack:///src/app/messages/message-display-sent/message-sent.component.ts","webpack:///src/app/messages/message-display-sent/message-sent.component.html","webpack:///src/app/messages/messages.module.ts","webpack:///src/app/recipes/create-edit-form/create-edit-form.component.ts","webpack:///src/app/recipes/create-edit-form/create-edit-form.component.html","webpack:///src/app/recipes/create/create.component.ts","webpack:///src/app/recipes/create/create.component.html","webpack:///src/app/recipes/edit/edit.component.ts","webpack:///src/app/recipes/edit/edit.component.html","webpack:///src/app/recipes/list-recipes/base/list-recipes.component.ts","webpack:///src/app/recipes/list-recipes/base/list-recipes.component.html","webpack:///src/app/recipes/list-recipes/filters/all/list-allR.component.ts","webpack:///src/app/recipes/list-recipes/filters/commented-recently/list-commentedRecentlyR.component.ts","webpack:///src/app/recipes/list-recipes/filters/highly-rated/list-highlyRatedR.component.ts","webpack:///src/app/recipes/list-recipes/filters/in-category/list-inCategory.component.ts","webpack:///src/app/recipes/list-recipes/filters/ings-contain/list-ingredientsContainingR.component.ts","webpack:///src/app/recipes/list-recipes/filters/most-commented/list-mostCommentedR.component.ts","webpack:///src/app/recipes/list-recipes/filters/most-favoured/list-mostFavouredR.component.ts","webpack:///src/app/recipes/list-recipes/filters/most-rated/list-mostRatedR.component.ts","webpack:///src/app/recipes/list-recipes/filters/most-recent/list-MostRecentR.component.ts","webpack:///src/app/recipes/list-recipes/filters/my-commented/list-myCommentedR.component.ts","webpack:///src/app/recipes/list-recipes/filters/my-favourite/list-myFavourite.ts","webpack:///src/app/recipes/list-recipes/filters/searched/list-searchedR.component.ts","webpack:///src/app/recipes/list-recipes/filters/user-shared/list-userSharedR.component.ts","webpack:///src/app/recipes/list-recipes/recipes-list-exporter.ts","webpack:///src/app/recipes/recipe-cart/recipe-main/recipe-card.component.ts","webpack:///src/app/recipes/recipe-cart/recipe-main/recipe-card.component.html","webpack:///src/app/recipes/recipe-cart/recipe-sub-info-card/recipe-sub-info-card.component.ts","webpack:///src/app/recipes/recipe-cart/recipe-sub-info-card/recipe-sub-info-card.component.html","webpack:///src/app/recipes/recipe-details/recipe-details.component.ts","webpack:///src/app/recipes/recipe-details/recipe-details.component.html","webpack:///src/app/recipes/recipes.module.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/main/main.component.ts","webpack:///src/app/shared/components/main/main.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/store/actions/user.unread.count.action.ts","webpack:///src/app/store/reducers/unread.msg.reducer.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","userInfo","canActivate","children","data","outlet","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","userUnread","positionClass","preventDuplicates","declarations","providers","bootstrap","AuthModule","LoginComponent","router","authService","fb","toastrService","messageService","store","lf","buildForm","toastrConfig","closeButton","name","controls","touched","invalid","group","required","minLength","password","console","log","values","value","login","subscribe","r","getUserInfo","success","umail","navigate","error","submitLogin","ProfileEditComponent","route","userDataService","toastr","rf","takenEmails","user","snapshot","patchValue","gender","valueChanges","avatarPicture","setValue","getNextItem","avatarImg","getPreviousItem","pattern","names","email","ufo","maxLength","description","checkUserNameOrEmailTaken","answer","emailTaken","push","updateValueAndValidity","sendDataToAPI","updateUserData","userName","submitEdit","prevPicture","nextPicture","ProfileInfoComponent","addressTitles","male","female","isAuthor","myUserName","amBlocked","iblocked","blockedUserNames","includes","blocked","iBlockedUser","blockOption","nativeElement","checked","changeBlockedStatus","updateToken","t","mf","submitMsg","msg","reset","signalR","updateUserUnreadCount","static","RegisterComponent","takenUserNames","username","userNameTaken","register","submitRegister","UserSmallInfoComponent","dateConvert","dateOfCreation","DefaultFormater","CategoriesModule","CategoryTreeComponent","_transformer","node","level","authorId","hasRecipes","expandable","length","treeControl","treeFlattener","dataSource","hasChild","_","chosenId","addEvent","deleteEvent","editEvent","expandSelf","collapseAll","allNodes","dataNodes","find","x","i","indexOf","current","expand","parentCollection","lineage","familyTreeOfNodeId","result","forEach","parentId","parentNode","getParentNodeById","updateTree","getNodeById","parentIdBefore","getParentId","deleteNode","addNode","targetIndex","splice","pop","nodeId","slice","filter","selectedCategory","pipe","expandParents","isAuthenticated","isAdmin","canEdit","next","pId","emit","v","getValue","TREE_DATA","CreateEditFormComponent","catService","btnClickEvent","abortEvent","_category","namesAllowed","subscriptions","categorie$","getAllMini","form","get","errName","getCtrl","errors","ctrl","valid","validators","nameTaken","bind","updateOn","parentCategoryId","navigateTreeEvent","closed","unsubscribe","pristine","compareObjects","_settings","submitForm","abort","CreateComponent","addNodeEvent","settings","create","headline","submitBtnTitle","createNewCategory","DetailsComponent","category","timeElapsed","dateOfLastEdit","authorUserName","recipesCount","hasChildren","EditComponent","_categoryId","edited","editCategory","ownCategoryId","getEditDetails","MainBoardCategoriesComponent","dialog","activatedRoute","categories","actionLocked","action","dataObj","info$","createInfo","editInfo","url","toLowerCase","isNaN","params","getDetails","tree","getThreeStructure","editNode","dialogRef","open","width","question","picUrl","positiveAnswerBtnName","negativeAnswerBtnName","afterClosed","deleteCategoryById","err","CommentComponent","commentService","editModeOn","originalContent","changeLikesEvent","changeContentEvent","deleteCommentEvent","comment","authorCookRank","authorAvatarPicture","dateAdded","dateModified","content","likers","disLikers","isLikeAble","setVote","isDislikeAble","editedContent","Date","now","commentStatus","editContent","editModeSwitch","recipeAuthorUserName","giveLike","giveDisLike","CommentsModule","ListCommentsComponent","spinner","isLoading","endReached","page","comments","scrolSayLoad","target","scrollHeight","scrollTop","clientHeight","fetchComments","monitorComments","show","getCommentsForRecipe","recipeId","coms","add","hide","isLoggedIn","newComment","postComment","timeNow","newCommentForDisplay","myInfo","cookRank","avPic","addComment","status","changeCommentVote","changeCommentContent","del","removeComment","onScroll","DialogQuestionComponent","close","CoreModule","splitArrToClasses","str","split","ClassIfClassDirective","el","rules","test","classList","updateClasses","setTimeout","elmntClassList","currentClassState","getClassyRules","provided","some","contains","classesToRemove","remove","classesToAdd","map","CookRank","Gender","MeasureTypes","OriginTypes","RecipeDifficulty","AuthorizedOnlyGuard","state","providedIn","AuthInterceptor","exp","clearUserData","registerUser","logInUser","handle","evnt","body","storeToken","clone","setHeaders","Authorization","getToken","modules","MaterialModule","HTMLRaw","sanitizer","bypassSecurityTrustHtml","pure","SafePipe","bypassSecurityTrustResourceUrl","IngredientEditResolver","ingredientService","getEditDataById","RecipeDetailsResolver","recipeService","paramMap","RecipeEditDataResolver","UserDataProfileEditResolver","udService","getUserInfoForEditing","UserDataResolver","getUserInfoByUserName","AuthService","http","localStorage","getItem","post","UserName","Email","ud","userData","FirstName","firstName","Password","AvatarPicture","LastName","lastName","Description","UserNameOrEmail","clear","parseJwt","lr","isSuccessfull","authToken","token","base64Url","base64","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","join","tInfo","JSON","parse","_id","unique_name","fullName","roles","setItem","CategoryService","nameUsed","base","delete","put","CommentsService","pageNum","getAllForRecipe","like","contentStatus","patch","pad2","num","dateFormats","defaultformater","d","getDate","getMonth","getFullYear","getHours","getMinutes","CustomDateFormats","convertToCurrentDateTime","date","offsetHours","getTimezoneOffset","setHours","DateTimeCStoJS","symbol","csDate","shift","HelperService","toUpperCase","substr","enumeration","ent","Object","entries","time","months","timeDifference","hr","Math","floor","setUTCSeconds","getDay","obj","key","Number","fixJsonNumbers","arr","currentItem","index","formatFn","obj1","obj2","stringify","appJsonHeader","headers","videoLinkMake","IngredientService","getRecipeIngredients","phrase","getCardsTotalCount","chkNameTaken","getCards","essential","editGet","editValue","ids","getNamesByIds","MessageService","recieverId","messageObj","senderId","messageId","sentMessages","RecipeService","criteria","val","getMinified","getMinifiedPrivate","favUnvaf","score","setRating","recipe","responseType","edit","SignalRNewMessagesService","unreadCount","startConnection","hubConnection","withUrl","build","start","invoke","monitorChange","catch","on","SignalRRecipeDetailsService","recipeMonitored","commentsMonitored","rec","startListening","newFragment","newPatch","unshift","commentIndex","findIndex","stat","commentFd","enqueueComment","deleteCommentById","st","setCommentVotes","setCommentContent","UserDataService","userProfileData","IrritatorUserName","setBlocking","DefendorUserName","dataWithPassword","myblockers","basePath","authPaths","userDataPaths","uName","submitEdittedData","messagePaths","recipePaths","pNum","crit","categoryPaths","ignredientPaths","commentsPaths","minLengthFields","maxLengthFields","avImages","sameFieldsValidator","valueFunc","control","takenValueValidator","takenValues","takenNames","takenNameValidatorAsync","isNameTakenMethod","allowedNonChecked","caseInsensitive","res_val","res_inv","res_nocheck","answ","CreateEditIngredientFormComponent","ingService","_ingredient","measureTypes","getEnumOptions","originTypes","sort","a","b","isEssential","measureType","origin","pic","opacity","transform","animations","CreateIngredientComponent","createIngredient","outlets","EditIngredientComponent","ingredient","editIngredient","IngredientCartComponent","isChosen","usageCount","isVegan","ingrIdSelected","loadIngredientInfo","IngredientDetailsComponent","getIngredientDetails","det","deleteIngredientById","isEditAuthorised","lastModified","IngredientsModule","ListIngredientsComponent","cards","essentials","loading","nonEssentials","resultsFd","pageCappacity","indexLetters","monitorForm","enable","disable","filterForm","trackerSubj","getCardsMaxCount","formData","res","fetchNonEssentials","fetchEssentials","getEssentialIngCards","getNonEssentialIngsCards","urlChilds","setLocks","ListAllComponent","all$","nonDeleted$","deleted$","blockedUsers$","blockerUsers$","sent$","resetDeletedNonDeletedStreams","getSentMessages","getBlockedUserInfos","getBlockerUserInfos","getRecievedMessages","isDeleted","markReadMessage","isSeen","deleteMessage","MessageDeletedComponent","expanded","message","showHideContent","MessageRecievedComponent","_mesg","senderUserName","recieverUserName","recieverAvatarPicture","senderAvatarPicture","openUnreadMessageEmitter","deleteMessageEmitter","showBlockInfo","m","MessageSentComponent","MessagesModule","ingredients","_recipe","SubmitEvent","diffGrades","formArrs","pictures","undefined","tags","addIngredient","addPicture","addTag","ctr","removeAt","tagName","ing","ammount","min","usedIds","categoryId","mainPicture","videoLink","difficulty","array","setFormArrs","setErrors","hasError","loadData","lastIndexOf","submitRecipe","CreateRecipeComponent","newRecipe","isSame","el1","el2","EditRecipeComponent","singalRService","editRecipe","patchValueForSignalR","sendSignalRData","childForm","ings","closeStreams","patchRecipeData","finally","stopConnection","ListRecipesComponent","recipesContainer","fetched","notFound","loadingMethod","met","fetchRecipes","startLoadingInfo","stopLoadingInfo","document","window","scrollY","innerHeight","ListAllRComponent","getRecipes","template","ListCommentedRecentlyRComponent","ListHighlyRatedRComponent","ListInCategoryRComponent","ListIngredientsContainingRComponent","ingIds","getIngredientNames","ListMostCommentedRComponent","ListMostFavouredRComponent","ListMostRatedRComponent","ListMostRecentRComponent","ListMyCommentedRComponent","getPrivateRecipes","ListMyFavouriteRComponent","ListSearchedRComponent","method","ListUserSharedRComponent","RecipeCartComponent","subInfo","rating","commentsCount","ingredientsCount","fans","infoShown","timeDelay","displayInfo","hideInfo","RecipeSubInfoCardComponent","RecipeDetailsComponent","ratingNames","lastSpace","choise","myVote","rateRecipe","myVoting","votes","myName","vote","favUnfavRecipe","i_favedR","favorizers","n","meaningfullVotes","currentRating","reduce","acc","round","halfStar","positive","Array","lacking","ceil","overal","voterCount","avRating","ratingName","mv","makeVote","favUnfav","recipeListings","RecipesModule","FooterComponent","year","setInterval","HeaderComponent","search","MainComponent","chupakabra","getChupakabra","SharedModule","SET_UNR_MESSAGE_COUNT","RESET_UNR_MESSAGE_COUNT","INCREMENT_UNR_MESSAGE_COUNT","SetMessageCount","payload","type","ResetMessageCount","IncrementMessageCount","initialValue","unreadMessagesCount","unreadMsgsReducer","setUnreadMessagesCountForUser","addNewUnreadMessage","resetUserUnreadMessages","userUnrMessages","foundUser","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { MainComponent } from './shared/components/main/main.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { ProfileInfoComponent } from './auth/profile-info/profile-info.component';\nimport { UserDataResolver } from './core/resolvers/user-data.resolver';\nimport { ProfileEditComponent } from './auth/profile-edit/profile-edit.component';\nimport { UserDataProfileEditResolver } from './core/resolvers/user-data-profile-edit.resolver';\nimport { ListAllComponent } from './messages/list-all/list-all.component';\nimport { AuthorizedOnlyGuard } from './core/guards/authorized.only';\nimport { RecipeDetailsComponent } from './recipes/recipe-details/recipe-details.component';\nimport { RecipeDetailsResolver } from './core/resolvers/recipe-details-resolver';\nimport { CreateRecipeComponent } from './recipes/create/create.component';\nimport { RecipeEditDataResolver } from './core/resolvers/recipe-edit-data-resolver';\nimport { EditRecipeComponent } from './recipes/edit/edit.component';\nimport { ListIngredientsComponent } from './ingredients/list-ingredients/list-ingredients.component';\nimport { IngredientDetailsComponent } from './ingredients/ingredient-details/ingredient-details.component';\nimport { CreateIngredientComponent } from './ingredients/create-ingredient/create-ingredient.component';\nimport { EditIngredientComponent } from './ingredients/edit-ingredient/edit-ingredient.component';\nimport { IngredientEditResolver } from './core/resolvers/ingredient-edit-data-resolver';\nimport { ListAllRComponent, ListMostRecentRComponent, ListMostCommentedRComponent, ListCommentedRecentlyRComponent, ListHighlyRatedRComponent, ListMostRatedRComponent, ListMostFavouredRComponent, ListSearchedRComponent, ListUserSharedRComponent, ListMyFavouriteRComponent, ListMyCommentedRComponent, ListIngredientsContainingRComponent } from './recipes/list-recipes/recipes-list-exporter';\nimport { MainBoardCategoriesComponent } from './categories/main-board/main-board-categories.component';\nimport { ListInCategoryRComponent } from './recipes/list-recipes/filters/in-category/list-inCategory.component';\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/index\" },\n  { path: \"index\", pathMatch: \"full\", component: MainComponent },\n  { path: \"authentication/register\", component: RegisterComponent },\n  { path: \"authentication/login\", component: LoginComponent },\n  {\n    path: \"user-data/profile/:userName\", component: ProfileInfoComponent,\n    resolve: { userInfo: UserDataResolver }\n  },\n  {\n    path: \"user-data/edit-profile\", component: ProfileEditComponent,\n    resolve: { userInfo: UserDataProfileEditResolver }\n  },\n\n  {\n    path: \"message-box\", component: ListAllComponent,\n    canActivate: [AuthorizedOnlyGuard]\n  },\n\n  {\n    path: \"recipes\",\n    children: [\n      {\n        path: \"\", pathMatch: \"full\",\n        redirectTo: \"/all\"\n      },\n      {\n        path: \"all\",\n        component: ListAllRComponent,\n      },\n\n      {\n        path: \"ing-contain/:ingids\",\n        component: ListIngredientsContainingRComponent,\n      },\n      {\n        path: \"category/:id\",\n        component: ListInCategoryRComponent,\n      },\n      {\n        path: \"recent\",\n        component: ListMostRecentRComponent\n      },\n      {\n        path: \"commented\",\n        component: ListMostCommentedRComponent\n      },\n      {\n        path: \"commented-recently\",\n        component: ListCommentedRecentlyRComponent\n      },\n      {\n        path: \"highly-rated\",\n        component: ListHighlyRatedRComponent\n      },\n      {\n        path: \"most-rated\",\n        component: ListMostRatedRComponent\n      },\n      {\n        path: \"most-favoured\",\n        component: ListMostFavouredRComponent\n      },\n      {\n        path: \"search/:phrase\",\n        component: ListSearchedRComponent\n      },\n      {\n        path: \"user/:username\",\n        component: ListUserSharedRComponent\n      },\n      {\n        path: \"my-favourite\",\n        component: ListMyFavouriteRComponent,\n        canActivate: [AuthorizedOnlyGuard]\n      },\n      {\n        path: \"my-commented\",\n        component: ListMyCommentedRComponent,\n        canActivate: [AuthorizedOnlyGuard]\n      },\n      {\n        path: \"details/:id\",\n        component: RecipeDetailsComponent,\n        resolve: { data: RecipeDetailsResolver }\n      }, {\n        path: \"add-new\",\n        component: CreateRecipeComponent,\n        canActivate: [AuthorizedOnlyGuard]\n      },\n      {\n        path: \"edit/:id\",\n        component: EditRecipeComponent,\n        canActivate: [AuthorizedOnlyGuard],\n        resolve: { data: RecipeEditDataResolver }\n      },\n    ]\n  },\n  {\n    path: \"ingredients\",\n    component: ListIngredientsComponent,\n    children: [\n      {\n        path: \"details/:id\",\n        component: IngredientDetailsComponent,\n        outlet: \"ing-outlet\"\n      },\n      {\n        path: \"edit/:id\",\n        component: EditIngredientComponent,\n        canActivate: [AuthorizedOnlyGuard],\n        resolve: { data: IngredientEditResolver },\n        outlet: \"ing-outlet\"\n      },\n      {\n        path: \"create\",\n        component: CreateIngredientComponent,\n        canActivate: [AuthorizedOnlyGuard],\n        outlet: \"ing-outlet\"\n      },\n    ]\n  },\n  {\n    path: \"categories\",\n    children: [\n      {\n        path: \"\", pathMatch: \"full\",\n        component: MainBoardCategoriesComponent\n      },\n      {\n        path: \"details/:id\",\n        component: MainBoardCategoriesComponent,\n      }\n    ]\n  },\n\n  // {\n  //   path: \"categories\",\n  //   component: MainBoardCategoriesComponent\n  // }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'acr-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AcreshApp';\n \n}\n","<acr-header></acr-header>\n<main>\n<!-- <acr-test></acr-test> -->\n  <router-outlet></router-outlet>\n</main>\n\n\n\n<acr-footer></acr-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { AuthModule } from './auth/auth.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { StoreModule } from '@ngrx/store'\nimport { unreadMsgsReducer } from './store/reducers/unread.msg.reducer';\nimport { MessagesModule } from './messages/messages.module';\nimport { RecipesModule } from './recipes/recipes.module';\nimport { IngredientsModule } from './ingredients/ingredients.module';\nimport { CategoriesModule } from './categories/categories.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RecipesModule,\n    IngredientsModule,\n    CategoriesModule,\n    AppRoutingModule,\n    SharedModule,\n    CoreModule,\n    AuthModule,\n    MessagesModule,\n    StoreModule.forRoot({\n      userUnread: unreadMsgsReducer\n    }),\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(\n      {\n        positionClass: 'toast-top-right',\n        preventDuplicates: true,\n      }\n    )\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { ProfileInfoComponent } from './profile-info/profile-info.component';\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\nimport { UserSmallInfoComponent } from './user-small-info/user-small-info.component';\nimport { CoreModule } from '../core/core.module';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, ProfileInfoComponent, ProfileEditComponent, UserSmallInfoComponent],\n  imports: [\n    CommonModule, ReactiveFormsModule,AppRoutingModule,FormsModule,CoreModule\n  ],\n  exports: [UserSmallInfoComponent]\n})\nexport class AuthModule { }\n","import { Component } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { minLengthFields } from 'src/app/core/settings/globalConstants';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppState } from 'src/app/store/app.state';\nimport { Store } from '@ngrx/store';\nimport { MessageService } from 'src/app/core/services/message.service';\n\n@Component({\n  selector: 'acr-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  public lf: FormGroup = null;\n\n  constructor(private router: Router,\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private toastrService: ToastrService,\n    private messageService: MessageService,\n    private store: Store<AppState>) {\n    this.buildForm();\n    this.toastrService.toastrConfig.positionClass = \"toastr\";\n    this.toastrService.toastrConfig.closeButton = true;\n  }\n\n  isTouchedInvalid(name: string) {\n    return this.lf.controls[name].touched && this.lf.controls[name].invalid;\n  }\n\n  getCtrlErrors(name: string) {\n    return (this.lf.controls[name] && this.lf.controls[name][\"errors\"]) ? this.lf.controls[name][\"errors\"] : null;\n  }\n\n  getCtrl(name: string) {\n    return this.lf.controls[name] || null;\n  }\n\n  buildForm() {\n    this.lf = this.fb.group({\n      \"umail\": [\"\", [Validators.required,Validators.minLength(3)]],\n      \"password\": [\"\", [Validators.required, Validators.minLength(minLengthFields.password)]],\n    })\n  }\n\n  submitLogin() {\n    console.log(this.lf);\n    const values = this.lf.value;\n    this.authService.login(values).subscribe(r => {\n      console.log(\"success\");\n      console.log(\"Avemos Papa:\", this.authService.getUserInfo());\n      this.toastrService.success(\"Successfull login\", `Welcome ${values.umail}`)\n      this.router.navigate([\"\"]);\n    },\n      e => {\n        console.log(\"failure ->\", e.error.error);\n        this.toastrService.error(\"UserName or Password Mismatch!\", \"Invalid Input!\")\n      },\n      () => {\n        console.log(\"completed? wtf\");\n      }\n    )\n  }\n}\n\n","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-3 toastr\"></div>\n        <div class=\"col-6\">\n            <form [formGroup]=\"lf\" (ngSubmit)=\"submitLogin()\">\n                <fieldset>\n                    <h2 class=\"text-center py-3\">LogIn:</h2>\n                    <!-- {{lf.value | json}} -->\n                    <div class=\"form-group\">\n                        <label for=\"umail\">UserName or Email:*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"umail\" placeholder=\"Enter email or username...\"\n                            formControlName=\"umail\" [ngClass]=\"{'is-invalid':isTouchedInvalid('umail')}\">\n                        <div class=\"form-group\">\n                            <label for=\"pwd1\">Password*</label>\n                            <input #pwd type=\"password\" class=\"form-control\" id=\"pwd1\" placeholder=\"Password...\"\n                                formControlName=\"password\" [ngClass]=\"{'is-invalid':isTouchedInvalid('password')}\">\n                        </div>\n                    </div>\n                    <div class=\"row my-4\">\n                        <div class=\"col-12 d-flex justify-content-center\"> <button type=\"submit\" class=\"btn btn-primary\"\n                                [disabled]=\"lf.invalid\">LogIn</button>\n                        </div>\n                        <div class=\"col-12 d-flex justify-content-end\"> \n                            <p class=\"h5 font-italic\">Not a member, <a routerLink=\"/authentication/register\"> Sing Up</a> now!</p>\n    \n                    </div> \n                    </div>\n                </fieldset>\n            </form>\n        </div>\n        <div class=\"col-3 validationMessages\">\n            <div class=\"umailVaildation\" *ngIf=\"isTouchedInvalid('umail')\">\n                <div *ngIf=\"getCtrlErrors('userName')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Username!</strong> Please provide username or email!\n                </div>\n                <!-- <div *ngIf=\"getCtrlErrors('umail')['pattern']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid UserName or Email!</strong> Please provide valid userName or email!\n                </div> -->\n            </div>\n            <div class=\"passwordValidations\" *ngIf=\"isTouchedInvalid('password')\">\n                <div *ngIf=\"getCtrlErrors('password')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Please provide Password!\n                </div>\n                <div *ngIf=\"getCtrlErrors('password')['minlength']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Length of password must be equal or greater than\n                    {{getCtrlErrors('password')['minlength']['requiredLength']}} symbols!\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { avImages, maxLengthFields, minLengthFields } from 'src/app/core/settings/globalConstants';\nimport { takenValueValidator } from 'src/app/core/validators/takenName';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HelperService } from 'src/app/core/services/helper.service';\nimport { UserDataService } from 'src/app/core/services/user-data.service';\nimport { IUserProfileEditData } from 'src/app/core/interfaces/user-data-interfaces/userProfileEditData';\n\n\n@Component({\n  selector: 'acr-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.css']\n})\nexport class ProfileEditComponent {\n  public rf: FormGroup = null;\n  private takenEmails: string[] = [];\n  private user: IUserProfileEditData = null;\n\n  constructor(route: ActivatedRoute, private router: Router, private authService: AuthService, private userDataService: UserDataService, private fb: FormBuilder, private toastr: ToastrService) {\n    this.buildForm();\n    this.user = route.snapshot.data[\"userInfo\"];\n    this.rf.patchValue(this.user);\n    this.rf.controls.gender.valueChanges.subscribe(gender => {\n      this.rf.controls.avatarPicture.setValue(avImages[gender][0]);\n    })\n  }\n\n  nextPicture() {\n    this.rf.controls.avatarPicture.setValue(HelperService.getNextItem(avImages[this.gender], this.avatarImg));\n  }\n\n  prevPicture() {\n    this.rf.controls.avatarPicture.setValue(HelperService.getPreviousItem(avImages[this.gender], this.avatarImg));\n  }\n\n  isTouchedInvalid(name: string) {\n    return this.rf.controls[name].touched && this.rf.controls[name].invalid;\n  }\n\n  getCtrlErrors(name: string) {\n    return (this.rf.controls[name] && this.rf.controls[name][\"errors\"]) ? this.rf.controls[name][\"errors\"] : null;\n  }\n\n  getCtrl(name: string) {\n    return this.rf.controls[name] || null;\n  }\n\n  get gender(): string {\n    return this.rf.value.gender;\n  }\n  get avatarImg(): string {\n    return this.rf.value.avatarPicture;\n  }\n\n  buildForm() {\n    this.rf = this.fb.group({\n      \"userName\": \"\",\n      \"firstName\": [\"\", [Validators.required, Validators.pattern(`^[^\\\\d\\\\^\\\\$\\\\&\\\\+\\\\,\\\\:\\\\;\\\\=\\\\?\\\\@\\\\#\\\\|\\\\<\\\\>\\\\.\\\\^\\\\*\\\\(\\\\)\\\\%\\\\!\\\\-\\\\\\\\\\\\/\\\\]\\\\[\\\\{\\\\}]{1,${maxLengthFields.names}}$`)]],\n      \"lastName\": [\"\", [Validators.pattern(`^[^\\\\d\\\\^\\\\$\\\\&\\\\+\\\\,\\\\:\\\\;\\\\=\\\\?\\\\@\\\\#\\\\|\\\\<\\\\>\\\\.\\\\^\\\\*\\\\(\\\\)\\\\%\\\\!\\\\-\\\\\\\\\\\\/\\\\]\\\\[\\\\{\\\\}]{1,${maxLengthFields.names}}$`)]],\n      \"gender\": [\"ufo\", [Validators.required]],\n      \"email\": [\"\", [Validators.required, Validators.email, takenValueValidator(this.takenEmails)]],\n      \"password\": [\"\", [Validators.required, Validators.minLength(minLengthFields.password)]],\n      \"avatarPicture\": [avImages.ufo[0], [Validators.required]],\n      \"description\": [\"\", [Validators.maxLength(maxLengthFields.description)]],\n    });\n\n  }\n\n  submitEdit() {\n    console.log(this.rf);\n    const values = this.rf.value;\n        if (this.user.email !== values.email) {\n      this.authService.checkUserNameOrEmailTaken(values).subscribe(answer => {\n        if (answer.emailTaken) {\n          this.takenEmails.push(values.email)\n          this.rf.controls.email.updateValueAndValidity();\n          return;\n        }\n        this.sendDataToAPI(values);\n      })\n    } else {\n      this.sendDataToAPI(values);\n    }\n  }\n\n  private sendDataToAPI(values) {\n    this.userDataService.updateUserData(values).subscribe(\n      () => {\n        this.toastr.success(`Successfully modified profile info`, \"Success!\")\n        this.router.navigate([`/user-data/profile/${values.userName}`]);\n      },\n      (e) => {\n        console.log(e)\n        this.toastr.error(\"Incorrect password!\", \"Failure\")\n      })\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-3\"></div>\n        <div class=\"col-6\">\n            <form [formGroup]=\"rf\" (ngSubmit)=\"submitEdit()\">\n                <fieldset>\n                    <h2 class=\"text-center py-3\">Edit Profile</h2>\n                    <!-- {{rf.value | json}} -->\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-3\">\n                            <label>Gender:</label>\n                            <div class=\"form-check-inline\">\n                                <div class=\"form-check px-0\">\n                                    <label class=\"form-check-label\">\n                                        <input type=\"radio\" class=\"form-check-input mx-0\" formControlName=\"gender\"\n                                            id=\"optionsRadios1\" value=\"male\">\n                                        Male\n                                    </label>\n                                </div>\n                                <div class=\"form-check px-1 mx-2\">\n                                    <label class=\"form-check-label\">\n                                        <input type=\"radio\" class=\"form-check-input mx-0\" formControlName=\"gender\"\n                                            id=\"optionsRadios2\" value=\"female\">\n                                        Female\n                                    </label>\n                                </div>\n                                <div class=\"form-check px-0\">\n                                    <label class=\"form-check-label \">\n                                        <input type=\"radio\" class=\"form-check-input mx-0\" formControlName=\"gender\"\n                                            id=\"optionsRadios3\" value=\"ufo\">\n                                        UFO\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"picture-nav text-center pt-2 pl-2\">\n                                <span (click)=\"prevPicture()\"><i class=\"far fa-arrow-alt-circle-left h6\"></i></span>\n                                &nbsp; &nbsp;\n                                <span (click)=\"nextPicture()\"> <i class=\"far fa-arrow-alt-circle-right h6\"></i></span>\n                            </div>\n                        </div>\n                        <div class=\"col-3\">\n                            <div class=\"form-group\">\n                                <label for=\"userName\">UserName:</label>\n                                <input type=\"text\" class=\"form-control\" id=\"userName\" aria-describedby=\"userNameHelp\"\n                                    formControlName=\"userName\" readonly=\"\">\n                                <small id=\"userNameHelp\" class=\"form-text text-muted\">Visible for other users</small>\n                            </div>\n\n                        </div>\n                        <div class=\"col-3\">\n                            <div class=\"form-group\">\n                                <label for=\"firstName\">First Name*</label>\n                                <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Fill your name...\"\n                                    formControlName=\"firstName\"\n                                    [ngClass]=\"{'is-invalid':isTouchedInvalid('firstName')}\">\n                            </div>\n                        </div>\n                        <div class=\"col-3\">\n                            <div class=\"form-group\">\n                                <label for=\"userName\">Last Name</label>\n                                <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"Optional...\"\n                                    formControlName=\"lastName\" [ngClass]=\"{'is-invalid':isTouchedInvalid('lastName')}\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-4\">\n                            <img #avatarPreview class=\"img-thumbnail rounded\" alt=\"profilePicture\" *ngIf=\"rf\" [src]=\"avatarImg\">\n                        </div>\n                        <div class=\"col-7\">\n                            <div class=\"form-group\">\n                                <label for=\"emailAdr\">Email address</label>\n                                <input type=\"email\" class=\"form-control\" id=\"emailAdr\" aria-describedby=\"emailHelp\"\n                                    placeholder=\"Enter email...\" formControlName=\"email\"\n                                    [ngClass]=\"{'is-invalid':isTouchedInvalid('email')}\">\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">\n                                    We'll never share your email with anyone else.</small>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"pwd1\">Password*</label>\n                                <input #pwd type=\"password\" class=\"form-control\" id=\"pwd1\" placeholder=\"Provide to verify changes!\"\n                                    formControlName=\"password\" [ngClass]=\"{'is-invalid':isTouchedInvalid('password')}\">\n                            </div>\n                            <!-- <div class=\"form-group\">\n                                <label for=\"pwd2\">New Password*</label>\n                                <input type=\"password\" class=\"form-control\" id=\"pwd2\" placeholder=\"Password again...\"\n                                    formControlName=\"rePassword\"\n                                    [ngClass]=\"{'is-invalid':isTouchedInvalid('rePassword')}\">\n                            </div> -->\n                        </div>\n                    </div>\n                    <div class=\"form-group pt-2\">\n                        <label for=\"exampleTextarea\">Description About Myself</label>\n                        <textarea class=\"form-control\" id=\"exampleTextarea\" rows=\"2\"\n                            placeholder=\"Write something if you feel the need...\"\n                    formControlName=\"description\">{{getCtrl(\"description\").value}}</textarea>\n                    </div>\n                    <div class=\"row my-4\">\n                        <div class=\"col-12 d-flex justify-content-center\"> <button type=\"submit\" class=\"btn btn-primary\"\n                                [disabled]=\"rf.invalid\">Edit Info</button>\n                        </div>\n                    </div>\n                </fieldset>\n            </form>\n        </div>\n        <div class=\"col-3 validationMessages\">\n             <div class=\"firstNameValidations\" *ngIf=\"isTouchedInvalid('firstName')\">\n                <div *ngIf=\"getCtrlErrors('firstName')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid First Name!</strong> Please provide first Name!\n                </div>\n                <div *ngIf=\"getCtrlErrors('firstName')['pattern']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid First Name!</strong> First Name can not unallowed symbols!\n                </div>\n            </div>\n            <div class=\"lastNameValidations\" *ngIf=\"isTouchedInvalid('lastName')\">\n                <div *ngIf=\"getCtrlErrors('lastName')['pattern']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Last Name!</strong> Last Name can not unallowed symbols!\n                </div>\n            </div>\n\n            <div class=\"lastNameValidations\" *ngIf=\"isTouchedInvalid('email')\">\n                <div *ngIf=\"getCtrlErrors('email')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Email!</strong> Please provide email!\n                </div>\n                <div *ngIf=\"getCtrlErrors('email')['email']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Email!</strong> Please provide valid email!\n                </div>\n                <div *ngIf=\"getCtrlErrors('email')['valueTaken']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Email!</strong> Email \n                    <strong> {{getCtrlErrors('email')['valueTaken']}}</strong> is already used please provide another!\n                </div>\n            </div>\n\n            <div class=\"passwordValidations\" *ngIf=\"isTouchedInvalid('password')\">\n                <div *ngIf=\"getCtrlErrors('password')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Please provide Password!\n                </div>\n                <div *ngIf=\"getCtrlErrors('password')['minlength']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Length of password must be equal or greater than\n                    {{getCtrlErrors('password')['minlength']['requiredLength']}} symbols!\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { NgForm } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { UserDataService } from 'src/app/core/services/user-data.service';\nimport { IUserProfileData } from 'src/app/core/interfaces/user-data-interfaces/uprofile';\nimport { MessageService } from 'src/app/core/services/message.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'acr-profile-info',\n  templateUrl: './profile-info.component.html',\n  styleUrls: ['./profile-info.component.css']\n})\nexport class ProfileInfoComponent {\n\n  public addressTitles = {\n    male: \"m-r. \",\n    female: \"m-s. \",\n    ufo: \"\",\n  }\n\n  public isAuthor = (): boolean => this.myUserName == this.user.userName;\n  public amBlocked = false;\n  public iblocked = false;\n\n  @ViewChild(\"blockOpt\", { static: false })\n  blockOption: ElementRef;\n\n  public user: IUserProfileData = null;\n\n  public myUserName: string;\n  constructor(private toastr: ToastrService, route: ActivatedRoute, private authService: AuthService, private userDataService: UserDataService, private messageService: MessageService) {\n    this.user = route.snapshot.data[\"userInfo\"];\n    this.myUserName = authService.getUserInfo().userName;\n    this.amBlocked = this.user.blockedUserNames.includes(this.myUserName);\n    this.iblocked = this.authService.getUserInfo().blocked.includes(this.user.userName);\n  }\n\n   ngOnDestroy() {\n    if (!this.isAuthor()) {\n      const iBlockedUser = this.authService.getUserInfo().blocked.includes(this.user.userName);\n      if (this.blockOption.nativeElement.checked && !iBlockedUser ||\n        !this.blockOption.nativeElement.checked && iBlockedUser) {\n        this.userDataService.changeBlockedStatus(this.user.userName).subscribe(() => {\n          this.authService.updateToken().subscribe((t) => { console.log(`new token: ${t}`) })\n        });\n      }\n    }\n  }\n\n  submitMessage(mf: NgForm) {\n    if(mf.invalid) return;\n    this.messageService.submitMsg(mf.value.msg, this.user.id).subscribe(() => {\n      this.toastr.success(\"Message Sent\", \"Success\");\n      mf.reset();\n      this.messageService.signalR.updateUserUnreadCount(this.user.userName)\n    }, () => this.toastr.error(`Message Not Sent`, \"Failure\"))\n    console.log(mf);\n  }\n\n\ns\n}","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-3\"></div>\n        <div class=\"col-6\">\n            <h2 class=\"text-center py-3\" *ngIf=\"!isAuthor()\"><i class=\"fas fa-info-circle\"></i> &nbsp; User Info:</h2>\n            <h2 class=\"text-center py-3\" *ngIf=\"isAuthor()\"><i class=\"fas fa-info-circle\"></i> &nbsp; My Profile Info:</h2>\n            <!-- {{user | json}} -->\n            <div class=\"row\">\n                <div class=\"row container-fluid justify-content-start pb-2\">\n                    <div class=\"col-5 h5 ml-2\">\n                        {{user.userName}}\n                    </div>\n                    <div class=\"col-6 h5 pl-4 ml-2 font-italic \">\n                        {{user.cookRank}}\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-4 px-4\">\n                            <img class=\"img-thumbnail rounded-lg img-fluid\" alt=\"profilePicture\" [src]=\"user.avPic\">\n                        </div>\n                        <div class=\"col-7\">\n                            <table class=\"table table-borderless mb-0\">\n                                <tbody>\n                                    <tr>\n                                        <td class=\"py-1 my-1\">Name:</td>\n                                        <td class=\"py-1 my-1\">{{addressTitles[user.gender]}} {{user.firstName}}\n                                            {{user.lastName}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"py-1 my-1\">Gender:</td>\n                                        <td class=\"py-1 my-1\">{{user.gender}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"py-1 my-1\">Email</td>\n                                        <td class=\"py-1 my-1\">{{user.email}}</td>\n                                    </tr>\n                                    <tr *ngIf=\"user.recipesShared!==0\">\n                                        <td class=\"py-1 my-1\">Recipes Shared:</td>\n                                        <td class=\"py-1 my-1\">\n                                            <a [routerLink]=\"['/recipes/user/',user.userName]\">{{user.recipesShared}}\n                                                <i class=\"fas fa-scroll\"></i></a></td>\n\n                                    </tr>\n                                    <tr>\n                                        <td class=\"py-1 my-1\">About Me:</td>\n                                </tbody>\n                            </table>\n                            <div class=\"form-group\">\n                                <textarea class=\"form-control\" readonly=\"\" id=\"exampleFormControlTextarea1\" rows=\"5\">\n                        {{user.description}}\n                    </textarea>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row mt-4 justify-content-between\" *ngIf=\"isAuthor(); else visitor\">\n                <div class=\"col-5\"><a routerLink=\"/authentication/profile/download\">Download</a>&nbsp; My Personal Data\n                    As JSON</div>\n                <div class=\"col-5\">\n                    <a routerLink=\"/user-data/edit-profile\" class=\"btn btn-primary float-right\">Edit My Profile</a>\n                </div>\n            </div>\n            <ng-template #visitor>\n                <form #mf=\"ngForm\" (ngSubmit)=\"submitMessage(mf)\">\n                    <div class=\"row mt-2 justify-content-between\">\n                        <div class=\"col-9\">\n                            <div class=\"form-group\">\n                                <label for=\"msg\">Write a message:</label>\n                                <textarea name=\"msg\" required minlength=\"4\" #msg=\"ngModel\" ngModel class=\"form-control\"\n                                    [disabled]=\"amBlocked\" id=\"msg\" rows=\"3\" placeholder=\"message...\"></textarea> </div>\n                        </div>\n                        <div class=\"col-3\">\n                            <div class=\"row\">\n                                <div class=\"form-group col-12\">\n                                    <div class=\"custom-control custom-switch pt-4\">\n                                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\"\n                                        [checked]=\"iblocked\" #blockOpt>\n                                        <label class=\"custom-control-label\" for=\"customSwitch1\"\n                                            [ngClass]=\"{'text-danger': blockOpt.checked, 'text-success': !blockOpt.checked}\"><i\n                                            class=\"fas fa-biohazard\"></i>\n                                            Block User Messages!</label>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group col-12\">\n                                        <button type=\"submit\" class=\"btn btn-info\"\n                                        [ngClass]=\"{'disabled': mf.invalid,'not-allowed':amBlocked}\"> Send\n                                        Message</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                    <div *ngIf=\"msg.touched && msg.invalid\">\n                        <div class=\"alert alert-danger\" *ngIf=\"msg.errors.required\">Please provide message if you\n                            wish to send...</div>\n                        <div class=\"alert alert-danger\" *ngIf=\"msg.errors.minlength\">Please provide message with\n                            length {{msg.errors.minlength.requiredLength}}</div>\n                    </div>\n            </ng-template>\n\n        </div>\n        <div class=\"col-3\"></div>\n    </div>","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { takenValueValidator } from 'src/app/core/validators/takenName';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { Router } from '@angular/router';\nimport { sameFieldsValidator } from 'src/app/core/validators/sameInputVal';\nimport { avImages, maxLengthFields, minLengthFields } from 'src/app/core/settings/globalConstants';\nimport { ToastrService } from 'ngx-toastr';\nimport { HelperService } from 'src/app/core/services/helper.service';\n\n@Component({\n  selector: 'acr-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  public rf: FormGroup = null;\n  private takenUserNames: string[] = [];\n  private takenEmails: string[] = [];\n\n  constructor(private router: Router, private authService: AuthService, private fb: FormBuilder, private toastr: ToastrService) {\n    this.buildForm();\n    this.rf.controls.gender.valueChanges.subscribe(gender => {\n      this.rf.controls.avatarPicture.setValue(avImages[gender][0]);\n    })\n  }\n\n  nextPicture() {\n    this.rf.controls.avatarPicture.setValue(HelperService.getNextItem(avImages[this.gender], this.avatarImg));\n  }\n\n  prevPicture() {\n    this.rf.controls.avatarPicture.setValue(HelperService.getPreviousItem(avImages[this.gender], this.avatarImg));\n  }\n\n  isTouchedInvalid(name: string) {\n    return this.rf.controls[name].touched && this.rf.controls[name].invalid;\n  }\n\n  getCtrlErrors(name: string) {\n    return (this.rf.controls[name] && this.rf.controls[name][\"errors\"]) ? this.rf.controls[name][\"errors\"] : null;\n  }\n\n  getCtrl(name: string) {\n    return this.rf.controls[name] || null;\n  }\n\n  get gender(): string {\n    return this.rf.value.gender;\n  }\n  get avatarImg(): string {\n    return this.rf.value.avatarPicture;\n  }\n\n  buildForm() {\n    this.rf = this.fb.group({\n      \"userName\": [\"\", [Validators.required, Validators.minLength(minLengthFields.username), takenValueValidator(this.takenUserNames)]],\n      \"firstName\": [\"\", [Validators.required, Validators.pattern(`^[^\\\\d\\\\^\\\\$\\\\&\\\\+\\\\,\\\\:\\\\;\\\\=\\\\?\\\\@\\\\#\\\\|\\\\<\\\\>\\\\.\\\\^\\\\*\\\\(\\\\)\\\\%\\\\!\\\\-\\\\\\\\\\\\/\\\\]\\\\[\\\\{\\\\}]{1,${maxLengthFields.names}}$`)]],\n      \"lastName\": [\"\", [Validators.pattern(`^[^\\\\d\\\\^\\\\$\\\\&\\\\+\\\\,\\\\:\\\\;\\\\=\\\\?\\\\@\\\\#\\\\|\\\\<\\\\>\\\\.\\\\^\\\\*\\\\(\\\\)\\\\%\\\\!\\\\-\\\\\\\\\\\\/\\\\]\\\\[\\\\{\\\\}]{1,${maxLengthFields.names}}$`)]],\n      \"gender\": [\"ufo\", [Validators.required]],\n      \"email\": [\"\", [Validators.required, Validators.email, takenValueValidator(this.takenEmails)]],\n      \"password\": [\"\", [Validators.required, Validators.minLength(minLengthFields.password)]],\n      \"rePassword\": [\"\", [Validators.required, sameFieldsValidator(() => this.rf ? this.rf.value.password : null)]],// Validators.minLength(minLengths.password)],],// ],\n      \"avatarPicture\": [avImages.ufo[0], [Validators.required]],\n      \"description\": [\"\", [Validators.maxLength(maxLengthFields.description)]],\n    })\n  }\n\n  submitRegister() {\n     const values = this.rf.value;\n    this.authService.checkUserNameOrEmailTaken(values).subscribe(answer => {\n      if (answer.userNameTaken || answer.emailTaken) {\n        if (answer.userNameTaken) {\n          this.takenUserNames.push(values.userName)\n          this.rf.controls.userName.updateValueAndValidity();\n        }\n        if (answer.emailTaken) {\n          this.takenEmails.push(values.email)\n          this.rf.controls.email.updateValueAndValidity();\n        }\n        return;\n      }\n      this.authService.register(values).subscribe(() => {\n        this.toastr.success(`Welcome user ${values.userName}`, \"Successfull Registration!\")\n        this.router.navigate([\"\"]);\n      })\n    })\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-3\"></div>\n        <div class=\"col-6\">\n            <form [formGroup]=\"rf\" (ngSubmit)=\"submitRegister()\">\n                <fieldset>\n                    <h2 class=\"text-center py-3\">Register</h2>\n                    <!-- {{rf.value | json}} -->\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-3\">\n                            <label>Gender:</label>\n                            <div class=\"form-check-inline\">\n                                <div class=\"form-check px-0\">\n                                    <label class=\"form-check-label\">\n                                        <input type=\"radio\" class=\"form-check-input mx-0\" formControlName=\"gender\"\n                                            id=\"optionsRadios1\" value=\"male\">\n                                        Male\n                                    </label>\n                                </div>\n                                <div class=\"form-check px-1 mx-2\">\n                                    <label class=\"form-check-label\">\n                                        <input type=\"radio\" class=\"form-check-input mx-0\" formControlName=\"gender\"\n                                            id=\"optionsRadios2\" value=\"female\">\n                                        Female\n                                    </label>\n                                </div>\n                                <div class=\"form-check px-0\">\n                                    <label class=\"form-check-label \">\n                                        <input type=\"radio\" class=\"form-check-input mx-0\" formControlName=\"gender\"\n                                            id=\"optionsRadios3\" value=\"ufo\">\n                                        UFO\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"picture-nav text-center pt-2 pl-2\">\n                                <span (click)=\"prevPicture()\"><i class=\"far fa-arrow-alt-circle-left h6\"></i></span>\n                                &nbsp; &nbsp;\n                                <span (click)=\"nextPicture()\"> <i class=\"far fa-arrow-alt-circle-right h6\"></i></span>\n                            </div>\n                        </div>\n                        <div class=\"col-3\">\n                            <div class=\"form-group\">\n                                <label for=\"userName\">UserName*</label>\n                                <input type=\"text\" class=\"form-control\" id=\"userName\" aria-describedby=\"userNameHelp\"\n                                    formControlName=\"userName\" placeholder=\"Fill your userName...\"\n                                    [ngClass]=\"{'is-invalid':isTouchedInvalid('userName')}\">\n                                <small id=\"userNameHelp\" class=\"form-text text-muted\">Visible for other users</small>\n                            </div>\n\n                        </div>\n                        <div class=\"col-3\">\n                            <div class=\"form-group\">\n                                <label for=\"firstName\">First Name*</label>\n                                <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Fill your name...\"\n                                    formControlName=\"firstName\"\n                                    [ngClass]=\"{'is-invalid':isTouchedInvalid('firstName')}\">\n                            </div>\n                        </div>\n                        <div class=\"col-3\">\n                            <div class=\"form-group\">\n                                <label for=\"userName\">Last Name</label>\n                                <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"Optional...\"\n                                    formControlName=\"lastName\" [ngClass]=\"{'is-invalid':isTouchedInvalid('lastName')}\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-4\">\n                            <img #avatarPreview class=\"img-thumbnail rounded\" alt=\"profilePicture\" [src]=\"avatarImg\">\n                        </div>\n                        <div class=\"col-7\">\n                            <div class=\"form-group\">\n                                <label for=\"emailAdr\">Email address*</label>\n                                <input type=\"email\" class=\"form-control\" id=\"emailAdr\" aria-describedby=\"emailHelp\"\n                                    placeholder=\"Enter email...\" formControlName=\"email\"\n                                    [ngClass]=\"{'is-invalid':isTouchedInvalid('email')}\">\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">\n                                    We'll never share your email with anyone else.</small>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"pwd1\">Password*</label>\n                                <input #pwd type=\"password\" class=\"form-control\" id=\"pwd1\" placeholder=\"Password...\"\n                                    formControlName=\"password\" [ngClass]=\"{'is-invalid':isTouchedInvalid('password')}\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"pwd2\">Repeat Password*</label>\n                                <input type=\"password\" class=\"form-control\" id=\"pwd2\" placeholder=\"Password again...\"\n                                    formControlName=\"rePassword\"\n                                    [ngClass]=\"{'is-invalid':isTouchedInvalid('rePassword')}\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group pt-2\">\n                        <label for=\"exampleTextarea\">Description About Myself</label>\n                        <textarea class=\"form-control\" id=\"exampleTextarea\" rows=\"2\"\n                            placeholder=\"Write something if you feel the need...\"\n                            formControlName=\"description\"></textarea>\n                    </div>\n                    <div class=\"row my-4\">\n                        <div class=\"col-12 d-flex justify-content-center\"> <button type=\"submit\" class=\"btn btn-primary\"\n                                [disabled]=\"rf.invalid\">Register</button>\n                        </div>\n                    </div>\n                </fieldset>\n            </form>\n        </div>\n        <div class=\"col-3 validationMessages\">\n            <div class=\"userNameValidations\" *ngIf=\"isTouchedInvalid('userName')\">\n                <div *ngIf=\"getCtrlErrors('userName')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Username!</strong> Please provide username!\n                </div>\n                <div *ngIf=\"getCtrlErrors('userName')['minlength']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Username!</strong> Length of username must be equal or greater than\n                    {{getCtrlErrors('userName')['minlength']['requiredLength']}} symbols!\n                </div>\n                <div *ngIf=\"getCtrlErrors('userName')['valueTaken']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Username!</strong> UserName\n                    <strong> {{getCtrlErrors('userName')['valueTaken']}}</strong> is already used please provide another!\n                </div>\n            </div>\n            <div class=\"firstNameValidations\" *ngIf=\"isTouchedInvalid('firstName')\">\n                <div *ngIf=\"getCtrlErrors('firstName')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid First Name!</strong> Please provide first Name!\n                </div>\n                <div *ngIf=\"getCtrlErrors('firstName')['pattern']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid First Name!</strong> First Name can not unallowed symbols!\n                </div>\n            </div>\n            <div class=\"lastNameValidations\" *ngIf=\"isTouchedInvalid('lastName')\">\n                <div *ngIf=\"getCtrlErrors('lastName')['pattern']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Last Name!</strong> Last Name can not unallowed symbols!\n                </div>\n            </div>\n\n            <div class=\"lastNameValidations\" *ngIf=\"isTouchedInvalid('email')\">\n                <div *ngIf=\"getCtrlErrors('email')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Email!</strong> Please provide email!\n                </div>\n                <div *ngIf=\"getCtrlErrors('email')['email']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Email!</strong> Please provide valid email!\n                </div>\n                <div *ngIf=\"getCtrlErrors('email')['valueTaken']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Email!</strong> Email \n                    <strong> {{getCtrlErrors('email')['valueTaken']}}</strong> is already used please provide another!\n                </div>\n            </div>\n\n            <div class=\"passwordValidations\" *ngIf=\"isTouchedInvalid('password')\">\n                <div *ngIf=\"getCtrlErrors('password')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Please provide Password!\n                </div>\n                <div *ngIf=\"getCtrlErrors('password')['minlength']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Length of password must be equal or greater than\n                    {{getCtrlErrors('password')['minlength']['requiredLength']}} symbols!\n                </div>\n            </div>\n\n            <!-- {{getCtrlErrors('rePassword')|json}} -->\n            <div class=\"repasswordValidations\" *ngIf=\"isTouchedInvalid('rePassword')\">\n                <div *ngIf=\"getCtrlErrors('rePassword')['required']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Please provide Password!\n                </div>\n                <div *ngIf=\"getCtrlErrors('rePassword')['minlength']\" class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Length of password must be equal or greater than\n                    {{getCtrlErrors('rePassword')['minlength']['requiredLength']}} symbols!\n                </div>\n\n                <div *ngIf=\"getCtrlErrors('rePassword')['mismatch']\"\n                    class=\"alert alert-dismissible alert-danger\">\n                    <strong>Invalid Password!</strong> Passwords mismatch!\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ISmallUserInfo } from 'src/app/core/interfaces/user-data-interfaces/userSmallData';\nimport { HelperService, CustomDateFormats } from 'src/app/core/services/helper.service';\n\n@Component({\n  selector: 'acr-user-sm',\n  templateUrl: './user-small-info.component.html',\n  styleUrls: ['./user-small-info.component.css']\n})\nexport class UserSmallInfoComponent implements OnInit {\n\n  @Input()\n  user: ISmallUserInfo = null\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n  get dateOfBlocking(): string {\n    return HelperService.dateConvert(this.user.dateOfCreation, CustomDateFormats.DefaultFormater);\n  }\n}\n","<a [routerLink]=\"['/user-data/profile/', user.userName]\">\n    <div class=\"card mb-3\">\n        <h4 class=\"card-header py-1\">{{user.userName}}</h4>\n        <div class=\"card-body pb-0 pt-2\">\n            <h6 classs=\"card-title\">{{user.cookRank}}</h6>\n        </div>\n        <img class=\"px-1\" style=\"height: 200px; width: 100%; display: block;\" [src]=\"user.avatarPicture\" alt=\"Profile Picture\">\n        <div class=\"card-body py-2\">\n            <p class=\"card-text\"><i class=\"fas fa-ban text-danger\"></i> &nbsp; Blocked On : <span style=\"font-size: small;\">{{dateOfBlocking}}</span></p>\n        </div>\n    </div>\n</a>","import { NgModule } from '@angular/core';\nimport { CoreModule } from '../core/core.module';\n\nimport { CategoryTreeComponent } from './category-tree/category-tree.component';\nimport { CreateEditFormComponent } from './create-edit-form/create-edit-form.component';\nimport { DetailsComponent } from './details/details.component';\nimport { MainBoardCategoriesComponent } from './main-board/main-board-categories.component';\nimport { CreateComponent } from './create/create.component';\nimport { EditComponent } from './edit/edit.component';\n\n\n\n@NgModule({\n  declarations: [MainBoardCategoriesComponent, CategoryTreeComponent, CreateEditFormComponent, DetailsComponent, CreateComponent, EditComponent],\n  imports: [CoreModule]\n})\nexport class CategoriesModule { }\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, Input, EventEmitter, Output, OnInit } from '@angular/core';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CategoryNode } from 'src/app/core/interfaces/categories/CategoryNode';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n/**\n * Category data with nested structure.\n * Each node has a id, name, authorId, hasRecipes, and an optional list of children.\n */\n\n/** Flat node with expandable and level information */\ninterface CategoryFlatNode {\n  id: number,\n  name: string;\n  authorId: string;\n  hasRecipes: boolean;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * @title Tree with flat nodes\n */\n@Component({\n  selector: 'acr-cat-tree',\n  templateUrl: 'category-tree.component.html',\n  styleUrls: ['category-tree.component.css'],\n})\nexport class CategoryTreeComponent implements OnInit {\n  private _transformer = (node: CategoryNode, level: number): CategoryFlatNode => {\n    return {\n      id: node.id,\n      authorId: node.authorId,\n      name: node.name,\n      hasRecipes: node.hasRecipes,\n      level: level,\n      expandable: !!node.children && node.children.length > 0,\n    };\n  }\n\n  treeControl = new FlatTreeControl<CategoryFlatNode>(node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  @Input()\n  set cats(v: CategoryNode[]) {\n    this.dataSource.data = v;\n    //If it category was added or deleted upon refreshing categories it will expand to current!\n    if (this.selectedCategory) this.expandParents(this.selectedCategory.getValue())\n  }\n\n  constructor(private authService: AuthService) { }\n\n  /**Expands only provided id's parents in tree structure and closes everything else...*/\n  public expandParents(id, expandSelf = true) {\n    this.treeControl.collapseAll();\n    if (!this.treeControl || id === null || id <= 0) return;\n    const allNodes = this.treeControl.dataNodes;\n    const node = allNodes.find(x => x.id === id);\n    if (!node) return;\n    let level = node.level;\n    for (let i = allNodes.indexOf(node) - 1; i >= 0; i--) {\n      const current = allNodes[i];\n      if (current.level < level) {\n        level--;\n        this.treeControl.expand(current);\n      }\n      if (level === 0) break;\n    }\n    if (expandSelf && node.expandable) this.treeControl.expand(node);\n  }\n\n  /**Purpose is to provide parentNode in the tree stucture so it can be manipulated or retrieved it's id*/\n  private getParentNodeById(id: number): CategoryNode {\n    let parentCollection: CategoryNode[] = this.dataSource.data;\n    const lineage = this.familyTreeOfNodeId(id);\n    let result: CategoryNode;\n    lineage.forEach(id => {\n      result = parentCollection.find(x => x.id === id);\n      parentCollection = result.children;\n    })\n    return result;\n  }\n\n  private updateTree() { this.dataSource.data = this.dataSource.data }//upon setter flattened_tree is refreshed!\n\n  public addNode(id, parentId, name, hasRecipes = false, authorId = this.authService.getUserInfo().id, children = []) {\n    let node: CategoryNode = { id, name, children, hasRecipes, authorId };\n    let parentCollection: CategoryNode[];\n    if (parentId === null) { parentCollection = this.dataSource.data; }\n    else {\n      const parentNode = this.getParentNodeById(+parentId);\n      parentCollection = parentNode\n        ? parentNode.children.find(x => x.id === +parentId).children\n        : this.dataSource.data.find(x => x.id === +parentId).children\n    }\n    parentCollection.push(node);\n    return this.updateTree();\n  }\n\n  editNode(id, parentId, name) {\n    const node = this.getNodeById(id);\n    const parentIdBefore = this.getParentId(id)\n    if (+parentId === parentIdBefore) {\n      node.name = name;\n      return this.updateTree();\n    }\n    this.deleteNode(id);\n    this.addNode(id, parentId, name, node.hasRecipes, node.authorId, node.children);\n  }\n\n  private getNodeById(id): CategoryNode {\n    const parentNode = this.getParentNodeById(id);\n    if (parentNode) return parentNode.children.find(x => x.id === id);\n    return this.dataSource.data.find(x => x.id === id)\n  }\n\n  /**Returns parentId*/\n  public deleteNode(id: number): number {\n    const parentNode = this.getParentNodeById(id);\n    const parentCollection = parentNode ? parentNode.children : this.dataSource.data;\n    let targetIndex = parentCollection.indexOf(parentCollection.find(x => x.id === id));\n    parentCollection.splice(targetIndex, 1);\n    this.updateTree();\n    return parentNode?.id;\n  }\n\n  /**Returns collection of id's of all parents before seeked child */\n  private familyTreeOfNodeId(id: number) {\n    let result: number[] = [id];\n    while (true) {\n      const parentId = this.getParentId(result[0]);\n      if (parentId) {\n        result = [parentId, ...result];\n        continue;\n      }\n      result.pop();//no need of targetId\n      return result;\n    }\n  }\n\n  private getParentId(nodeId: number): number {\n    if (!this.treeControl || nodeId === null || nodeId <= 0) return null;\n    const allNodes = this.treeControl.dataNodes;\n    const node = allNodes.find(x => x.id === nodeId);\n    if (!node) return null;\n    return allNodes.slice(0, allNodes.indexOf(node)).filter(x => x.level < node.level)?.pop()?.id\n  }\n\n  hasChild = (_: number, node: CategoryFlatNode) => node.expandable;\n\n  @Input()//Only for quick select with display followed!!!\n  selectedCategory: BehaviorSubject<number>\n  chosenId: number = null;\n  ngOnInit() {\n    this.selectedCategory.pipe(delay(0)).subscribe(x => { this.chosenId = x; this.expandParents(x) })\n  }\n\n  get canCreate() { return this.authService.isAuthenticated() }\n  get isAdmin() { return this.authService.isAdmin }\n  canEdit(node: CategoryFlatNode) { return this.authService.isAuthenticated() && (this.isAdmin || this.authService.getUserInfo().id === node.authorId) }\n  canDelete(node: CategoryFlatNode) { return this.canEdit(node) && !node.hasRecipes }\n\n  display(id: number) { this.selectedCategory.next(id) }\n\n  @Output()\n  addEvent: EventEmitter<number> = new EventEmitter();\n  add(pId: number) { this.addEvent.emit(pId); }\n\n  @Output()\n  deleteEvent: EventEmitter<{ name: string, id: number }> = new EventEmitter();\n  askDelete(id: number, name: string) { this.deleteEvent.emit({ id, name }) }\n\n  @Output()\n  editEvent: EventEmitter<number> = new EventEmitter();\n  edit(id: number) { this.editEvent.emit(id) }\n}\n\n/* Example of input structure **/\nconst TREE_DATA: CategoryNode[] = [\n  {\n    name: 'Fruit',\n    id: 1,\n    authorId: 'aaa',\n    hasRecipes: false,\n    children: [\n      { name: 'Apple', id: 2, authorId: 'aaa', hasRecipes: false, },\n      { name: 'Banana', id: 3, authorId: 'aaa', hasRecipes: false, },\n      { name: 'Fruit loops', id: 4, authorId: 'aaa', hasRecipes: false, },\n    ]\n  }, {\n    name: 'Vegetables',\n    id: 5,\n    authorId: 'aaa',\n    hasRecipes: false,\n    children: [\n      {\n        name: 'Green',\n        id: 6,\n        authorId: 'aaa',\n        hasRecipes: false,\n        children: [\n          { name: 'Broccoli', id: 7, authorId: 'd0927f1d-9762-40ad-9fdd-90652911fea1', hasRecipes: false, },\n          { name: 'Brussels sprouts', id: 8, authorId: 'aaa', hasRecipes: false, },\n        ]\n      }, {\n        name: 'Orange',\n        id: 9,\n        authorId: 'aaa',\n        hasRecipes: false,\n        children: [\n          { name: 'Pumpkins', id: 10, authorId: 'aaa', hasRecipes: false, },\n          { name: 'Carrots', id: 11, authorId: 'aaa', hasRecipes: false, },\n        ]\n      },\n    ]\n  },\n];","<h4><img class=\"bullet-img\" src=\"../../../assets/imgs/100x100xtree.png\" alt=\"tree\"> Category tree   \n    <span class=\"opt\" *ngIf=\"isAdmin\" (click)=\"add(null)\"\n        mat-raised-button matTooltipPosition=\"above\"\n        matTooltip=\"Add new Head Category\"\n        aria-label=\"create-main category popup\"> \n        <i class=\"fas fa-plus-circle text-success\"></i>\n    </span>\n</h4> \n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n        <!-- use a disabled button to provide padding for tree leaf -->\n        <!-- <button mat-icon-button disabled></button> -->\n        <img class=\"bullet-img\" src=\"../../../assets/imgs/leaf 100x100.png\" alt=\"bottom-category\"> <span [ngClass]=\"{'chosen':node.id===chosenId}\">{{node.name}}</span> \n        <span class=\"opt\" (click)=\"display(node.id)\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'View details for '+node.name\"\n            aria-label=\"details popup\">\n                <i class=\"fas fa-info-circle text-info\"></i> </span>\n        <span class=\"opt\" *ngIf=\"node.hasRecipes\" [routerLink]=\"['/recipes/category',node.id]\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'View recipes for '+node.name\"\n            aria-label=\"recipes popup\">\n                <i class=\"fas fa-scroll text-info\"></i> \n        </span>\n       \n        <span class=\"opt\" *ngIf=\"canCreate\" (click)=\"add(node.id)\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'Add Sub-Category of '+node.name\"\n            aria-label=\"create popup\"> \n                <i class=\"fas fa-plus-circle text-success\"></i>\n        </span>\n\n        <span  *ngIf=\"canEdit(node)\" class=\"opt\" (click)=\"edit(node.id)\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'Edit '+node.name\"\n            aria-label=\"edit popup\">    \n                <i class=\"fas fa-pencil-alt text-primary\"></i> \n        </span>\n        <span  *ngIf=\"canDelete(node)\" class=\"opt\" (click)=\"askDelete(node.id,node.name)\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'Delete category '+node.name\"\n            aria-label=\"delete popup\">\n                <i class=\"fas fa-trash text-danger\"></i> \n        </span>\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n        <button mat-icon-button matTreeNodeToggle attr.aria-label=\"toggle\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n                <img class=\"bullet-img\" src=\"../../../assets/imgs/branch-alt-100x50.png\" alt=\"parrent-category\" [ngClass]=\"{'rotated':treeControl.isExpanded(node)}\">\n\n            </mat-icon>\n        </button>\n        <span [ngClass]=\"{'chosen':node.id===chosenId}\">{{node.name}}</span>  &nbsp;\n        <span class=\"opt\" (click)=\"display(node.id)\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'View details for '+node.name\"\n            aria-label=\"details popup\">     \n                <i class=\"fas fa-info-circle text-info\"></i> \n        </span>\n        <span class=\"opt\" *ngIf=\"node.hasRecipes\" [routerLink]=\"['/recipes/category',node.id]\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'View recipes for '+node.name\"\n            aria-label=\"recipes popup\">\n                <i class=\"fas fa-scroll text-info\"></i> \n        </span>\n        <span class=\"opt\" *ngIf=\"canCreate\" (click)=\"add(node.id)\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'Add Sub-Category of '+node.name\"\n            aria-label=\"create popup\">\n                <i class=\"fas fa-plus-circle text-success\"></i>\n        </span>\n        <span class=\"opt\" *ngIf=\"canEdit(node)\" (click)=\"edit(node.id)\"\n            mat-raised-button matTooltipPosition=\"above\"\n            [matTooltip]=\"'Edit '+node.name\"\n            aria-label=\"edit popup\">\n                <i class=\"fas fa-pencil-alt text-primary\"></i> \n        </span>\n    </mat-tree-node>\n</mat-tree>\n","import { Subscription, Observable } from 'rxjs';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HelperService } from 'src/app/core/services/helper.service';\nimport { CategoryService } from 'src/app/core/services/category.service';\nimport { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { ICategoryCreate } from 'src/app/core/interfaces/categories/ICategoryCreate';\nimport { ICategoryOption } from 'src/app/core/interfaces/categories/ICategoryOption';\nimport { takenNameValidatorAsync } from 'src/app/core/validators/takenNameValidatorAsync';\n\n@Component({\n  selector: 'acr-create-edit-form',\n  templateUrl: './create-edit-form.component.html',\n  styleUrls: ['./create-edit-form.component.css']\n})\nexport class CreateEditFormComponent {\n\n  @Output()\n  btnClickEvent: EventEmitter<ICategoryCreate> = new EventEmitter<ICategoryCreate>();\n  get btnDisabled() {\n    return this.form.pristine || this.form.invalid || HelperService.compareObjects(this._category, this.form.value);\n  }\n  \n  @Output()\n  abortEvent:EventEmitter<any>=new EventEmitter();\n  abort(){    this.abortEvent.emit();  }\n\n  private _settings: { headline: string, submitBtnTitle: string, parentCategoryId: number }\n  get settings() { return this._settings }\n\n  @Input()\n  set settings(v) {\n    this._settings = v;\n    this.form.get(\"parentCategoryId\").setValue(v.parentCategoryId)\n  };\n\n  @Input()\n  navigateTreeEvent: EventEmitter<number>;\n\n  private _category: ICategoryCreate = null;\n\n  @Input()\n  set category(value: ICategoryCreate) {\n    if (value === null) return;\n    this._category = value;\n    this.namesAllowed.push(value.name);\n    this.form.patchValue(value);\n  }\n  private namesAllowed: string[] = [];\n  subscriptions: Subscription[] = [];\n\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private catService: CategoryService, private authService: AuthService) {\n    this.categorie$ = catService.getAllMini();\n    this.buildForm();\n  }\n\n  categorie$: Observable<ICategoryOption[]>\n\n  getCtrl(name: string) { return this.form.get(name); }\n\n  getErr(name: string, errName: string) { return this.getCtrl(name).errors[errName] }\n\n  /**Used to clasify input field as valid or not*/\n  getValClasses(name: string): { 'is-invalid': boolean, 'is-valid': boolean } {\n    const ctrl = this.getCtrl(name);\n    return { 'is-invalid': (ctrl.invalid && ctrl.touched), 'is-valid': ctrl.valid }\n  }\n\n  invalidTouchedCtrl(name: string) { return this.getCtrl(name).invalid && this.getCtrl(name).touched }\n\n  buildForm() {\n    this.form = this.fb.group({\n      name: [\"\", { validators: [Validators.required, takenNameValidatorAsync(this.catService.nameTaken.bind(this.catService), this.namesAllowed), Validators.minLength(4), Validators.maxLength(32), Validators.pattern('[a-zA-Z]+(\\\\s[a-zA-Z]{2,})?')], updateOn: \"blur\" }],\n      description: [\"\", [Validators.required, Validators.minLength(32), Validators.maxLength(10240)]],\n      authorId: this.authService.getUserInfo().id,\n      parentCategoryId: null,\n    })\n\n    this.subscriptions.push(\n      this.form.get(\"parentCategoryId\")\n        .valueChanges.subscribe(id => {\n          this.navigateTreeEvent.emit(id === \"null\" || id === null ? null : +id)\n        }))\n  }\n\n  submitForm() {\n    if (this.form.valid) {\n      this.btnClickEvent.emit(this.form.value)\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.filter(x => !x.closed).forEach(x => x.unsubscribe());\n  }\n}","<h3 class=\"text-center\">{{settings.headline}}</h3>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n    <div class=\"row justify-content-between\">\n        <div class=\"col-6 pr-4\">\n            <div class=\"form-group has-danger has-success\">\n                <label class=\"form-control-label h5\" for=\"name\">New Category Name*:</label>\n                <input formControlName=\"name\" class=\"form-control\" id=\"name\" [ngClass]=\"getValClasses('name')\" placeholder=\"Name...\">\n                <div class=\"invalid-feedback\" *ngIf=\"invalidTouchedCtrl('name')\"\n                    [innerText]=\"getErr('name','required')?'Please provide Ingredient Name!':\n                                            getErr('name','minlength')?'Please provide name with length atleast '+getErr('name','minlength')['requiredLength']+' symbols long!':\n                                            getErr('name','maxlength')?'Please provide name with length shorter than '+getErr('name','maxlength')['requiredLength']+' symbols long!':\n                                            getErr('name','valueTaken')?'The name ' + getErr('name','valueTaken') + ' is already in use!':\n                                            getErr('name','pattern')?'Please provide name consisting of one word, or two words with 1 space between them':'unknown-Error'\">\n                </div>\n            </div>\n        </div>\n        <div class=\"col-6 pl-4\">\n            <div class=\"form-group\">\n                <label class=\"form-control-label pr-3 h5\" for=\"parentCategoryId\">Parent Category:</label>\n                <select  class=\"custom-select\" formControlName=\"parentCategoryId\" id=\"parentCategoryId\">\n                    <option  [value]=\"null\">Root Category</option>                                            \n                    <option *ngFor=\"let opt of (categorie$ | async); index as i\" [value]=\"opt.id\">{{opt.name}}</option>\n                </select>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"desc\" class=\"h5\">Category Description*:</label>\n        <textarea class=\"form-control\" formControlName=\"description\" id=\"desc\" rows=\"4\"\n            placeholder=\"Describe what this category contains ...\"></textarea>\n    </div>\n    <div *ngIf=\"getCtrl('description').touched &&getCtrl('description').invalid\">\n        <div class=\"alert alert-danger\">\n            <span *ngIf=\"getCtrl('description').errors['required']\"> Please provide description!</span>\n            <span *ngIf=\"getCtrl('description').errors['minlength']\"> Please provide description with length atleast {{getCtrl('description').errors['minlength']['requiredLength']}} symbols long!</span>\n            <span *ngIf=\"getCtrl('description').errors['maxlength']\"> Please provide description with length lesser than {{getCtrl('description').errors['maxlength']['requiredLength']}} symbols long!</span>\n        </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-info btn-sm float-left\" (click)=\"abort()\"><i class=\"fas fa-ban\"></i> &nbsp; Abort</button>\n    <button type=\"submit\" class=\"btn btn-primary btn-sm float-right\" [disabled]=\"btnDisabled\" [innerHTML]=\"settings.submitBtnTitle | htmlRaw\"></button>\n</form>","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ICategoryCreate } from 'src/app/core/interfaces/categories/ICategoryCreate';\nimport { CategoryService } from 'src/app/core/services/category.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'acr-create-category',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent {\n\n  @Input()\n  set parentCategoryId(parentCategoryId: number) {\n    this.settings = {\n      headline: 'Create',\n      submitBtnTitle: \"<i class='fas fa-plus-circle'></i>&nbsp;Add Category\",\n      parentCategoryId\n    }\n  }\n\n  abort() { this.selectedCategory.next(this.settings.parentCategoryId); }\n\n  @Input()\n  selectedCategory: BehaviorSubject<number>\n\n  @Output()\n  addNodeEvent: EventEmitter<{ id: number, parentId: number, name: string }> = new EventEmitter();\n\n  @Output()\n  navigateTreeEvent: EventEmitter<number> = new EventEmitter();\n\n  settings: { headline: string, submitBtnTitle: string, parentCategoryId: number };\n\n  constructor(private catService: CategoryService, private toastr: ToastrService) { }\n\n  createNewCategory(v: ICategoryCreate) {\n    this.catService.create(v).subscribe(id => {\n      this.selectedCategory.next(id);\n      this.toastr.success(`Created category ${v.name}`, \"Success!\");\n      this.addNodeEvent.emit({ id, parentId: v.parentCategoryId, name: v.name });\n    }, (e) => {\n      console.log(\"nsh error\", e);\n      this.toastr.error('Unsucessfull creation of e')\n    })\n  }\n}","<acr-create-edit-form \n    (btnClickEvent)=\"createNewCategory($event)\" \n    [navigateTreeEvent]=\"navigateTreeEvent\"\n    [settings]=\"settings\"\n    (abortEvent)=\"abort()\">\n</acr-create-edit-form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ICategoryDetails } from 'src/app/core/interfaces/categories/ICategoryDetails';\nimport { HelperService } from 'src/app/core/services/helper.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'acr-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent {\n\n  @Input()\n  category: ICategoryDetails\n\n  constructor(private authService: AuthService) { }\n\n  @Output()\n  deleteEvent: EventEmitter<{ name: string, id: number }> = new EventEmitter();\n  askDelete() { this.deleteEvent.emit({ id: this.category.id, name: this.category.name }) }\n\n  @Input()\n  selectedCategory: BehaviorSubject<number>\n\n  get createdBefore() { return HelperService.timeElapsed(this.category.dateOfCreation) }\n  get editedBefore() { return HelperService.timeElapsed(this.category.dateOfLastEdit) }\n\n  selectParentCategory() { this.selectedCategory.next(this.category.parentCategoryId) }\n\n  get canEdit() { return this.authService.isAuthenticated() && (this.authService.isAdmin || this.authService.getUserInfo().userName === this.category.authorUserName) }\n  get canDelete() { return this.canEdit && this.category.recipesCount === 0 && !this.category.hasChildren }\n}\n","<section *ngIf=\"category\">\n    <h3>{{category.name}}</h3>\n    <h5>Details:</h5>\n    <p>{{category.description}}</p>\n    <ul class=\"stats\">\n        <li>Recipes: {{category.recipesCount}}</li>\n        <li *ngIf=\"category.parentCategoryId; else mainCategory\">ParentCategory:\n             <span class=\"clickable text-success\" (click)=\"selectParentCategory()\">{{category.parentCategoryName}}</span>\n        </li> \n        <ng-template #mainCategory><li> Main Category </li></ng-template>\n                \n        <li>Added By: <a [routerLink]=\"['/user-data/profile/', category.authorUserName]\">  &nbsp;{{category.authorUserName}}</a></li>\n        <li>Created: {{createdBefore}}</li>\n        <li *ngIf=\"createdBefore!==editedBefore\">Last Modified: {{editedBefore}}</li>\n    </ul>\n    <div class=\"row justify-content-between\">\n        <div class=\"col-4\"></div>\n        <div class=\"col-4\"></div>\n        <div class=\"col-4\">\n            <button *ngIf=\"canDelete\" class=\"btn btn-primary btn-sm float-right\" (click)=\"askDelete()\">Delete</button>\n        </div>\n    </div>\n</section>","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CategoryService } from 'src/app/core/services/category.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ICategoryCreate } from 'src/app/core/interfaces/categories/ICategoryCreate';\nimport { ICategoryEditDetails } from 'src/app/core/interfaces/categories/ICategoryEditDetails';\n\n@Component({\n  selector: 'acr-edit-category',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent {\n\n  private _categoryId: number;\n\n  @Input()\n  set categoryId(ownCategoryId: number) {\n    this._categoryId = ownCategoryId;\n    this.catService.getEditDetails(ownCategoryId).subscribe(x => {\n      delete x.id;\n      this.category = x;\n    });\n  }\n\n  abort() { this.selectedCategory.next(this._categoryId); }\n\n  category: ICategoryEditDetails = null;\n\n  @Input()\n  selectedCategory: BehaviorSubject<number>\n\n  @Output()\n  editEvent: EventEmitter<{ id: number, parentId: number, name: string}> = new EventEmitter();\n\n  @Output()//just passing from parent to child\n  navigateTreeEvent: EventEmitter<number> = new EventEmitter();\n\n  settings = {\n    headline: 'Edit',\n    submitBtnTitle: \"<i class='far fa-edit'></i>&nbsp;Edit Category\",\n    parentCategoryId: null\n  }\n\n  constructor(private catService: CategoryService, private toastr: ToastrService) { }\n\n  editCategory(v: ICategoryCreate) {\n    let edited: ICategoryEditDetails = { ...v, ...{ id: this._categoryId } }\n    this.catService.editCategory(edited).subscribe(() => {\n      this.editEvent.emit({ id: this._categoryId, parentId: v.parentCategoryId, name: v.name });\n      this.selectedCategory.next(this._categoryId);\n      this.toastr.success(`Edited category ${v.name}`, \"Success!\");\n    }, (e) => {\n      console.log(\"nsh error\", e);\n      this.toastr.error(`Unsucessfull edit of category ${v.name}`, \"Failure!\")\n    })\n  }\n}\n","<acr-create-edit-form \n    (btnClickEvent)=\"editCategory($event)\" \n    [navigateTreeEvent]=\"navigateTreeEvent\"\n    [settings]=\"settings\"\n    [category]=\"category\"\n    (abortEvent)=\"abort()\">\n</acr-create-edit-form>","import { Component, ViewChild } from '@angular/core';\nimport { CategoryNode } from 'src/app/core/interfaces/categories/CategoryNode';\nimport { CategoryService } from 'src/app/core/services/category.service';\nimport { ICategoryDetails } from 'src/app/core/interfaces/categories/ICategoryDetails';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogQuestionComponent } from 'src/app/core/components/questionComponent/dialog-question.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { CategoryTreeComponent } from '../category-tree/category-tree.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'main-board-categories',\n  templateUrl: './main-board-categories.component.html',\n  styleUrls: ['./main-board-categories.component.css']\n})\nexport class MainBoardCategoriesComponent {\n\n  categories: CategoryNode[] = null;\n\n  private actionLocked = false;\n  action: null | \"details\" | \"create\" | \"edit\" = null\n  selectedCategory: BehaviorSubject<number> = new BehaviorSubject<number>(-1)\n\n  @ViewChild(CategoryTreeComponent) tree: CategoryTreeComponent;\n\n  navigateTreeElementNoDetails(id: number, expandSelf = true) {\n    this.tree.expandParents(id, expandSelf);\n    if (id !== this.selectedCategory.getValue()) {\n      this.actionLocked = true;\n      this.selectedCategory.next(id);\n      this.actionLocked = false;\n    }\n  }\n\n  constructor(private catService: CategoryService, private dialog: MatDialog, private toastr: ToastrService, activatedRoute: ActivatedRoute) {\n    if (activatedRoute.snapshot.url[0] && activatedRoute.snapshot.url[0].path.toLowerCase() === \"details\" &&\n      !isNaN(activatedRoute.snapshot.params[\"id\"])) {\n      this.selectedCategory.next(+activatedRoute.snapshot.params[\"id\"])\n    }\n\n    this.updateTree()\n    this.selectedCategory.subscribe(id => {\n      if (this.actionLocked) return;\n      if (id > 0) {\n        this.dataObj.info$ = this.catService.getDetails(id);\n        this.action = \"details\";\n      }\n    })\n  }\n\n  updateTree() {\n    this.catService.getThreeStructure().subscribe((x: CategoryNode[]) => {\n      this.categories = x;\n    });\n  }\n\n  dataObj: { info$: Observable<ICategoryDetails>, createInfo: number, editInfo: number } =\n    {\n      info$: null,\n      createInfo: null,\n      editInfo: null,\n    }\n\n  add(parentCategoryId: number) {\n    this.dataObj.createInfo = parentCategoryId;//Todo can remove name from data transfer since it is retrieved from a list.\n    this.action = \"create\";\n  }\n\n  addNodeToTree({ id, parentId, name }) { this.tree.addNode(id, parentId, name) }\n\n  edit(id: number) {\n    this.dataObj.editInfo = id;\n    this.action = \"edit\";\n  }\n  editNodeInTree({ id, parentId, name }) { this.tree.editNode(id, parentId, name) }\n\n  confirmDelete({ name, id }) {\n    let dialogRef = this.dialog.open(DialogQuestionComponent,\n      {\n        width: \"35em\",\n        data: {\n          title: `Confirm Deletion Please:`,\n          question: `Are you sure you wish to delete ${name} category?`,\n          picUrl: '../../../assets/imgs/leaf 100x100.png',\n          positiveAnswerBtnName: '<i class=\"far fa-trash-alt\"></i> Delete',\n          negativeAnswerBtnName: '<i class=\"fas fa-ban\"></i> Abort'\n        }\n      });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === \"true\") {\n        this.catService.deleteCategoryById(id).subscribe(() => {\n          this.toastr.success(`Removed category ${name}`, \"Success!\");\n          const parentId = this.tree.deleteNode(id);\n          this.selectedCategory.next(parentId);//Navigation happens with OnInit subscription treeComponent somehow...\n        }, (err) => {\n          this.toastr.error(`Category ${name} was not removed`, \"Failure\");\n          console.log(err);\n        });\n      }\n    })\n  }\n}","<section>\n    <div class=\"title\">\n        <h3><i class=\"far fa-bookmark\"></i> Recipe's Categories...</h3>\n    </div>\n    <div class=\"three\">\n        <acr-cat-tree *ngIf=\"categories\" \n            [cats]=\"categories\"\n            [selectedCategory]=\"selectedCategory\"\n            (addEvent)=\"add($event)\"\n            (editEvent)=\"edit($event)\"\n            (deleteEvent)=\"confirmDelete($event)\"\n        ></acr-cat-tree>\n    </div>\n\n    <div class=\"menu\" *ngIf=\"action\">\n        <div class=\"details\">\n            <acr-create-category *ngIf=\"action==='create'\" \n                [parentCategoryId]=\"dataObj.createInfo\" \n                (addNodeEvent)=\"addNodeToTree($event)\" \n                (navigateTreeEvent)=\"navigateTreeElementNoDetails($event)\" \n                [selectedCategory]=\"selectedCategory\">\n            </acr-create-category>\n\n            <acr-edit-category *ngIf=\"action==='edit'\" \n            [selectedCategory]=\"selectedCategory\"\n                (editEvent)=\"editNodeInTree($event)\" \n                (navigateTreeEvent)=\"navigateTreeElementNoDetails($event)\" \n                [categoryId]=\"dataObj.editInfo\"\n                >\n            </acr-edit-category>\n            \n             <acr-details *ngIf=\"action==='details'\" \n                [category]=\"dataObj.info$ | async\" \n                [selectedCategory]=\"selectedCategory\" \n                (deleteEvent)=\"confirmDelete($event)\">\n            </acr-details>\n        </div>\n    </div>\n</section>","import { Component, AfterViewInit, EventEmitter, Output, Input } from '@angular/core';\nimport { CommentsService } from 'src/app/core/services/comments.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { ICommentLikeStatus } from 'src/app/core/interfaces/comments/ILikesCommentStatus';\nimport { ICommentContentStatus } from 'src/app/core/interfaces/comments/ICommentContentStatus';\nimport { IComment } from 'src/app/core/interfaces/comments/IComment';\nimport { NgForm } from '@angular/forms';\nimport { CookRank } from 'src/app/core/enumerations/CookRank';\nimport { HelperService } from 'src/app/core/services/helper.service';\n\n@Component({\n  selector: 'acr-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements AfterViewInit {\n\n  editModeOn: boolean = false;\n  editModeSwitch() { this.editModeOn = !this.editModeOn }\n  private originalContent: string = null;\n  ngAfterViewInit(): void { this.originalContent = this.comment.content; }\n\n  constructor(private authService: AuthService, private commentService: CommentsService) { }\n\n  @Output()\n  changeLikesEvent: EventEmitter<ICommentLikeStatus> = new EventEmitter<ICommentLikeStatus>();\n\n  @Output()\n  changeContentEvent: EventEmitter<ICommentContentStatus> = new EventEmitter<ICommentContentStatus>();\n\n  @Output()\n  deleteCommentEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  @Input()\n  comment: IComment = {\n    id: 1,\n    authorCookRank: 1,\n    authorUserName: \"Kuncho\",\n    authorAvatarPicture: \"https://images.pexels.com/photos/459225/pexels-photo-459225.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n    dateAdded: 3456789,\n    dateModified: 3456789,\n    content: \"Lorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem LoremLorem Ipsum Lorem Lorem\",\n    likers: [\"User12\", \"User2\", \"User3\"],\n    disLikers: [\"User5\", \"User6\", \"User7\"],\n  }\n\n  @Input()\n  recipeAuthorUserName: string;\n\n  get cookRank() {\n    return CookRank[this.comment.authorCookRank];\n  }\n\n  get isLikeAble() {\n    return this.authService.isAuthenticated() && !this.comment.likers.includes(this.authService.getUserInfo().userName)\n  }\n  get isDislikeAble() {\n    return this.authService.isAuthenticated() && !this.comment.disLikers.includes(this.authService.getUserInfo().userName)\n  }\n\n  get timeEdited() { return HelperService.timeElapsed(this.comment.dateModified) }\n\n  giveLike() {\n    if (!this.isLikeAble) return;\n    this.commentService.setVote(this.comment.id, true).subscribe(x => this.changeLikesEvent.emit(x));\n  }\n\n  giveDisLike() {\n    if (!this.isDislikeAble) return;\n    this.commentService.setVote(this.comment.id, false).subscribe(x => this.changeLikesEvent.emit(x));\n  }\n\n  get canDelete() {\n    return this.authService.isAuthenticated() &&\n      (this.authService.isAdmin || [this.comment.authorUserName, this.recipeAuthorUserName].includes(this.authService.getUserInfo().userName))\n  }\n  get canEdit() { return this.authService.isAuthenticated() && this.comment.authorUserName === this.authService.getUserInfo().userName }\n\n  del() {\n    this.deleteCommentEvent.emit(this.comment.id);\n  }\n\n  editComment(form: NgForm) {\n    const { editedContent } = form.value;\n    if (form.invalid || editedContent === this.originalContent) return;\n    const dateModified = Date.now() / 1000;\n    const commentStatus: ICommentContentStatus = { id: this.comment.id, content: editedContent, dateModified };\n    this.commentService.editContent(commentStatus).subscribe(() => {\n      this.changeContentEvent.emit(commentStatus);\n      return this.editModeSwitch();\n    });\n    console.log('contentChanged');\n  }\n\n  abortEdit() {\n    this.comment.content = this.originalContent;\n  }\n\n\n}\n","<li class=\"media\">\n    <img [src]=\"comment.authorAvatarPicture\" alt=\"post_author_picture\" class=\"img-circle pull-left\">\n    <div class=\"media-body \">\n        <span class=\"label-info\">\n            <span>{{cookRank}}&nbsp; </span> \n            <a class=\"text-decoration-none text-success font-weight-bold\" [routerLink]=\"['/user-data/profile/', comment.authorUserName]\">{{comment.authorUserName}}</a> &nbsp; \n            <span [ngClass]=\"{'active-btn':isLikeAble}\" (click)=\"giveLike()\"> <i class=\"fas fa-thumbs-up\"></i></span> {{comment.likers.length}}&nbsp; \n            <span [ngClass]=\"{'active-btn':isDislikeAble}\" (click)=\"giveDisLike()\"> <i class=\"fas fa-thumbs-down\"></i> {{comment.disLikers.length}} &nbsp; </span>\n            <span class=\"text-muted\"><small class=\"text-muted\">Last edited: {{timeEdited}}</small></span>\n        </span>\n      \n        <span class=\"actions\" *ngIf=\"canDelete || canEdit\"> \n            <span *ngIf=\"canEdit\" class=\"active-btn\" (click)=\"editModeSwitch()\">\n              <span *ngIf=\"!editModeOn\"> <i class=\"far fa-edit\"></i> Edit</span> \n              <span *ngIf=\"editModeOn\" class=\"text-danger\" (click)=\"abortEdit()\"><i class=\"fas fa-ban\"></i> Abort Edit</span>     \n            </span>  \n            <span class=\"active-btn\" (click)=\"del()\"><i class=\"far fa-trash-alt\"></i> Delete</span>\n        </span>\n        <div *ngIf=\"!editModeOn;else editF\">\n            <p class=\"content .smooth-scroll\"> {{comment.content}}</p>\n        </div>\n    </div>\n</li>\n\n<ng-template #editF>\n    <form #editForm=\"ngForm\" (ngSubmit)=\"editComment(editForm)\">\n        <div class=\"row jusify-content-start mt-3\">\n            <div class=\"col-10 form-group\">  \n                <textarea rows=\"2\" cols=\"100%\" name=\"editedContent\" [(ngModel)]=\"comment.content\" class=\"form-control\" placeholder=\"Type edited content...\" minlength=\"4\" maxlength=\"1024\" required></textarea>      \n            </div>\n            <div class=\"col-2\">\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"editForm.invalid||editForm.pristine\"><i class=\"fas fa-save\"></i> Save</button>\n            </div>\n        </div>\n    </form>\n\n\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListCommentsComponent } from './list-comments/list-comments.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { CoreModule } from '../core/core.module';\n\n\n\n@NgModule({\n  declarations: [ListCommentsComponent, CommentComponent],\n  imports: [\n    CommonModule,CoreModule\n  ],\n  exports: [ListCommentsComponent]\n})\nexport class CommentsModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AuthService } from '../../core/services/auth.service';\nimport { CommentsService } from '../../core/services/comments.service';\nimport { IComment } from '../../core/interfaces/comments/IComment';\nimport { ToastrService } from 'ngx-toastr';\nimport { SignalRRecipeDetailsService } from '../../core/services/signal-r.recipe-details.service';\nimport { ICommentLikeStatus } from '../../core/interfaces/comments/ILikesCommentStatus';\nimport { ICommentContentStatus } from '../../core/interfaces/comments/ICommentContentStatus';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'acr-list-comments',\n  templateUrl: './list-comments.component.html',\n  styleUrls: ['./list-comments.component.css']\n})\nexport class ListCommentsComponent implements OnInit {\n\n  @Input()\n  recipeId: string;\n\n  @Input()\n  recipeAuthorUserName: string;\n\n  @Input()\n  signalR: SignalRRecipeDetailsService = null;\n\n  public isLoading = false;\n  public endReached = false;\n  private page = 1;\n\n  comments: IComment[] = [];\n  constructor(private authService: AuthService, private commentService: CommentsService, private toastr: ToastrService, private spinner: NgxSpinnerService) {\n  }\n\n  ngOnInit(): void {\n    this.fetchComments();\n    this.signalR.monitorComments(this.comments);\n  }\n\n  get isLastCommentor(): boolean {\n    return this.isLoggedIn && this.comments.length > 0 && this.comments[0].authorUserName === this.myInfo.userName\n  }\n\n  fetchComments() {\n    if (this.endReached || this.isLoading) return;\n    this.isLoading = true;\n    this.spinner.show();\n    this.commentService.getCommentsForRecipe(this.page++, this.recipeId).subscribe(coms => {\n      if (coms.length === 0) { this.endReached = true; return }\n      this.comments.splice(this.comments.length, 0, ...coms);\n    }).add(() => { this.isLoading = false; this.spinner.hide(); });\n  }\n\n  onScroll({ target }) {\n    if (!this.scrolSayLoad(target)) { return }\n    this.fetchComments();\n  }\n\n  scrolSayLoad = (target) => target.scrollHeight - (target.scrollTop + target.clientHeight) < 20\n\n  get isLoggedIn() {\n    return this.authService.isAuthenticated();\n  }\n\n  get myInfo() {\n    return this.isLoggedIn ? this.authService.getUserInfo() : null;\n  }\n\n  submitComment({ content }) {\n    if (content.length < 4 || !this.isLoggedIn) return;\n    const newComment = { content, authorId: this.authService.getUserInfo().id, recipeId: this.recipeId }\n\n    this.commentService.postComment(newComment).subscribe((id) => {\n      const timeNow = Date.now() / 1000;\n      const newCommentForDisplay: IComment = {\n        id,\n        authorUserName: this.myInfo.userName,\n        authorCookRank: this.myInfo.cookRank,\n        authorAvatarPicture: this.myInfo.avPic,\n        dateAdded: timeNow,\n        dateModified: timeNow,\n        likers: [],\n        disLikers: [],\n        content,\n      }\n      this.signalR.addComment(newCommentForDisplay)\n    }, (e) => {\n      this.toastr.error(\"Unsuccessful comment post\", \"Misfortune!\");\n      console.error(\"Comment sending error\", e);\n    })\n  }\n\n  changeLikes(status: ICommentLikeStatus) {\n    this.signalR.changeCommentVote(status);\n  }\n\n  changeContent(status: ICommentContentStatus) {\n    this.signalR.changeCommentContent(status);\n  }\n\n  deleteComment(id: number) {\n    this.commentService.del(id).subscribe(() => this.signalR.removeComment(id))\n  }\n}","<div class=\"bootstrap snippets px-4\">\n    <div class=\"comment-wrapper\">\n        <div class=\"panel panel-info\">\n            <div class=\"panel-heading text-center py-2\">\n                <h4><i class=\"far fa-comments\"></i> &nbsp; Comments For Recipe</h4>\n            </div>\n            <form *ngIf=\"isLoggedIn\" class=\"px-4\" #f=\"ngForm\" (ngSubmit)=\"submitComment(f.value); f.reset()\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-1\"></div>\n                    <div class=\"col-6\">\n                        <textarea name=\"content\" ngModel minlength=\"4\" required class=\"form-control\"\n                            [placeholder]=\"isLastCommentor?'Cant post sequencial comments...':'write a comment...'\"\n                            rows=\"2\" [disabled]=\"isLastCommentor\"></textarea>\n                    </div>\n                    <div class=\"col-2\">\n                        <button type=\"submit\" class=\"btn btn-info pull-right\" [disabled]=\"f.invalid\">Post</button>\n                    </div>\n                    <div class=\"col-1\"></div>\n                </div>\n                <br>\n            </form>\n            <div style=\"position:relative\">\n                <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"rgba(119, 41, 83, 0.73)\" type=\"ball-scale-multiple\" [fullScreen]=\"false\">\n                   <div>\n                    <p style=\"font-size: 24px; color:rgba(119, 41, 83, 0.73); padding-left:12em; padding-top:1em;\">Loading comments...</p>\n                </div>\n                </ngx-spinner>\n            </div>\n            <div class=\"panel-body\" (scroll)=\"onScroll($event)\">\n                <ul class=\"media-list\">\n                       <acr-comment *ngFor=\"let comment of comments\" [comment]=\"comment\"\n                    [recipeAuthorUserName]=\"recipeAuthorUserName\" (changeLikesEvent)=\"changeLikes($event)\"\n                    (changeContentEvent)=\"changeContent($event)\" (deleteCommentEvent)=\"deleteComment($event)\">\n                </acr-comment>\n            </ul>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"botomizer\"></div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: './nsh-dialog-question',\r\n    templateUrl: './dialog-question.component.html',\r\n    styleUrls: ['./dialog-question.component.css'],\r\n})\r\nexport class DialogQuestionComponent {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<DialogQuestionComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n\r\nexport interface DialogData {\r\n    title: string;\r\n    question: string;\r\n    picUrl: string;\r\n    positiveAnswerBtnName: string;\r\n    negativeAnswerBtnName: string;\r\n}","<div class=\"container\">\r\n    \r\n    <figure class=\"media\">\r\n        <img [src]=\"data.picUrl\" alt=\"question-picture\">\r\n    </figure>\r\n    \r\n    <div class=\"quiz\">\r\n        <div class=\"title\" *ngIf=\"data.title\">\r\n            <h4>{{data.title}}</h4>\r\n        </div>\r\n\r\n        <div class=\"question\">\r\n            <p>{{data.question}}</p>\r\n        </div>\r\n\r\n        <nav class=\"options\">\r\n            <button class=\"btn btn-info\" mat-button mat-dialog-close=\"false\" [innerHTML]=\"data.negativeAnswerBtnName | htmlRaw\"></button>\r\n            <button class=\"btn btn-primary\" mat-button mat-dialog-close=\"true\" [innerHTML]=\"data.positiveAnswerBtnName | htmlRaw\"></button>\r\n        </nav>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { HTMLRaw } from './pipes/htmlRaw.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SafePipe } from './pipes/safeUrl.pipe';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { PopoverModule } from \"ngx-smart-popover\";\nimport { ClassIfClassDirective } from './directives/class-if-class.directive';\nimport { DialogQuestionComponent } from './components/questionComponent/dialog-question.component';\nimport { MaterialModule } from './material/material.module';\n\n\n@NgModule({\n  declarations: [HTMLRaw, SafePipe, ClassIfClassDirective, DialogQuestionComponent],\n  imports: [\n    CommonModule, HttpClientModule, NgxSpinnerModule, FormsModule, ReactiveFormsModule, BrowserModule, BrowserAnimationsModule, AppRoutingModule, PopoverModule, MaterialModule\n  ],\n  exports: [ ClassIfClassDirective, NgxSpinnerModule, HTMLRaw, CommonModule, FormsModule, ReactiveFormsModule, SafePipe, BrowserModule, BrowserAnimationsModule, AppRoutingModule, PopoverModule, MaterialModule\n  ]\n})\nexport class CoreModule { }\n","import { Directive, ElementRef, Input, DoCheck, HostListener } from '@angular/core';\n\nconst splitArrToClasses = (str: string) => str.split(' ').filter(x => !x.includes(' '));\n\n@Directive({\n  selector: '[nshClassIfClass]'\n})\nexport class ClassIfClassDirective implements DoCheck {\n  //Has two checks one imediate after input is given and one randomly done on some time intervals that will catch async delayed validations...\n  //If applied on non input it will work but only with longer pool check./DoCheckx\n  private currentClassState: string;\n  /*\n    [0,1][]\n    [0] are all classes that will be attached or removed if [0] is present or not!\n    [1] are all classes that need to be present!\n    every rule will either attach or remove all classes of [1]\n    order matters last one wins\n  */\n  @Input('nshClassIfClass')\n  rules: [string, string][] = null\n\n  test;\n  constructor(private el: ElementRef) {\n    this.test = el.nativeElement.classList;\n  }\n\n  private get elmntClassList() {\n    return this.el.nativeElement.classList;\n  }\n\n  private get getClassyRules(): { provided: string[], required: string[] }[] {\n    return this.rules.map(x => (\n      {\n        provided: splitArrToClasses(x[0]),\n        required: splitArrToClasses(x[1]),\n      }\n    ))\n  }\n\n  ngDoCheck() {\n    {\n      this.updateClasses()\n    }\n  }\n\n  @HostListener(\"change\")\n  imediateCheck() {\n    setTimeout(() => this.updateClasses(), 1000);\n  }\n\n  updateClasses() {\n    if (this.rules === null || this.elmntClassList.value === this.currentClassState) return;\n\n    this.getClassyRules.forEach(({ required, provided }) => {\n      if (required.some(x => !this.elmntClassList.contains(x))) {\n        const classesToRemove = provided.filter(x => this.elmntClassList.contains(x));\n        return this.elmntClassList.remove(...classesToRemove)\n      }\n      const classesToAdd = provided.filter(x => !this.elmntClassList.contains(x));\n      this.elmntClassList.add(...provided.filter(x => classesToAdd))\n    });\n    this.currentClassState = this.elmntClassList.value;\n  }\n}","export enum CookRank {\r\n    Newbie = 1,\r\n    \"Cooker Assistant\" = 2,\r\n    Cooker = 3,\r\n    \"Shef Assistant\" = 4,\r\n    Shef = 5,\r\n    \"Wizard Assistant\" = 6,\r\n    \"National Treasure\" = 7\r\n}\r\n","export enum Gender {\r\n    ufo = 0,\r\n    male = 1,\r\n    female = 2,\r\n   }\r\n\r\n","export enum MeasureTypes {\r\n    \"Weight Units\" = 1,\r\n    \"Volume Units\" = 2,\r\n    \"Count\" = 3\r\n}\r\n\r\n","export enum OriginTypes {\r\n    Plant = 1,\r\n    Animal = 3,\r\n    \"Non Organic\" = 2\r\n}\r\n","export enum RecipeDifficulty {\r\n    Easy = 1,\r\n    Normal = 2,\r\n    Hard = 3,\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n\r\n@Injectable({providedIn:\"root\"})\r\nexport class AuthorizedOnlyGuard implements CanActivate {\r\n    constructor(private authService: AuthService) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        return this.authService.isAuthenticated();\r\n    }\r\n\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { authPaths } from '../settings/apiSettings';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n\r\n@Injectable({ providedIn: \"root\" })\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (this.authService.isAuthenticated() &&\r\n            this.authService.getUserInfo().exp <= (Date.now() / 1000)) {\r\n            this.authService.clearUserData();\r\n        }\r\n\r\n        if (req.url === authPaths.registerUser || req.url === authPaths.logInUser) {\r\n            return next.handle(req).pipe(tap(evnt => {\r\n                if (evnt instanceof HttpResponse && evnt.body[\"isSuccessfull\"]) {\r\n                    this.authService.storeToken(evnt.body[\"authToken\"])\r\n                }\r\n            }));\r\n        }\r\n\r\n        if (this.authService.isAuthenticated()) {\r\n            return next.handle(req.clone({\r\n                setHeaders: { Authorization: `Bearer ${this.authService.getToken()}` }\r\n            }))\r\n        }\r\n\r\n        return next.handle(req);\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nconst modules = [\n  MatTreeModule,\n  A11yModule,\n  CdkStepperModule,\n  CdkTableModule,\n  CdkTreeModule,\n  DragDropModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  PortalModule,\n  ScrollingModule\n]\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    modules\n  ],\n  exports: [modules]\n})\nexport class MaterialModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'htmlRaw', pure: false })\r\nexport class HTMLRaw implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n  transform(content) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(content);\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safe' })\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  transform(url) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n} ","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { IngredientService } from '../services/ingredient.service';\r\nimport { IIngredientEdit } from '../interfaces/ingredients/IIngredientEdit';\r\nimport { Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class IngredientEditResolver implements Resolve<IIngredientEdit> {\r\n    constructor(private ingredientService: IngredientService) { }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IIngredientEdit> {\r\n        const id = +route.url[1].path;\r\n        return this.ingredientService.getEditDataById(id);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IRecipeDetails } from '../interfaces/recipes/RecipeDetails';\r\nimport { RecipeService } from '../services/recipe.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RecipeDetailsResolver implements Resolve<IRecipeDetails> {\r\n    constructor(private recipeService: RecipeService) { }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IRecipeDetails> {\r\n        var id = route.paramMap.get('id');\r\n        return this.recipeService.getDetails(id);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { RecipeService } from '../services/recipe.service';\r\nimport { IRecipeCreate } from '../interfaces/recipes/IRecipeCreate';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RecipeEditDataResolver implements Resolve<IRecipeCreate> {\r\n    constructor(private recipeService: RecipeService) { }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IRecipeCreate> {\r\n        var id = route.paramMap.get('id');\r\n        return this.recipeService.getEditDetails(id);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserDataService } from '../services/user-data.service';\r\nimport { IUserProfileEditData } from '../interfaces/user-data-interfaces/userProfileEditData';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDataProfileEditResolver implements Resolve<IUserProfileEditData> {\r\n  constructor(private udService: UserDataService) { }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IUserProfileEditData> {\r\n    return this.udService.getUserInfoForEditing();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { IUserProfileData } from '../interfaces/user-data-interfaces/uprofile';\nimport { Observable } from 'rxjs';\nimport { UserDataService } from '../services/user-data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataResolver implements Resolve<IUserProfileData> {\n  constructor(private udService: UserDataService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IUserProfileData> {\n    var userName = route.paramMap.get('userName');\n    return this.udService.getUserInfoByUserName(userName);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { authPaths } from '../settings/apiSettings';\nimport { IUser } from '../interfaces/user';\nimport { IUserDataTakenResult } from '../interfaces/auth-Interfaces/userDataTakenResult';\nimport { IUserSendable } from '../interfaces/auth-Interfaces/userSendable';\nimport { IUserInfo } from '../interfaces/auth-Interfaces/userInfo';\nimport { LoginResult } from '../interfaces/auth-Interfaces/loginResult';\nimport { IUserTokenInfo } from '../interfaces/auth-Interfaces/userTokenInfo';\nimport { Gender } from '../enumerations/Gender';\nimport { CookRank } from '../enumerations/CookRank';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  isAuthenticated(): boolean {\n    return localStorage.getItem(\"authToken\") !== null\n  }\n\n  checkUserNameOrEmailTaken({ userName, email }): Observable<IUserDataTakenResult> {\n    return this.http.post<IUserDataTakenResult>(authPaths.checkUserNameOrEmailTaken, { UserName: userName, Email: email });\n  }\n\n  register(ud: IUser): Observable<LoginResult> {\n    let userData: IUserSendable = {\n      UserName: ud.userName,\n      Email: ud.email,\n      FirstName: ud.firstName,\n      Password: ud.password,\n      AvatarPicture: ud.avatarPicture,\n      Gender: Gender[ud.gender],\n      LastName: ud.lastName,\n      Description: ud.description,\n    }\n\n    return this.http.post<LoginResult>(authPaths.registerUser, userData);\n  }\n\n  login({ umail, password }) {\n    return this.http.post(authPaths.logInUser, { UserNameOrEmail: umail, Password: password });\n  }\n\n  clearUserData() {\n    localStorage.clear();\n  }\n\n  getUserInfo(): IUserInfo {\n    return this.parseJwt(this.getToken())\n  }\n\n  get isAdmin(): boolean {\n    return this.isAuthenticated() && this.getUserInfo().roles.includes(\"Admin\");\n  }\n\n  updateToken(): Observable<LoginResult> {\n    return this.http.post<LoginResult>(authPaths.updateToken, {}).pipe(\n      tap(lr => {\n        if (lr.isSuccessfull) {\n          this.storeToken(lr.authToken);\n          console.log(lr);\n        }\n      })\n    );\n  }\n\n  private parseJwt(token): IUserInfo {\n    if (!token) return null;\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    const tInfo: IUserTokenInfo = JSON.parse(jsonPayload);\n\n    return {\n      id: tInfo._id,\n      userName: tInfo.unique_name,\n      fullName: tInfo.fullName,\n      avPic: tInfo.avPic,\n      cookRank: CookRank[tInfo.cookRank],\n      roles: tInfo.roles.split(\"|\"),\n      blocked: tInfo.blocked.split(\"|\"),\n      exp: tInfo.exp,\n    };\n  };\n\n  public getToken() {\n    return localStorage.getItem(\"authToken\") || null;\n  }\n\n  public storeToken(token: string): void {\n    localStorage.setItem(\"authToken\", token);\n  }\n\n  public getChupakabra(): any {\n    return this.http.get<any>(\"https://localhost:5001/users/vzemi\")\n  }\n}\n\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { categoryPaths } from '../settings/apiSettings';\r\nimport { ICategoryOption } from '../interfaces/categories/ICategoryOption';\r\nimport { ICategoryDetails } from '../interfaces/categories/ICategoryDetails';\r\nimport { ICategoryCreate } from '../interfaces/categories/ICategoryCreate';\r\nimport { ICategoryEditDetails } from '../interfaces/categories/ICategoryEditDetails';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllMini(): Observable<ICategoryOption[]> {\r\n        return this.http.get<ICategoryOption[]>(categoryPaths.getAllMini);\r\n    }\r\n    \r\n    getThreeStructure(): Observable<ICategoryOption[]> {\r\n        return this.http.get<ICategoryOption[]>(categoryPaths.getThreeStructure);\r\n    }\r\n    \r\n    getDetails(id: number): Observable<ICategoryDetails> {\r\n        return this.http.get<ICategoryDetails>(categoryPaths.getDetails(id))\r\n    }\r\n    \r\n    nameTaken(name: string): Observable<boolean> {\r\n        return this.http.get<boolean>(categoryPaths.nameUsed(name))\r\n    }\r\n    \r\n    create(v: ICategoryCreate): Observable<number> {\r\n        return this.http.post<number>(categoryPaths.base, v);\r\n    }\r\n    \r\n    deleteCategoryById(id: number): Observable<any> {\r\n        return this.http.delete(categoryPaths.delete(id));\r\n    }\r\n\r\n    getEditDetails(id:number): Observable<ICategoryEditDetails> {\r\n        return this.http.get<ICategoryEditDetails>(categoryPaths.getEditDetails(id));\r\n    }\r\n\r\n    editCategory(v: ICategoryEditDetails):Observable<any> {\r\n        return this.http.put(categoryPaths.base,v);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { commentsPaths } from '../settings/apiSettings';\r\nimport { IComment } from '../interfaces/comments/IComment';\r\nimport { ICommentLikeStatus } from '../interfaces/comments/ILikesCommentStatus';\r\nimport { ICommentContentStatus } from '../interfaces/comments/ICommentContentStatus';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommentsService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCommentsForRecipe(pageNum: number, recipeId: string): Observable<IComment[]> {\r\n        return this.http.get<IComment[]>(commentsPaths.getAllForRecipe(pageNum, recipeId));\r\n    }\r\n\r\n    postComment(comment): Observable<number> {//Returns id of newly created comment or Bad Request\r\n        return this.http.post<number>(commentsPaths.base, comment);\r\n    }\r\n\r\n    setVote(id: number, like: boolean): Observable<ICommentLikeStatus> {\r\n        return this.http.put<ICommentLikeStatus>(commentsPaths.setVote, { id, like })\r\n    }\r\n\r\n    del(id: number): Observable<any> {\r\n        return this.http.delete(commentsPaths.delete(id));\r\n    }\r\n\r\n    editContent(contentStatus: ICommentContentStatus): Observable<any> {\r\n        return this.http.patch(commentsPaths.base,contentStatus);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nconst pad2 = (num: number): string => (num < 10 ? '0' : '') + num;\n\nconst dateFormats = {\n  defaultformater: (d: Date) => `${pad2(d.getDate())}/${pad2(d.getMonth() + 1)}/${d.getFullYear()} [${d.getHours()} : ${pad2(d.getMinutes())}]`\n}\nexport enum CustomDateFormats {\n  DefaultFormater = 1,\n}\n\nfunction convertToCurrentDateTime(date: Date): Date {\n  const offsetHours = new Date().getTimezoneOffset() / -60;\n  date.setHours(date.getHours() + offsetHours);\n  return date;\n}\n\nconst DateTimeCStoJS = (date: string, symbol = \"T\") => {\n  let t = {};\n  let csDate = date.split(\"-\");\n  t[\"year\"] = +csDate.shift();\n  t[\"month\"] = +csDate.shift();\n  csDate = csDate[0].split(symbol);\n\n  t[\"date\"] = +csDate.shift();\n  csDate = csDate[0].split(\":\");\n  t[\"hours\"] = +csDate.shift();\n  t[\"minutes\"] = +csDate.shift();\n  csDate = csDate[0].split(\".\");\n  t[\"seconds\"] = +csDate.shift();\n  t[\"ms\"] = 1000 * +(`0.` + csDate.shift());\n  const result = convertToCurrentDateTime(new Date(t[\"year\"], t[\"month\"], t[\"date\"], t[\"hours\"], t[\"minutes\"], t[\"seconds\"], t[\"ms\"]));\n  return new Date(result);\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor() { }\n\n\n static getEnumOptions(enumeration):[string, number][] {\n    const ent = Object.entries(enumeration);\n    return ent.slice(-ent.length/2) as [string, number][];\n  }\n\n  // toCS_keys(cam_obj: any): any {\n  //   let result = {};\n  //   Object.keys(cam_obj).forEach(key => {\n  //     result[this.capitalize(key)] = cam_obj[key]\n  //   })\n  //   return result;\n  // }\n\n  // toJS_keys(pas_obj: any): any {\n  //   let result = {};\n  //   Object.keys(pas_obj).forEach(key => {\n  //     result[this.deCapitalize(key)] = pas_obj[key]\n  //   })\n  //   return result;\n  // }\n  public static timeElapsed(time: number, months = false): string {\n    const timeDifference = Date.now() / 1000 - time; // Unix timestamp in milliseconds\n    const hr = 3600;\n    if (timeDifference < hr) return `${Math.floor((timeDifference) / 60)} mins ago`\n    if (timeDifference < hr * 24) return `${Math.floor((timeDifference) / (hr))} hours ago`\n    if (timeDifference < hr * 24 * 31) return `${Math.floor((timeDifference) / (24 * hr))} days ago`\n    if (months && timeDifference < hr * 24 * 30 * 30.45) return `${Math.floor((timeDifference) / (24 * hr * 30.45))} months ago`\n    let d = new Date(0); // The 0 there is the key, which sets the date to the epoch\n    d.setUTCSeconds(time);\n    d = convertToCurrentDateTime(d);\n    return `${pad2(d.getDay() + 1)}.${pad2(d.getMonth() + 1)}.${d.getFullYear()}`\n  }\n\n  public static fixJsonNumbers(obj: any): any {\n    let result = {};\n    Object.keys(obj).forEach(key => {\n      let value = obj[key];\n      if (!isNaN(obj[key])) {\n        result[key] = Number(value);\n      } else if (typeof (value) === \"object\") {\n        result[key] = this.fixJsonNumbers(value);\n      } else {\n        result[key] = value;\n      }\n    })\n    return result;\n  }\n\n  public static compareObjects = (obj1, obj2) => {\n    if(!obj1||!obj2) return false;\n    let result = true;\n    Object.entries(obj1).forEach(([key, value]) => {\n      if (value?.toString() === obj2[key]?.toString()) { return; }\n      if (JSON.stringify(value) !== JSON.stringify(obj2[key])) { result = false; }\n    })\n    return result;\n  }\n\n  public static appJsonHeader = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  private capitalize(str: string) {\n    return str[0].toUpperCase() + str.substr(1)\n  }\n\n  private deCapitalize(str: string) {\n    return str[0].toLowerCase() + str.substr(1)\n  }\n\n  static videoLinkMake = (id) => `https://www.youtube.com/embed/${id}?rel=0`\n\n  static getNextItem<T>(arr: T[], currentItem: T): T {\n    let index: number = arr.indexOf(currentItem);\n    index = (index + 1 === arr.length) ? 0 : index + 1\n    return arr[index]\n  }\n\n  static getPreviousItem<T>(arr: T[], currentItem: T): T {\n    let index: number = arr.indexOf(currentItem);\n    index = (index === 0) ? arr.length - 1 : index - 1\n    return arr[index]\n  }\n\n  static dateConvert(date: string, formatFn: CustomDateFormats): string {\n    return dateFormats[CustomDateFormats[formatFn].toLowerCase()](DateTimeCStoJS(date));\n  }\n}\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ignredientPaths } from '../settings/apiSettings';\r\nimport { IRecipeIngredient } from '../interfaces/recipes/RecipeIngredient';\r\nimport { IIngredientCard } from '../interfaces/ingredients/IIngredient-card';\r\nimport { IIngredientOption } from '../interfaces/ingredients/IIngredientOption';\r\nimport { IIngredientCreate } from '../interfaces/ingredients/IIngredientCreate';\r\nimport { IIngredientDetails } from \"../interfaces/ingredients/IIngredientDetails\";\r\nimport { IIngredeintMatches } from '../interfaces/ingredients/IIngredeintMatches';\r\nimport { IIngredientEdit } from '../interfaces/ingredients/IIngredientEdit';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class IngredientService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllMini(): Observable<IIngredientOption[]> {\r\n        return this.http.get<IIngredientOption[]>(ignredientPaths.getAllMini);\r\n    }\r\n\r\n    getRecipeIngredients(recipeId: string): Observable<IRecipeIngredient[]> {\r\n        return this.http.get<IRecipeIngredient[]>(ignredientPaths.getRecipeIngredients(recipeId));\r\n    }\r\n\r\n    getIngredientDetails(id: number): Observable<IIngredientDetails> {\r\n        return this.http.get<IIngredientDetails>(ignredientPaths.getDetails(id))\r\n    }\r\n\r\n    getCardsMaxCount({ index, phrase }): Observable<IIngredeintMatches> {\r\n        return this.http.get<IIngredeintMatches>(ignredientPaths.getCardsTotalCount(index, phrase))\r\n    }\r\n\r\n    nameTaken(name: string): Observable<boolean> {\r\n        return this.http.get<boolean>(ignredientPaths.chkNameTaken(name))\r\n    }\r\n\r\n    getEssentialIngCards(page: number, index: string, phrase: string): Observable<IIngredientCard[]> { return this.getCards(page, index, phrase, true) }\r\n    getNonEssentialIngsCards(page: number, index: string, phrase: string): Observable<IIngredientCard[]> { return this.getCards(page, index, phrase) }\r\n    private getCards(page: number, index: string, phrase: string, essential: boolean = false): Observable<IIngredientCard[]> {\r\n        return this.http.get<IIngredientCard[]>(ignredientPaths.getCards(page, index, phrase, essential));\r\n    }\r\n\r\n    getEditDataById(id: number): Observable<IIngredientEdit> {\r\n        return this.http.get<IIngredientEdit>(ignredientPaths.editGet(id))\r\n    }\r\n\r\n    createIngredient(value: IIngredientCreate): Observable<number> {\r\n        return this.http.post<number>(ignredientPaths.base, value)\r\n    }\r\n\r\n    editIngredient(editValue: IIngredientEdit): Observable<number> {\r\n        return this.http.put<number>(ignredientPaths.base, editValue);\r\n    }\r\n\r\n    getIngredientNames(ids: string): Observable<string[]> {\r\n        return this.http.get<string[]>(ignredientPaths.getNamesByIds(ids));\r\n    }\r\n\r\n    deleteIngredientById(id: number): Observable<any> {\r\n        return this.http.delete<any>(ignredientPaths.delete(id));\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { messagePaths } from '../settings/apiSettings';\nimport { IMessageSend } from '../interfaces/message-interfaces/messageSend';\nimport { SignalRNewMessagesService } from './signal-r.new-messages.service';\nimport { IMessageRecievedSent } from '../interfaces/message-interfaces/messageRecieve';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  constructor(private http: HttpClient, private authService: AuthService,  public signalR: SignalRNewMessagesService) {\n  }\n\n  submitMsg(content: string, recieverId: string): Observable<any> {\n    let messageObj: IMessageSend = { recieverId, content, senderId: this.authService.getUserInfo().id };\n    return this.http.post(messagePaths.base, messageObj)\n  }\n\n  markReadMessage(messageId: number): Observable<number> {\n    return this.http.put<number>(messagePaths.base, messageId);\n  }\n\n  getRecievedMessages(): Observable<IMessageRecievedSent[]> {\n    return this.http.get<IMessageRecievedSent[]>(messagePaths.base)\n  }\n\n  getSentMessages(): Observable<IMessageRecievedSent[]> {\n    return this.http.get<IMessageRecievedSent[]>(messagePaths.sentMessages)\n  }\n\n  deleteMessage(messageId: number): Observable<any> {\n    return this.http.delete(messagePaths.delete(messageId));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { recipePaths } from '../settings/apiSettings';\nimport { Observable } from 'rxjs';\nimport { IRecipeMiniInfo } from '../interfaces/recipes/recipeMiniInfo';\nimport { HelperService } from './helper.service';\nimport { IRecipeDetails } from '../interfaces/recipes/RecipeDetails';\nimport { IRecipeCreate } from '../interfaces/recipes/IRecipeCreate';\nimport { IRecipeEdit } from '../interfaces/recipes/IRecipeEdit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  constructor(private http: HttpClient) { }\n\n  getRecipes(criteria: string, val: string, pageNum: number): Observable<IRecipeMiniInfo[]> {\n    return this.http.get<IRecipeMiniInfo[]>(recipePaths.getMinified(pageNum, criteria, val))\n  }\n\n  getPrivateRecipes(criteria: string, pageNum: number): Observable<IRecipeMiniInfo[]> {\n    return this.http.get<IRecipeMiniInfo[]>(recipePaths.getMinifiedPrivate(pageNum, criteria))\n  }\n\n  getDetails(id: string): Observable<IRecipeDetails> {\n    return this.http.get<IRecipeDetails>(recipePaths.base + id);\n  }\n\n  favUnfavRecipe(id: string): Observable<boolean> {\n    return this.http.put<boolean>(recipePaths.favUnvaf, JSON.stringify(id), HelperService.appJsonHeader);\n  }\n\n  rateRecipe(id: string, score: number): Observable<any> {\n    return this.http.put(recipePaths.setRating, { id, score });\n  }\n\n  nameTaken(name: string): Observable<boolean> {\n    return this.http.get<boolean>(recipePaths.chkNameTaken(name))\n  }\n\n\n  submitRecipe(recipe: IRecipeCreate): Observable<any> {\n    return this.http.post(recipePaths.base, recipe, { responseType: 'text' })\n  }\n\n  getEditDetails(id: string): Observable<IRecipeEdit> {\n    return this.http.get<IRecipeEdit>(recipePaths.edit(id))\n  }\n\n  editRecipe(recipe: IRecipeEdit): Observable<any> {\n    return this.http.put(recipePaths.base, recipe, { responseType: 'text' })\n  }\n\n  deleteIngredientById(id: string): Observable<any> {\n    return this.http.delete(recipePaths.delete(id))\n  }\n}\n","\nimport * as signalR from \"@aspnet/signalr\";\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: \"root\" })\nexport class SignalRNewMessagesService {\n  unreadCount = 0;\n  private hubConnection: signalR.HubConnection\n\n  public startConnection = (userName: string): Promise<any> => {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:5001/unread-messages')\n      .build();\n\n    return this.hubConnection\n      .start()\n      .then(() => console.log('Connection started')).then(() =>\n        this.hubConnection.invoke(\"RegisterUserConnection\", userName))\n      .then(() => {\n        console.log(\"registered connection for \" + userName);\n        this.monitorChange();\n      })\n      .catch(err => console.log('Error while starting connection: ', err))\n  }\n\n  stopConnection(): Promise<any> {\n    return this.hubConnection.invoke(\"RemoveUserConnection\")\n      .then(() => console.log(\"connection closed\"))\n      .catch(console.log);\n  }\n\n  monitorChange() {\n    this.hubConnection.on('updateUnrCount', (unreadCount: number) => {\n      console.log(\"obnovqvame\", unreadCount);\n      this.unreadCount = unreadCount\n    });\n  }\n\n  updateUserUnreadCount = (userName: string) => {\n    this.hubConnection.invoke('UpdateUserUnreadCount', userName).catch(console.log)\n  }\n}\n","\r\nimport * as signalR from \"@aspnet/signalr\";\r\nimport { Injectable } from '@angular/core';\r\nimport { IComment } from '../interfaces/comments/IComment';\r\nimport { ICommentLikeStatus } from '../interfaces/comments/ILikesCommentStatus';\r\nimport { ICommentContentStatus } from '../interfaces/comments/ICommentContentStatus';\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SignalRRecipeDetailsService {\r\n    unreadCount = 0;\r\n    private hubConnection: signalR.HubConnection\r\n\r\n    private recipeMonitored: { id: string } = null;\r\n    private commentsMonitored: IComment[] = null;\r\n    public startConnection = (rec: { id: string }): Promise<any> => {//TODO\r\n        this.hubConnection = new signalR.HubConnectionBuilder()\r\n            .withUrl('https://localhost:5001/recipe-details')\r\n            .build();\r\n\r\n        return this.hubConnection\r\n            .start()\r\n            .then(() => console.log('Connection started')).then(() =>\r\n                this.hubConnection.invoke(\"RegisterUserConnection\", rec.id))\r\n            .then(() => {\r\n                console.log(\"registered connection for details monitoring...\");\r\n                this.recipeMonitored = rec;\r\n                this.startListening();\r\n            })\r\n            .catch(err => console.log('Error while starting connection: ', err))\r\n    }\r\n\r\n    stopConnection(): Promise<any> {\r\n        return this.hubConnection.invoke(\"RemoveUserConnection\")\r\n            .then(() => console.log(\"connection closed\"))\r\n            .catch(console.log);\r\n    }\r\n\r\n    patchRecipeData(newFragment: {}): Promise<any> {\r\n        return this.hubConnection.invoke(\"ChangeDetailsProp\", this.recipeMonitored.id, newFragment);\r\n    }\r\n\r\n    private startListening() {\r\n        this.hubConnection.on(\"updateRecipeData\", (newPatch: {}) => {\r\n            //   console.log(\"Recieved details update...\", newPatch);\r\n            Object.entries(newPatch).forEach(([key, value]) => {\r\n                this.recipeMonitored[key] = value;\r\n            })\r\n        })\r\n    }\r\n\r\n    private enqueueComment(comment: IComment) { this.commentsMonitored.unshift(comment) }\r\n\r\n    private deleteCommentById(id: number) {\r\n        const commentIndex = this.commentsMonitored.findIndex(x => x.id === id);\r\n        if (commentIndex === -1) return;\r\n        this.commentsMonitored.splice(commentIndex, 1);\r\n    }\r\n\r\n    private setCommentVotes(stat: ICommentLikeStatus) {\r\n        let commentFd = this.commentsMonitored.find(x => x.id === stat.id);\r\n        if (!commentFd) return; //this comment is not yet displayed so no need of updating.\r\n        commentFd.likers = stat.likers;\r\n        commentFd.disLikers = stat.disLikers;\r\n    }\r\n\r\n    private setCommentContent(stat: ICommentContentStatus) {\r\n        let commentFd = this.commentsMonitored.find(x => x.id === stat.id);\r\n        if (!commentFd) return; //this comment is not yet displayed so no need of updating.\r\n        commentFd.dateModified = stat.dateModified;\r\n        commentFd.content = stat.content;\r\n    }\r\n\r\n    monitorComments(comments: IComment[]) {\r\n        console.log(\"registered set of comments for monitoring...\");\r\n        this.commentsMonitored = comments;\r\n        this.hubConnection.on(\"addNewComment\", (comment: IComment) => {\r\n            //  console.log(\"recieved new comment...\");\r\n            this.enqueueComment(comment);\r\n        });\r\n        this.hubConnection.on(\"deleteComment\", (id: number) => {\r\n            //  console.log(\"recieved new comment...\");\r\n            this.deleteCommentById(id);\r\n        });\r\n\r\n        this.hubConnection.on(\"updateCommentVotes\", (st: ICommentLikeStatus) => {\r\n            //  console.log(\"someone voted for comment...\");\r\n            this.setCommentVotes(st);\r\n        });\r\n        \r\n        this.hubConnection.on(\"updateCommentContent\", (st: ICommentContentStatus) => {\r\n            //  console.log(\"someone voted for comment...\");\r\n            this.setCommentContent(st);\r\n        });\r\n    }\r\n\r\n    addComment(newCommentForDisplay: IComment) {\r\n        this.enqueueComment(newCommentForDisplay);\r\n        this.hubConnection.invoke(\"AddComment\", this.recipeMonitored.id, newCommentForDisplay);\r\n    }\r\n\r\n    removeComment(id: number) {\r\n        this.deleteCommentById(id);\r\n        this.hubConnection.invoke(\"DeleteComment\", this.recipeMonitored.id, id);\r\n    }\r\n\r\n    changeCommentVote(status: ICommentLikeStatus) {\r\n        this.setCommentVotes(status);\r\n        this.hubConnection.invoke(\"ChangeCommentVote\", this.recipeMonitored.id, status)\r\n    }\r\n\r\n    changeCommentContent(status: import(\"../interfaces/comments/ICommentContentStatus\").ICommentContentStatus) {\r\n        this.setCommentContent(status);\r\n        this.hubConnection.invoke(\"ChangeCommentContent\", this.recipeMonitored.id, status)\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IUserProfileData } from '../interfaces/user-data-interfaces/uprofile';\nimport { HttpClient } from '@angular/common/http';\nimport { userDataPaths } from '../settings/apiSettings';\nimport { AuthService } from './auth.service';\nimport { ISmallUserInfo } from '../interfaces/user-data-interfaces/userSmallData';\nimport { IUserProfileEditData } from '../interfaces/user-data-interfaces/userProfileEditData';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserDataService {\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  getUserInfoByUserName(userName: string): Observable<IUserProfileData> {\n    return this.http.get<IUserProfileData>(userDataPaths.userProfileData(userName))\n  }\n\n  changeBlockedStatus(IrritatorUserName: string): Observable<any> {\n    return this.http.post(userDataPaths.setBlocking, { IrritatorUserName, DefendorUserName: this.authService.getUserInfo().userName});\n  }\n\n  getUserInfoForEditing(): Observable<IUserProfileEditData> {\n    debugger\n    return this.http.get<IUserProfileEditData>(userDataPaths.userInfo)\n  }\n\n  updateUserData(dataWithPassword: IUserProfileEditData): Observable<any> {\n    return this.http.post(userDataPaths.userInfo, dataWithPassword)\n  }\n\n  getBlockedUserInfos(): Observable<ISmallUserInfo[]> {\n    return this.http.get<ISmallUserInfo[]>(userDataPaths.blocked)\n  }\n  \n\n  getBlockerUserInfos(): Observable<ISmallUserInfo[]> {\n    return this.http.get<ISmallUserInfo[]>(userDataPaths.myblockers)\n  }\n}"," const basePath: string = \"https://localhost:5020/\";\r\n// const basePath: string = \"http://localhost:5020/\";\r\n\r\nexport const authPaths: IAuthPaths = {\r\n    checkUserNameOrEmailTaken: basePath + \"users/is-singIn-data-free\",//post\r\n    registerUser: basePath + \"users/register\",//post\r\n    logInUser: basePath + \"users/login\",//post\r\n    updateToken: basePath + \"users/update-my-token\",//post\r\n}\r\n\r\nexport interface IAuthPaths {\r\n    checkUserNameOrEmailTaken: string,\r\n    registerUser: string,\r\n    logInUser: string\r\n    updateToken: string,\r\n}\r\n\r\nexport const userDataPaths: IUserDataPaths = {\r\n    userProfileData: (uName: string) => basePath + \"userData/profileInfo?userName=\" + uName,//get\r\n\r\n    userInfo: basePath + \"userData/profile\",//post get\r\n    blocked: basePath + \"userData/blocked\",\r\n    myblockers: basePath + \"userData/my-blockers\",\r\n    submitEdittedData: basePath + \"userData/editData\",//post\r\n    setBlocking: basePath + \"userData/setUserBlocking\",//post\r\n}\r\n\r\nexport interface IUserDataPaths {\r\n    userProfileData: (uName: string) => string,\r\n    userInfo: string,\r\n    blocked: string,\r\n    myblockers: string,\r\n    submitEdittedData: string,\r\n    setBlocking: string,\r\n}\r\n\r\nexport const messagePaths: IMessagePaths = {\r\n    base: basePath + \"messages/\",//post//put//get\r\n    delete: (id: number) => basePath + `messages/${id}`,//post\r\n    sentMessages: basePath + \"messages/sent\",\r\n}\r\n\r\nexport interface IMessagePaths {\r\n    base: string,\r\n    delete: (id: number) => string,\r\n    sentMessages: string\r\n}\r\n\r\nexport const recipePaths: IRecipePaths = {\r\n    base: basePath + \"recipes/\",//post//put//get\r\n    getMinified: (pNum, crit, val) => basePath + `recipes?criteria=${crit}&val=${val}&pageNum=${pNum}`,\r\n    getMinifiedPrivate: (pNum, crit) => basePath + `recipes/private?criteria=${crit}&pageNum=${pNum}`,\r\n    favUnvaf: basePath + \"recipes/fav-unfav\",\r\n    setRating: basePath + \"recipes/set-rating\",\r\n    chkNameTaken: (name) => basePath + `recipes/name-used?name=${name}`,\r\n    edit: (id) => basePath + `recipes/edit?id=${id}`,\r\n    delete: (id) => basePath + `recipes?id=${id}`\r\n}\r\n// \"outputPath\": \"../../AcreshApi/ACRESH_API/ACRESH_API/wwwroot/\",\r\nexport interface IRecipePaths {\r\n    base: string,\r\n    getMinified: (pNum: number, crit: string, val: string, ) => string,\r\n    getMinifiedPrivate: (pNum: number, crit: string, ) => string,\r\n    favUnvaf: string,\r\n    setRating: string,\r\n    chkNameTaken: (name: string) => string,\r\n    edit: (id: string) => string,\r\n    delete(id: string): string;\r\n}\r\n\r\nexport const categoryPaths: ICategoryPath = {\r\n    base: basePath + \"categories/\",\r\n    getAllMini: basePath + \"categories/all-mini\",\r\n    getThreeStructure: basePath + \"categories/three\",\r\n    getDetails: (id: number) => basePath + `categories/details?id=${id}`,\r\n    nameUsed: (name: string) => basePath + `categories/name-used?name=${name}`,\r\n    delete: (id) => basePath + `categories?id=${id}`,\r\n    getEditDetails: (id) => basePath + `categories/edit-details?id=${id}`\r\n}\r\n\r\nexport interface ICategoryPath {\r\n    getEditDetails(id: number): string;\r\n    base: string,\r\n    getAllMini: string\r\n    getThreeStructure: string,\r\n    getDetails(id: number): string;\r\n    nameUsed(name: string): string;\r\n    delete(id: number): string;\r\n}\r\n\r\nexport const ignredientPaths: IIgnredientPaths = {\r\n    base: basePath + \"ingredients/\",\r\n    getAllMini: basePath + \"ingredients/all-mini\",\r\n    getDetails: (id: number) => basePath + \"ingredients/details/\" + id,\r\n    chkNameTaken: (name) => basePath + `ingredients/name-used?name=${name}`,\r\n    getRecipeIngredients: (id) => basePath + `ingredients/recipe?id=${id}`,\r\n    getCardsTotalCount: (index, phrase) => basePath + `ingredients/cards-count?index=${index}&phrase=${phrase}`,\r\n    getCards: (page, index, phrase, essential) => basePath + `ingredients/cards?page=${page}&index=${index}&phrase=${phrase}&essential=${essential}`,\r\n    editGet: (id) => basePath + `ingredients/edit?id=${id}`,\r\n    delete: (id) => basePath + `ingredients?id=${id}`,\r\n    getNamesByIds: (ids) => basePath + `ingredients/get-names?ids=${ids}`,\r\n}\r\n\r\nexport interface IIgnredientPaths {\r\n    base: string,\r\n    getAllMini: string,\r\n    getDetails: (id: number) => string,\r\n    chkNameTaken: (name: string) => string,\r\n    getRecipeIngredients: (id: string) => string,\r\n    getCardsTotalCount: (index: string, phrase: string) => string,\r\n    getCards: (page: number, index: string, phrase: string, essential: boolean) => string,\r\n    editGet: (id: number) => string,\r\n    delete: (id: number) => string,\r\n    getNamesByIds: (ids: string) => string;\r\n}\r\n\r\nexport const commentsPaths: ICommentPaths = {\r\n    base: basePath + \"comments/\",\r\n    delete: (id) => basePath + `comments/${id}`,\r\n    getAllForRecipe: (page, id) => basePath + `comments/for-recipe?page=${page}&recipeId=${id}`,\r\n    setVote: basePath + \"comments/set-vote\",\r\n}\r\n\r\nexport interface ICommentPaths {\r\n    setVote: string;\r\n    base: string,\r\n    delete: (id: number) => string,\r\n    getAllForRecipe: (page, id) => string,\r\n}","export const minLengthFields = {\r\n    username: 4,\r\n    password: 4,\r\n    description: 4\r\n  }\r\n  \r\n export const maxLengthFields = {\r\n    names: 64,\r\n    description: 512,\r\n  }\r\n  \r\n export const avImages = {\r\n    male: [\r\n      \"https://cdn.clipart.email/352db2f55a127c0929aac48ae5be5387_hotel-cook-clipart-png-clipartxtras_931-983.jpeg\",\r\n      \"https://thumbs.dreamstime.com/z/cook-2731503.jpg\",\r\n      \"https://thumbs.dreamstime.com/z/chef-cook-baker-mixing-bowl-cartoon-27376733.jpg\",\r\n      \"https://previews.123rf.com/images/vanilladesign/vanilladesign1203/vanilladesign120300176/12744030-chef-cook-with-hamburger.jpg\",\r\n      \"https://image.freepik.com/free-vector/hand-drawn-background-cook-with-tray_23-2147630131.jpg\",\r\n      \"https://clipartstation.com/wp-content/uploads/2017/11/hotel-cook-clipart-2.jpg\"\r\n    ],\r\n    female: [\r\n      \"https://img.favpng.com/22/14/25/chef-cartoon-female-cooking-png-favpng-TjMzKhEDbGVxHkD8PP1mT59jp.jpg\",\r\n      \"https://i.pinimg.com/originals/7c/b0/18/7cb018683132322074c039046f55d01a.jpg\",\r\n      \"https://all4desktop.com/data_images/original/4245978-cook.jpg\",\r\n      \"https://cdn1.vectorstock.com/i/1000x1000/75/65/chef-woman-with-pan-vector-21447565.jpg\",\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSn_U4nrivVLO7CQ3tSTprLOM5Fw-TpDbdOKgc0g9hl7js6jKyT&s\"\r\n    ],\r\n    ufo: [\r\n      \"https://shannawynne.files.wordpress.com/2012/06/alien_bbq_photosculpture-p153342890522009839env3c_400.jpg\",\r\n      \"https://2.bp.blogspot.com/-ZFVaTfkcy0I/XBXx2IGvfSI/AAAAAAAAJnY/hv22L0lrCkUzr4b_1LUEafHnDJ5Y_7fTACLcBGAs/s1600/alien.jpg\",\r\n      \"https://2.bp.blogspot.com/-zgznGX6lCFs/U6h6hUgRayI/AAAAAAAAkMY/zNY-B0J_qFo/s1600/zzzzzz.001.jpg\",\r\n      \"https://i0.wp.com/metro.co.uk/wp-content/uploads/2018/10/sei_36554009-212f.jpg?quality=90&strip=all&zoom=1&resize=644%2C483&ssl=1\"\r\n    ]\r\n  }","import { ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nexport function sameFieldsValidator(valueFunc: ()=>any): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n        return control.value !== valueFunc() ? { 'mismatch': true } : null;\r\n    };\r\n}","import { ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nexport function takenValueValidator<T>(takenValues: T[], ): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: T } | null => {\r\n        return takenValues.includes(control.value as T) ? { 'valueTaken': control.value } : null;\r\n    };\r\n}","import { ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport let takenNames = [];\r\nexport function takenNameValidatorAsync(isNameTakenMethod: (str: string) => Observable<boolean>, allowedNonChecked: string[] = [], caseInsensitive = true): ValidatorFn {\r\n    return (control: AbstractControl): null | { [key: string]: any; } => {\r\n        const { value } = control;\r\n        const res_val = null;\r\n        const res_inv = { 'valueTaken': control.value };\r\n        const res_nocheck = { 'valueTakenNoCheck': false };\r\n        console.log(allowedNonChecked);\r\n        if (control.invalid || value === \"\") { return res_nocheck }\r\n        if ((!caseInsensitive && allowedNonChecked.includes(value)) ||\r\n            (caseInsensitive && allowedNonChecked.some(x => x.toLowerCase() === value.toLowerCase()))) {\r\n            return res_val\r\n        }\r\n        if ((!caseInsensitive && takenNames.includes(value)) ||\r\n            (caseInsensitive && takenNames.some(x => x.toLowerCase() === value.toLowerCase()))) {\r\n            return res_inv\r\n        }\r\n        isNameTakenMethod(value).subscribe(answ => {\r\n            if (!answ) {\r\n                return res_val;\r\n            }\r\n            takenNames.push(value);\r\n            control.updateValueAndValidity();\r\n            console.log(\"tested but taken\", takenNames);\r\n        });\r\n    };\r\n}","import { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { OriginTypes } from 'src/app/core/enumerations/OriginTypes';\nimport { HelperService } from 'src/app/core/services/helper.service';\nimport { MeasureTypes } from 'src/app/core/enumerations/MeasureTypes';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { IIngredientCreate } from 'src/app/core/interfaces/ingredients/IIngredientCreate';\nimport { takenNameValidatorAsync } from 'src/app/core/validators/takenNameValidatorAsync';\n\n@Component({\n  selector: 'acr-create-edit-ingredient-form',\n  templateUrl: './create-edit-ingredient-form.component.html',\n  styleUrls: ['./create-edit-ingredient-form.component.css'],\n  animations: [\n    trigger('showHide', [\n      transition('void=>*', [style({ opacity: '0', transform: 'scaleY(0.1)' }), animate(2000)]),\n      transition('*=>void', [animate(2000), style({ opacity: '0', transform: 'scaleY(0.1)' })]),\n    ])\n  ]\n})\nexport class CreateEditIngredientFormComponent implements OnDestroy {\n\n  @Output()\n  btnClickEvent: EventEmitter<IIngredientCreate> = new EventEmitter<IIngredientCreate>();\n\n  get btnDisabled() {\n    return this.form.pristine || this.form.invalid || HelperService.compareObjects(this._ingredient, this.form.value);\n  }\n\n  @Input()\n  settings: { headline: string, submitBtnTitle: string };\n\n  private _ingredient: IIngredientCreate = null;\n\n  @Input()\n  set ingredient(value: IIngredientCreate) {\n    this._ingredient = value;\n    this.namesAllowed.push(value.name);\n    this.form.patchValue(value);\n  }\n  private namesAllowed: string[] = [];\n  subscriptions: Subscription[] = [];\n\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private ingService: IngredientService, private authService: AuthService) {\n    this.buildForm();\n  }\n\n  getCtrl(name: string) {\n    return this.form.get(name);\n  }\n\n  getErr(name: string, errName: string) {\n    return this.getCtrl(name).errors[errName];\n  }\n  //Used to clasify input field as valid or not\n  getValClasses(name: string): { 'is-invalid': boolean, 'is-valid': boolean } {\n    const ctrl = this.getCtrl(name);\n    return { 'is-invalid': (ctrl.invalid && ctrl.touched), 'is-valid': ctrl.valid }\n  }\n\n  invalidTouchedCtrl(name: string) {\n    return this.getCtrl(name).invalid && this.getCtrl(name).touched;\n  }\n\n  measureTypes = HelperService.getEnumOptions(MeasureTypes);\n  originTypes = HelperService.getEnumOptions(OriginTypes)\n                             .sort((a, b) =>a[0].length-b[0].length);\n\n  picUrl = null;\n  buildForm() {\n    this.form = this.fb.group({\n      authorId: this.authService.getUserInfo().id,\n      name: [\"\", { validators: [Validators.required, takenNameValidatorAsync(this.ingService.nameTaken.bind(this.ingService), this.namesAllowed), Validators.minLength(4), Validators.maxLength(32), Validators.pattern('[a-zA-Z]+(\\\\s[a-zA-Z]{2,})?')], updateOn: \"blur\" }],\n      isEssential: [false, [Validators.required]],\n      measureType: [1, [Validators.required]],\n      origin: [1, [Validators.required]],\n      picUrl: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required, Validators.minLength(32), Validators.maxLength(10240)]],\n    })\n\n    const pic = this.form.get('picUrl');\n    pic.valueChanges.subscribe(v => {\n      if (pic.invalid) return;\n      this.picUrl = null;\n      setTimeout(() => this.picUrl = v, 2000)\n    })\n  }\n\n  submitForm() {\n    if (this.form.valid) { this.btnClickEvent.emit(this.form.value) }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.filter(x => !x.closed).forEach(x => x.unsubscribe());\n  }\n}","<div class=\"container-fluid px-2\">\n    <h3 class=\"text-center\">{{settings.headline}}</h3>\n    <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n    <div class=\"row justify-content-between fields\">\n        <div class=\"col-5 pl-2\">\n                <div class=\"form-group \">\n                    <div class=\"form-group has-danger has-success\">\n                        <label class=\"form-control-label h5\" for=\"name\"> Ingredient Name*:</label>\n                        <input formControlName=\"name\" class=\"form-control\" id=\"name\" [ngClass]=\"getValClasses('name')\"\n                            placeholder=\"Name...\">\n                        <div class=\"invalid-feedback\" *ngIf=\"invalidTouchedCtrl('name')\"\n                            [innerText]=\"getErr('name','required')?'Please provide Ingredient Name!':\n                                                       getErr('name','minlength')?'Please provide name with length atleast '+getErr('name','minlength')['requiredLength']+' symbols long!':\n                                                       getErr('name','maxlength')?'Please provide name with length shorter than '+getErr('name','maxlength')['requiredLength']+' symbols long!':\n                                                       getErr('name','valueTaken')?'The name ' + getErr('name','valueTaken') + ' is already in use!':\n                                                       getErr('name','pattern')?'Please provide name consisting of one word, or two words with 1 space between them':'unknown-Error'\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"custom-control custom-switch\">\n                        <input formControlName=\"isEssential\" type=\"checkbox\" class=\"custom-control-input mr-2 text-success\" id=\"isEssential\">\n                        <label class=\"custom-control-label h5\" for=\"isEssential\" [ngClass]=\"{'text-success':form.get('isEssential').value}\">{{form.get('isEssential').value?'Primary':'Additional'}} Ingredient</label>\n                    </div>\n                </div>                \n                \n                <legend class=\"h5\">Measure Units Type*:</legend>\n                <div class=\"form-check pb-2 pl-4\" *ngFor=\"let type of measureTypes\">\n                    <label class=\"form-check-label\" >\n                        <input type=\"radio\" name=\"measureType\" class=\"form-check-input\" formControlName=\"measureType\"\n                        [value]=\"type[1]\"> {{type[0]}}\n                    </label>\n                </div>\n                \n                <legend class=\"h5\">Origin Types*:</legend>\n                <div class=\"form-check pb-2 pl-4\" *ngFor=\"let type of originTypes\">\n                    <label class=\"form-check-label\" >\n                        <input type=\"radio\" name=\"origin\" class=\"form-check-input\" formControlName=\"origin\"\n                        [value]=\"type[1]\"> {{type[0]}}\n                    </label>\n                </div>\n                \n                <div class=\"form-group \">\n                    <div class=\"form-group has-danger has-success\">\n                        <label class=\"form-control-label h5\" for=\"name\"> Picture Url*:</label>\n                        <input formControlName=\"picUrl\" class=\"form-control\" id=\"picUrl\" [ngClass]=\"getValClasses('picUrl')\" placeholder=\"Picture url...\">\n                        <div class=\"invalid-feedback\" *ngIf=\"invalidTouchedCtrl('picUrl')\" [innerText]=\"getErr('picUrl','required')?'Please provide Picture Url!':'unknown-Error'\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"custom-control custom-switch\">\n                        <input type=\"checkbox\" class=\"custom-control-input mr-2 text-success\" id=\"isVegan\" [checked]=\"form.get('origin').value!='3'\" readonly>\n                        <label class=\"custom-control-label h5\" [ngClass]=\"{'text-success':form.get('origin').value!='3'}\">{{form.get('origin').value!=3?'':'Non'}} Vegan Compatible</label>\n                    </div>\n                </div>\n               \n            </div>\n            <div class=\"col-7\">\n                <div class=\"media\">\n                   <h5> Ingredient Picture</h5>\n                   <img @showHide *ngIf=\"picUrl\" [src]=\"picUrl\" alt=\"ingredient main picture\">  \n                </div>\n                <div class=\"desc\">\n                    <div class=\"form-group\">\n                        <label for=\"desc\" class=\"h5\">Description*:</label>\n                        <textarea class=\"form-control\" formControlName=\"description\" id=\"desc\" rows=\"4\"\n                            placeholder=\"Describe what this ingredient is ...\"></textarea>\n                    </div>\n                    <div *ngIf=\"getCtrl('description').touched && getCtrl('description').invalid\">\n                        <div class=\"alert alert-danger\">\n                            <span *ngIf=\"getCtrl('description').errors['required']\">  Please provide description!</span>\n                            <span *ngIf=\"getCtrl('description').errors['minlength']\"> Please provide description with length atleast {{getCtrl('description').errors['minlength']['requiredLength']}} symbols long!</span>\n                            <span *ngIf=\"getCtrl('description').errors['maxlength']\"> Please provide description with length lesser than {{getCtrl('description').errors['maxlength']['requiredLength']}} symbols long!</span>\n                        </div>\n                    </div>\n                </div>  \n            </div>\n        </div>\n        <!-- {{form.value|json}} -->\n        <div class=\"row justify-content-end px-3\">\n                <button type=\"submit\" class=\"center btn btn-success action-btn\" [disabled]=\"btnDisabled\" [innerHTML]=\"settings.submitBtnTitle| htmlRaw\"> </button>\n        </div>\n    </form>\n</div>","import { Component } from '@angular/core';\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { IIngredientCreate } from 'src/app/core/interfaces/ingredients/IIngredientCreate';\n\n@Component({\n  selector: 'acr-create-ingredient',\n  templateUrl: './create-ingredient.component.html',\n  styleUrls: ['./create-ingredient.component.css']\n})\nexport class CreateIngredientComponent {\n\n  settings = { headline: \"Create New Ingredient\", submitBtnTitle: \"<i class='fas fa-plus-circle'></i> &nbsp; Create\" };\n  constructor(private ingService: IngredientService, private router: Router, private toastr: ToastrService) { }\n\n  createIngredient(value:IIngredientCreate) {\n    this.ingService.createIngredient(value).subscribe(id => {\n      this.toastr.success(\"Created new Ingredient\", \"Congratulations!\");\n      this.router.navigate(['/ingredients', { outlets: { 'ing-outlet': ['details', id] } }])\n    }, (e) => {\n      this.toastr.error(\"No igredient was created\", \"Failure!\");\n      console.error(\"Problem\",e);\n    })\n  }\n}\n","<acr-create-edit-ingredient-form [settings]=\"settings\" (btnClickEvent)=\"createIngredient($event)\">\n</acr-create-edit-ingredient-form>","import { Component, } from '@angular/core';\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { IIngredientEdit } from 'src/app/core/interfaces/ingredients/IIngredientEdit';\nimport { IIngredientCreate } from 'src/app/core/interfaces/ingredients/IIngredientCreate';\nimport { IIngredientDetails } from 'src/app/core/interfaces/ingredients/IIngredientDetails';\n\n@Component({\n  selector: 'acr-edit-ingredient',\n  templateUrl: './edit-ingredient.component.html',\n  styleUrls: ['./edit-ingredient.component.css']\n})\nexport class EditIngredientComponent {\n\n  private id: number;\n  ingredient: IIngredientDetails;\n  settings = { headline: \"Edit Ingredient\", submitBtnTitle: \"<i class='fas fa-edit'></i> &nbsp; Edit\" };\n  constructor(private ingService: IngredientService, private router: Router, private toastr: ToastrService, route: ActivatedRoute) {\n    this.ingredient = route.snapshot.data.data;\n    this.id = this.ingredient.id;\n    delete this.ingredient.id;\n  }\n\n  editIngredient(value: IIngredientCreate) {\n    debugger;\n    let editValue: IIngredientEdit = { ...value, ...{ id: this.id } };\n    this.ingService.editIngredient(editValue).subscribe(id => {\n      this.toastr.success(\"Edited ingredient :)\", \"Congratulations!\");\n      this.router.navigate(['/ingredients', { outlets: { 'ing-outlet': ['details', id] } }])\n    }, (e) => {\n      this.toastr.success(\"No igredient was eddited :(\", \"Failure!\");\n      debugger;\n      console.error(\"Problem\", e);\n    })\n  }\n\n}\n","<acr-create-edit-ingredient-form [settings]=\"settings\" (btnClickEvent)=\"editIngredient($event)\" [ingredient]=\"ingredient\">\n</acr-create-edit-ingredient-form>","import { Component, Input, AfterViewInit } from '@angular/core';\nimport { IIngredientCard } from 'src/app/core/interfaces/ingredients/IIngredient-card';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'acr-ingredient-card',\n  templateUrl: './ingredient-card.component.html',\n  styleUrls: ['./ingredient-card.component.css']\n})\nexport class IngredientCartComponent implements AfterViewInit {\n  @Input()\n  ingrIdSelected: BehaviorSubject<number>;\n\n  isChosen = false;\n\n  @Input()\n  ingredient: IIngredientCard = {\n    id: 12,\n    name: \"Kanela\",\n    picUrl: \"https://images.pexels.com/photos/414612/pexels-photo-414612.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=200\",\n    usageCount: 123,\n    isVegan: false,\n    origin: \"Plant\",\n    authorUserName: \"User1215\",\n  }\n\n  constructor() {  }\n\n  ngAfterViewInit(): void {\n    this.ingrIdSelected.subscribe(id => {\n      this.isChosen = id === this.ingredient.id;\n    })\n  }\n\n  loadIngredientInfo() {\n    this.ingrIdSelected.next(this.ingredient.id);\n  }\n}","<section class=\"ing-cart\" [ngClass]=\"{'selected':isChosen}\" (click)=\"loadIngredientInfo()\">  \n            <img [src]=\"ingredient.picUrl\" [alt]=\"ingredient.name+'-picture'\">\n            <p><strong>{{ingredient.name}}</strong></p> \n            <p> Used in {{ingredient.usageCount}} recipes so far.</p>\n            <p> Origin-{{ingredient.origin}}. <span *ngIf=\"ingredient.isVegan\">Vegan compatible!</span> <span *ngIf=\"!ingredient.isVegan\">Non-Vegan!</span></p>       \n            <p> Author: {{ingredient.authorUserName}}</p>       \n</section>","import { Component, Input } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { IIngredientDetails } from \"src/app/core/interfaces/ingredients/IIngredientDetails\";\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { HelperService } from 'src/app/core/services/helper.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogQuestionComponent } from '../../core/components/questionComponent/dialog-question.component';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'acr-ingredient-details',\n  templateUrl: './ingredient-details.component.html',\n  styleUrls: ['./ingredient-details.component.css']\n})\nexport class IngredientDetailsComponent {\n\n  ingredient: IIngredientDetails = null;\n  // {\n  //   id: 12,\n  //   name: \"Cinamon\",\n  //   picUrl: \"https://images.pexels.com/photos/414612/pexels-photo-414612.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=200\",\n  //   isVegan: false,\n  //   isDeleted: false,\n  //   origin: \"Plant\",\n  //   lastModified: 32213,\n  //   usageCount: 312,\n  //   authorUserName: \"User1\",\n  //   measureType: \"Weight_Units\",\n  //   description: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?Lorem ipsum dolor, sit amet consectetur adipisicing elit. Commodi necessitatibus nisi minus tempore molestias. Modi incidunt esse nulla veritatis ipsam iusto quia eveniet optio, qui consequatur ipsa aliquam provident suscipit?\"\n  // }\n\n  @Input()\n  chosenIngrId: BehaviorSubject<number>\n\n  constructor(route: ActivatedRoute, private authService: AuthService, private ingService: IngredientService, private router: Router, private dialog: MatDialog, private toastr: ToastrService) {\n    route.params.subscribe(({ id }) => {\n      if (!id || isNaN(id) || +id === 0) { this.ingredient = null; return; }\n      if (this.ingredient && this.ingredient.id === id) return;\n      this.ingService.getIngredientDetails(+id).subscribe(det => this.ingredient = det)\n    })\n  }\n\n  private get myInfo() { return this.authService.getUserInfo(); }\n\n  get isEditAuthorised() { return this.myInfo?.userName === this.ingredient.authorUserName || this.authService.isAdmin; }\n  get isDeleteAuthorised() { return this.ingredient.usageCount === 0 && this.isEditAuthorised }\n  get modificationDate() { return HelperService.timeElapsed(this.ingredient.lastModified) }\n\n  confirmDelete() {\n    let dialogRef = this.dialog.open(DialogQuestionComponent,\n      {\n        width: \"40em\",\n        data: {\n          title: `Confirm Deletion Please:`,\n          question: `Are you sure you wish to delete ${this.ingredient.name}?`,\n          picUrl: this.ingredient.picUrl,\n          positiveAnswerBtnName: '<i class=\"far fa-trash-alt\"></i> Delete',\n          negativeAnswerBtnName: '<i class=\"fas fa-ban\"></i> Abort'\n        }\n      });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === \"true\") {\n        this.ingService.deleteIngredientById(this.ingredient.id).subscribe(() => {\n          this.toastr.success(`Removed ingredient ${this.ingredient.name}`, \"Success!\");\n          this.router.navigate(['/ingredients', { outlets: { 'ing-outlet': ['details', 0] } }]);\n        }, (err) => {\n          this.toastr.error(`Ingredient ${this.ingredient.name} was not removed`, \"Failure\");\n          console.log(err);\n        });\n      }\n    })\n  }\n}","<div *ngIf=\"ingredient; else nothing\">\n    <section class=\"det-container\">\n        <div class=\"main-pic\">\n            <img [src]=\"ingredient.picUrl\" [alt]=\"ingredient.name+'main picture'\">\n        </div>\n        <div class=\"info\">\n            <table class=\"stats\">\n                <tbody>\n                    <tr>\n                        <th class=\"h3 font-style-bold text-center pb-2\" colspan=\"2\"><i\n                                class=\"fas fa-puzzle-piece\"></i>&nbsp; {{ingredient.name}}</th>\n                    </tr>\n                    <tr>\n                        <td>Used in:</td>\n                        <td><a [routerLink]=\"['/recipes/ing-contain',ingredient.id]\"><i class=\"fas fa-scroll\"></i> {{ingredient.usageCount}} Recipes</a></td>\n                    </tr>\n                    <tr>\n                        <td>Vegan:</td>\n                        <td>\n                            <span *ngIf=\"ingredient.isVegan\"><i class=\"fas fa-check text-success\"></i> Yes</span>\n                            <span *ngIf=\"!ingredient.isVegan\"><i class=\"fas fa-times text-danger\"></i> No</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Origin:</td>\n                        <td>{{ingredient.origin}}</td>\n                    </tr>\n                    <tr>\n                        <td>Measure type:</td>\n                        <td>{{ingredient.measureType.replace('_',' ')}}</td>\n                    </tr>\n                    <tr>\n                        <td>Added By:</td>\n                        <td>\n                            <i class=\"fas fa-user\"></i><a [routerLink]=\"['/user-data/profile/', ingredient.authorUserName]\">{{ingredient.authorUserName}}</a>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Last Edit:</td>\n                        <td>{{modificationDate}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"desc\">\n            <h3>Description:</h3>\n            <p>{{ingredient.description}}</p>\n        </div>\n    </section>\n    <div class=\"actionBtns row justify-content-between\" *ngIf=\"!ingredient.isDeleted else deletedMessage\">\n        <div class=\"col-3 text-center\"><button mat-raised-button class=\"center btn btn-danger\" *ngIf=\"isDeleteAuthorised\" (click)=\"confirmDelete()\">\n            <i class=\"far fa-trash-alt\"></i> &nbsp; Delete</button>\n        </div>\n\n        <div class=\"col-6\"></div>\n        <div class=\"col-3 text-center pl-1\"><a class=\"center btn btn-primary\" *ngIf=\"isEditAuthorised\"  [routerLink]=\"['/ingredients',{outlets: {'ing-outlet':['edit',ingredient.id]}}]\">\n            <i class=\"fas fa-edit\"></i> &nbsp; Edit</a>\n        </div>\n    </div>\n\n<ng-template #deletedMessage>\n    <div class=\"alert alert-dismissible alert-danger deleted\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n       <p> <strong>Deleted</strong>  This ingredient was deleted by <b>admin/creator</b> and it is no longer available.</p>\n       <p><em> You can create it anew, if you wish to use it in recipe!</em></p>\n      </div>\n</ng-template>\n\n\n\n\n</div>\n<ng-template #nothing>\n    <section class=\"text-center pt-3\">\n        <h2 class=\"text-info\">No Ingredient Selected!</h2>\n        <img class=\"no-content\"\n            src=\"https://image.freepik.com/free-photo/healthy-eating-food-with-empty-dish-copyspace-diet-plan-top-view_44943-853.jpg\">\n    </section>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListIngredientsComponent } from './list-ingredients/list-ingredients.component';\nimport { CreateIngredientComponent } from './create-ingredient/create-ingredient.component';\nimport { IngredientCartComponent } from './ingredient-card/ingredient-card.component';\nimport { CoreModule } from '../core/core.module';\nimport { IngredientDetailsComponent } from './ingredient-details/ingredient-details.component';\nimport { CreateEditIngredientFormComponent } from './create-edit-ingredient-form/create-edit-ingredient-form.component';\nimport { EditIngredientComponent } from './edit-ingredient/edit-ingredient.component';\n\n\n@NgModule({\n  declarations: [ListIngredientsComponent, CreateIngredientComponent, IngredientCartComponent, IngredientDetailsComponent, CreateEditIngredientFormComponent, EditIngredientComponent],\n  imports: [\n    CommonModule,CoreModule\n  ],\n  exports: [ListIngredientsComponent,IngredientDetailsComponent,CreateIngredientComponent]\n})\nexport class IngredientsModule { }\n","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\nimport { IIngredeintMatches } from 'src/app/core/interfaces/ingredients/IIngredeintMatches';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'acr-list-ingredients',\n  templateUrl: './list-ingredients.component.html',\n  styleUrls: ['./list-ingredients.component.css']\n})\nexport class ListIngredientsComponent {\n\n  cards = {\n    essentials: { page: 1, cards: [], loading: false },\n    nonEssentials: { page: 1, cards: [], loading: false }\n  }\n  get isLoggedIn() { return this.authService.isAuthenticated(); }\n\n  resultsFd: IIngredeintMatches = { essentials: 0, nonEssentials: 0, pageCappacity: 0 }\n  indexLetters: string[] = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\n  filterForm: FormGroup;\n\n  ingrIdSelected = new BehaviorSubject<number>(0);\n\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, private ingService: IngredientService, private spinner: NgxSpinnerService, private router: Router, private authService: AuthService) {\n    this.buildForm();\n    this.monitorForm();\n\n    this.ingrIdSelected.subscribe(id =>\n      router.navigate(['/ingredients', { outlets: { 'ing-outlet': ['details', id] } }]))\n  }\n\n  // selectedId: number=-1;\n\n  get essentials() { return this.filterForm.get('essentials') as FormControl; }\n  get nonEssentials() { return this.filterForm.get('non-essentials') as FormControl; }\n\n  setLocks() {\n    this.essentials.enable();\n    this.nonEssentials.enable();\n    (this.essentials.value && !this.nonEssentials.value) ? this.essentials.disable() : this.essentials.enable();\n    (this.nonEssentials.value && !this.essentials.value) ? this.nonEssentials.disable() : this.nonEssentials.enable();\n  }\n\n  private buildForm() {\n    this.filterForm = this.fb.group({\n      \"index\": \"-\",\n      \"phrase\": [\"\", { updateOn: \"blur\" }],\n      \"essentials\": true,\n      \"non-essentials\": true,\n    })\n  }\n\n  private get formData() {\n    const { index, phrase } = this.filterForm.value;\n    return { index, phrase };\n  }\n\n  monitorForm() {\n    let trackerSubj = new Subject();\n    trackerSubj.subscribe(() => {\n      this.filterForm.updateValueAndValidity();\n      this.ingService.getCardsMaxCount(this.formData).subscribe(res => {\n        this.resultsFd = res;\n        this.cards.essentials = { page: 1, cards: [], loading: false },\n          this.cards.nonEssentials = { page: 1, cards: [], loading: false }\n\n        this.fetchNonEssentials();\n        this.fetchEssentials();\n      })\n    })\n    trackerSubj.next();\n    this.filterForm.get(\"index\").valueChanges.subscribe(trackerSubj);\n    this.filterForm.get(\"phrase\").valueChanges.subscribe(trackerSubj);\n  }\n\n  fetchEssentials() {\n    if (this.cards.essentials.cards.length === this.resultsFd.essentials || this.cards.essentials.loading) return;\n    this.cards.essentials.loading = true;\n    this.spinner.show();\n    this.ingService.getEssentialIngCards(this.cards.essentials.page++, this.formData.index, this.formData.phrase)\n      .subscribe(r => {\n        this.cards.essentials.cards.splice(this.cards.essentials.cards.length, 0, ...r);\n        this.cards.essentials.loading = false;\n      }).add(() => this.spinner.hide())\n  }\n\n  fetchNonEssentials() {\n    if (this.cards.nonEssentials.cards.length === this.resultsFd.nonEssentials || this.cards.nonEssentials.loading) return;\n    this.cards.nonEssentials.loading = true;\n    this.spinner.show();\n    this.ingService.getNonEssentialIngsCards(this.cards.nonEssentials.page++, this.formData.index, this.formData.phrase)\n      .subscribe(r => {\n        this.cards.nonEssentials.cards.splice(this.cards.nonEssentials.cards.length, 0, ...r);\n        this.cards.nonEssentials.loading = false;\n      }).add(() => this.spinner.hide())\n  }\n\n  onScrollEsts({ target }) {\n    if (!this.scrolSayLoad(target)) { return }\n    console.log(\"sroll Ess\")\n    this.fetchEssentials();\n  }\n\n  onScrollNonEsts({ target }) {\n    if (!this.scrolSayLoad(target)) { return }\n    console.log(\"sroll nonEss\")\n    this.fetchNonEssentials();\n  }\n\n  private scrolSayLoad = (target) => target.scrollHeight - (target.scrollTop + target.clientHeight) < 10\n\n  isOnCreatePage() {\n    const urlChilds = this.route.snapshot.children;\n    return urlChilds.length > 0 && [\"create\", \"edit\"].includes(urlChilds[0].url[0][\"path\"].toLowerCase())\n  }\n\n}","<div class=\"container-fluid allContent pt-4\">\n    <h2 class=\"text-center py-2\"><i class=\"fas fa-puzzle-piece\"></i>&nbsp; All Ingredients</h2>\n\n    <div class=\"row justify-content-between\">\n        <div class=\"col-12 pb-4\">\n            <div class=\"row justify-content-between\">\n                <div class=\"filter-box\">\n                    <form class=\"form-inline my-2 my-lg-0\" [formGroup]=\"filterForm\">\n                        <div class=\"form-group float-left pr-4 mr-4\">\n                            <label for=\"index\" class=\"pr-2 h4\">&nbsp; <i class=\"fas fa-sort-alpha-down\"></i> &nbsp; Index:</label>\n                            <select formControlName=\"index\" id=\"index\" class=\"form-control\">\n                                <option value=\"-\">A-Z</option>\n                                <option *ngFor=\"let letter of indexLetters\" [value]=\"letter\">{{letter}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group float-left pl-4\">\n                            <input id=\"s-field\" class=\"form-control s-field\" type=\"text\" formControlName=\"phrase\" placeholder=\"Search phrase...\">\n                            <label  class=\"pl-2 h4\"><i class=\"fas fa-search\"></i>&nbsp; Search</label>\n                        </div>\n\n                        <div class=\"checks\">\n                            <div class=\"form-check float-left\">\n                                <label class=\"form-check-label  h4\">\n                                    <input type=\"checkbox\" class=\"form-check-input pr-3 big-checkbox\"\n                                    formControlName=\"essentials\" (change)=\"setLocks()\">Primal\n                                </label>\n                            </div>\n                            <div class=\"form-check float-right  mr-4\">\n                                <label class=\"form-check-label h4\">\n                                    <input type=\"checkbox\" class=\"form-check-input pr-3 big-checkbox\"\n                                    formControlName=\"non-essentials\" (change)=\"setLocks()\">Additional\n                                </label>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"ing-types\">\n            <div class=\"ing-container\" *ngIf=\"essentials.value\">\n                <div class=\"ing-types-header\">\n                    <h5 class=\"text-center\" mat-raised-button matTooltipPosition=\"below\"\n                        matTooltip=\"Ingredients you are likely to have (spices, oils and such...)\"\n                        aria-label=\"Section description\">\n                        <span>Primal Ingredients</span>\n                    </h5>\n                    <span class=\"font-italic text-muted\">Found {{resultsFd.essentials}}. Displayed {{cards.essentials.cards.length}}</span>\n                </div>\n                <div class=\"ings-box\" (scroll)=\"onScrollEsts($event)\">\n                    <div *ngIf=\"this.cards.essentials.loading\" style=\"position:relative\">\n                        <ngx-spinner style=\"position: absolute; top: 2em; right: 31%;\" bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"rgba(119, 41, 83, 0.73)\" type=\"ball-scale-multiple\" [fullScreen]=\"false\">\n                            <div>\n                                 <p style=\"font-size: 18px; color:rgba(119, 41, 83, 0.73); padding-left: 10em; padding-top: 2em;\">Loading ingredients...</p>\n                             </div>\n                         </ngx-spinner>\n                     </div>\n                    <acr-ingredient-card *ngFor=\"let ingC of cards.essentials.cards\" [ingredient]=\"ingC\" [ingrIdSelected]=\"ingrIdSelected\">\n                    </acr-ingredient-card>       \n                </div>\n            </div>\n\n            <div class=\"ing-container\" *ngIf=\"nonEssentials.value\">\n                <div class=\"ing-types-header\">\n                    <h5 mat-raised-button matTooltipPosition=\"below\" matTooltip=\"Ingredients you might have...\"\n                        aria-label=\"Section description\">\n                        <span>Additional Ingredients</span>\n                    </h5>\n                    <span class=\"font-italic text-muted\">Found {{resultsFd.nonEssentials}}. Displayed {{cards.nonEssentials.cards.length}}</span>\n                </div>\n                <div class=\"ings-box\" (scroll)=\"onScrollNonEsts($event)\">\n                    <div *ngIf=\"this.cards.nonEssentials.loading\" style=\"position:relative\">\n                        <ngx-spinner style=\"position: absolute; top: 2em; right: 31%;\" bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"rgba(119, 41, 83, 0.73)\" type=\"ball-scale-multiple\" [fullScreen]=\"false\">\n                           <div>\n                                <p style=\"font-size: 18px; color:rgba(119, 41, 83, 0.73); padding-left: 10em; padding-top: 2em;\">Loading ingredients...</p>\n                            </div>\n                        </ngx-spinner>\n                    </div>\n                   <acr-ingredient-card *ngFor=\"let ingC of cards.nonEssentials.cards\" [ingredient]=\"ingC\" [ingrIdSelected]=\"ingrIdSelected\">\n                   </acr-ingredient-card> \n                </div>\n            </div>\n\n        </div>\n        <div class=\"right-section\">\n        <div class=\"det-inf\">\n            <div> \n                <router-outlet name=\"ing-outlet\"></router-outlet>    \n            </div>\n        </div>\n                <div class=\"actionBtns\"> \n                        <a class=\"center btn btn-info\" [ngClass]=\"{'disabled':!isLoggedIn}\" [routerLink]=\"['/ingredients',{outlets: {'ing-outlet':['create']}}]\" *ngIf=\"!isOnCreatePage()\"> \n                        <i class=\"fas fa-plus-circle\"></i> &nbsp; Add</a>\n                        <a class=\"center btn btn-danger\" [ngClass]=\"{'disabled':!isLoggedIn}\" [routerLink]=\"['/ingredients',{outlets: {'ing-outlet':['details',0]}}]\" *ngIf=\"isOnCreatePage()\"> \n                        <i class=\"fas fa-ban\"></i> &nbsp; Abort!</a>\n        </div>\n\n    </div>\n</div>","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { MessageService } from 'src/app/core/services/message.service';\nimport { Observable } from 'rxjs';\nimport { IMessageRecievedSent } from 'src/app/core/interfaces/message-interfaces/messageRecieve';\nimport { map } from 'rxjs/operators';\nimport { UserDataService } from 'src/app/core/services/user-data.service';\nimport { ISmallUserInfo } from 'src/app/core/interfaces/user-data-interfaces/userSmallData';\n\n@Component({\n  selector: 'acr-list-all',\n  templateUrl: './list-all.component.html',\n  styleUrls: ['./list-all.component.css']\n})\nexport class ListAllComponent implements AfterViewInit {\n\n  private all$: Observable<IMessageRecievedSent[]> = null;\n  public nonDeleted$: Observable<IMessageRecievedSent[]> = null;\n  public deleted$: Observable<IMessageRecievedSent[]> = null;\n  public blockedUsers$: Observable<ISmallUserInfo[]> = null;\n  public blockerUsers$: Observable<ISmallUserInfo[]> = null;\n\n  public sent$: Observable<IMessageRecievedSent[]> = null;\n  @ViewChild(\"defaultTab\", { static: true })\n  defaultTab: ElementRef;\n  public myUserName: string = null;\n\n  constructor(authService: AuthService, private messageService: MessageService, private userDataService: UserDataService) {\n    this.resetDeletedNonDeletedStreams();\n    this.myUserName = authService.getUserInfo().userName;\n    this.messageService.signalR.startConnection(this.myUserName);\n  }\n  ngAfterViewInit() {\n    this.sent$ = this.messageService.getSentMessages()\n    this.blockedUsers$ = this.userDataService.getBlockedUserInfos();\n    this.blockerUsers$ = this.userDataService.getBlockerUserInfos();\n  }\n\n  private resetDeletedNonDeletedStreams() {\n    this.all$ = this.messageService.getRecievedMessages()\n    this.nonDeleted$ = this.all$.pipe(map(res => res.slice().filter(x => !x.isDeleted)));\n    this.deleted$ = this.all$.pipe(map(res => res.slice().filter(x => x.isDeleted)));\n  }\n\n  openUnreadMessage(id: number) {\n    this.messageService.markReadMessage(id).subscribe(() => {\n      this.messageService.signalR.updateUserUnreadCount(this.myUserName)\n    })\n  }\n\n  setDeletedStatus({ id, isSeen }) {\n    console.log(\"triem\", id)\n    this.messageService.deleteMessage(id).subscribe(() => {\n      this.resetDeletedNonDeletedStreams();\n      if (!isSeen) {\n        this.messageService.signalR.updateUserUnreadCount(this.myUserName)\n      }\n    })\n  }\n\n\n}","<div class=\"container-fluid\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-2 toastr\"></div>\n        <div class=\"col-8\">\n            <h2 class=\"text-center py-3\">Message Box:</h2>\n            <ul class=\"nav nav-tabs h4\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#recieved\"><i class=\"fas fa-envelope-open-text\"></i>&nbsp; Recieved</a>               \n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link \" data-toggle=\"tab\" href=\"#sent\"><i class=\"fas fa-paper-plane\" ></i> &nbsp; Sent</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" data-toggle=\"tab\" href=\"#deleted\"><i class=\"far fa-trash-alt\"></i> &nbsp; Deleted</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" data-toggle=\"tab\" href=\"#users-i-block\"><i class=\"fas fa-biohazard\"></i> &nbsp; Users I Block</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" data-toggle=\"tab\" href=\"#users-blocking-me\"><i class=\"fas fa-comment-slash\"></i> &nbsp; Users Blocking Me</a>\n                </li>\n            </ul>\n            <div id=\"myTabContent\" class=\"tab-content pt-4\">\n                <div class=\"tab-pane fade show active\" id=\"recieved\" #defaultTab>\n                    <acr-message-recieved *ngFor=\"let mes of (nonDeleted$ | async)\" [message]=\"mes\"\n                        (openUnreadMessageEmitter)=\"openUnreadMessage($event)\"\n                        (deleteMessageEmitter)=\"setDeletedStatus($event)\">\n                    </acr-message-recieved>\n                </div>\n\n                <div class=\"tab-pane fade\" id=\"sent\">\n                    <acr-message-sent *ngFor=\"let mes of (sent$ | async)\" [message]=\"mes\">\n                    </acr-message-sent>\n                </div>\n\n                <div class=\"tab-pane fade\" id=\"deleted\">\n                    <acr-message-deleted *ngFor=\"let mes of (deleted$ | async)\" [message]=\"mes\">\n                    </acr-message-deleted>\n                </div>\n\n                <div class=\"tab-pane fade\" id=\"users-i-block\">\n                    <p>All users who can't tell me shit... </p>\n                    <div class=\"row justify-content-start\">\n                        <acr-user-sm class=\"col-2\" *ngFor=\"let u of (blockedUsers$ | async)\" [user]=\"u\"></acr-user-sm>\n                    </div>\n                </div>\n\n                <div class=\"tab-pane fade\" id=\"users-blocking-me\">\n                    <p>All users who I can not write... </p>\n                    <div class=\"row justify-content-start\">\n                        <acr-user-sm class=\"col-2\" *ngFor=\"let u of (blockerUsers$ | async)\" [user]=\"u\"></acr-user-sm>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-2\">\n\n        </div>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { IMessageRecievedSent } from 'src/app/core/interfaces/message-interfaces/messageRecieve';\nimport { HelperService, CustomDateFormats } from 'src/app/core/services/helper.service';\n\n@Component({\n  selector: 'acr-message-deleted',\n  templateUrl: './message-deleted.component.html',\n  styleUrls: ['./message-deleted.component.css']\n})\nexport class MessageDeletedComponent {\n\n  @Input()\n  message: IMessageRecievedSent;\n\n  expanded: boolean = false;\n\n  constructor() { }\n\n  showHideContent() {\n    this.expanded = !this.expanded;\n  }\n\n  get dateSent(): string {\n    return HelperService.dateConvert(this.message.dateOfCreation,CustomDateFormats.DefaultFormater);\n  }\n}","<div class=\"card border-primary mb-3 mx-4\" style=\"max-width: 100%;\">\n    <div class=\"card-header\">\n        <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <span class=\"h4\">To : </span>\n                    <a class=\"h4\"\n                        [routerLink]=\"['/user-data/profile/', message.recieverUserName]\">{{message.recieverUserName}}</a>\n                </div>\n            <div class=\"col-3\">\n                <span class=\"font-italic\">&nbsp;Recieved on: {{dateSent}}</span>\n            </div>\n            <div class=\"col-3 float-right\">\n                <div (click)=\"showHideContent()\" class=\"link\">\n                    <div *ngIf=\"expanded\" class=\"float-right pt-1 px-4\">\n                        <i class=\"far fa-minus-square\"></i> &nbsp; Hide\n                    </div>\n                    <div *ngIf=\"!expanded\" class=\"float-right pt-1 px-4\">\n                        <i class=\"far fa-plus-square\"></i> &nbsp; Display\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body p-2 h5 mb-0 mt-1\" [ngStyle]=\"{'display':expanded ? 'inline' : 'none'}\">\n        <p class=\"mb-2 px-2\"><a [routerLink]=\"['/user-data/profile/', message.senderUserName]\"><img class=\"avatar\"\n                    [src]=\"message.recieverAvatarPicture\" alt=\"avatar picture of sender\"></a>\n            {{message.content}}\n        </p>\n    </div>\n</div>","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IMessageRecievedSent } from 'src/app/core/interfaces/message-interfaces/messageRecieve';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { HelperService, CustomDateFormats } from 'src/app/core/services/helper.service';\n\n@Component({\n  selector: 'acr-message-recieved',\n  templateUrl: './message-recieved.component.html',\n  styleUrls: ['./message-recieved.component.css']\n})\nexport class MessageRecievedComponent {\n\n  private _mesg: IMessageRecievedSent = {\n    id: 123,\n    dateOfCreation: \"\",\n    isDeleted: false,\n    senderUserName: \"Sandio\",\n    recieverUserName: \"Sandio\",\n    recieverAvatarPicture: \"https://i.pinimg.com/originals/7c/b0/18/7cb018683132322074c039046f55d01a.jpg\",\n    senderAvatarPicture: \"https://i.pinimg.com/originals/7c/b0/18/7cb018683132322074c039046f55d01a.jpg\",\n    content: \"kade e mlqkoto\",\n    status: \"UnRead\",\n  }\n  @Output()\n  openUnreadMessageEmitter: EventEmitter<number> = new EventEmitter();\n\n  @Output()\n  deleteMessageEmitter: EventEmitter<{ id: number, isSeen: boolean }> = new EventEmitter();\n\n  public expanded: boolean = true;\n  public showBlockInfo: boolean = false;\n\n  constructor(private authService: AuthService) { }\n\n  get message() {\n    return this._mesg;\n  }\n\n  @Input()\n  set message(m: IMessageRecievedSent) {\n    this._mesg = m;\n    this.expanded = m.status === \"Read\";\n  }\n\n  get isSenderBlocked() {\n    return this.authService.getUserInfo().blocked.includes(this.message.senderUserName);\n  }\n\n  showHideContent() {\n    this.expanded = !this.expanded;\n    if (this.message.status === \"Read\") { return; }\n    this.message.status = \"Read\";\n    this.openUnreadMessageEmitter.emit(this.message.id);\n  }\n\n  showHideBlockInfo() {\n    this.showBlockInfo = !this.showBlockInfo;\n  }\n\n  del() {\n    this.deleteMessageEmitter.emit({ id: this.message.id, isSeen: this.message.status === \"Read\" });\n  }\n\n  get dateSent(): string {\n    return HelperService.dateConvert(this.message.dateOfCreation,CustomDateFormats.DefaultFormater);\n  }\n}\n","<div class=\"card border-primary mb-3 mx-4\" style=\"max-width: 100%;\">\n    <div class=\"card-header\">\n        <div class=\"row justify-content-start\">\n            <div class=\"col-4\">\n                <span class=\"h4\">From : </span><a class=\"h4\"\n                    [routerLink]=\"['/user-data/profile/', message.senderUserName]\">\n                    <span *ngIf=\"isSenderBlocked\" (mouseenter)=\"showHideBlockInfo()\"\n                        (mouseleave)=\"showHideBlockInfo()\"> <i class=\"fas fa-ban text-danger fa-xs\"></i></span>\n                    {{message.senderUserName}}</a>&nbsp;&nbsp;\n                <span *ngIf=\"isSenderBlocked && showBlockInfo\" class=\"text-danger font-weight-bold h5\">\n                    I have blocked this user!</span>\n            </div>\n\n\n            <div class=\"col-2\">\n                <div *ngIf=\"message.status==='Read'; else unread\" class=\"text-success\">\n                    <i class=\"fas fa-eye\"></i> &nbsp; Read\n                </div>\n                <ng-template #unread>\n                    <div class=\" text-danger\"><i class=\"fas fa-eye-slash\"></i> &nbsp; Unread</div>\n                </ng-template>\n            </div>\n            <div class=\"col-3\">\n                <span class=\"font-italic\">&nbsp;Recieved on: {{dateSent}}</span>\n            </div>\n            <div class=\"col-3 float-right\">\n                <div (click)=\"showHideContent()\" class=\"link\">\n                    <div *ngIf=\"expanded\" class=\"float-right pt-1 px-4\">\n                        <i class=\"far fa-minus-square\"></i> &nbsp; Hide\n                    </div>\n                    <div *ngIf=\"!expanded\" class=\"float-right pt-1 px-4\">\n                        <i class=\"far fa-plus-square\"></i> &nbsp; Display\n                    </div>\n                </div>\n                <a class=\"float-right pt-1\" (click)=\"del()\"><i class=\"far fa-trash-alt\"></i> &nbsp; Delete</a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body p-2 h5 mb-0 mt-1\" [ngStyle]=\"{'display':expanded ? 'inline' : 'none'}\">\n        <p class=\"mb-2 px-2\"><a [routerLink]=\"['/user-data/profile/', message.senderUserName]\"><img class=\"avatar\"\n                    [src]=\"message.senderAvatarPicture\" alt=\"avatar picture of sender\"></a>\n            {{message.content}}\n        </p>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { IMessageRecievedSent } from 'src/app/core/interfaces/message-interfaces/messageRecieve';\nimport { HelperService, CustomDateFormats } from 'src/app/core/services/helper.service';\n\n@Component({\n  selector: 'acr-message-sent',\n  templateUrl: './message-sent.component.html',\n  styleUrls: ['./message-sent.component.css']\n})\nexport class MessageSentComponent {\n  @Input()\n  message: IMessageRecievedSent;\n  public expanded: boolean = false;\n\n  constructor() { }\n\n  showHideContent() {\n    this.expanded = !this.expanded;\n  }\n\n  get dateSent(): string {\n    return HelperService.dateConvert(this.message.dateOfCreation,CustomDateFormats.DefaultFormater);\n  }\n}\n","<div class=\"card border-primary mb-3 mx-4\" style=\"max-width: 100%;\">\n    <div class=\"card-header\">\n        <div class=\"row justify-content-start\">\n                <div class=\"col-4\">\n                    <span class=\"h4\">To : </span>\n                    <a class=\"h4\"\n                        [routerLink]=\"['/user-data/profile/', message.recieverUserName]\">{{message.recieverUserName}}</a>\n                </div>\n\n            <div class=\"col-2\">\n                <div *ngIf=\"message.status==='Read'; else unread\" class=\"text-success\">\n                    <i class=\"fas fa-eye\"></i> &nbsp; Read\n                </div>\n                <ng-template #unread>\n                    <div class=\" text-danger\"><i class=\"fas fa-eye-slash\"></i> &nbsp; Unread</div>\n                </ng-template>\n            </div>\n            <div class=\"col-3\">\n                <span class=\"font-italic\">&nbsp;Sent on: {{dateSent}}</span>\n            </div>\n            <div class=\"col-3 float-right\">\n                <div (click)=\"showHideContent()\" class=\"link\">\n                    <div *ngIf=\"expanded\" class=\"float-right pt-1 px-4\">\n                        <i class=\"far fa-minus-square\"></i> &nbsp; Hide\n                    </div>\n                    <div *ngIf=\"!expanded\" class=\"float-right pt-1 px-4\">\n                        <i class=\"far fa-plus-square\"></i> &nbsp; Display\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body p-2 h5 mb-0 mt-1\" [ngStyle]=\"{'display':expanded ? 'inline' : 'none'}\">\n        <p class=\"mb-2 px-2\"><a [routerLink]=\"['/user-data/profile/', message.senderUserName]\"><img class=\"avatar\"\n                    [src]=\"message.recieverAvatarPicture\" alt=\"avatar picture of sender\"></a>\n            {{message.content}}\n        </p>\n    </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListAllComponent } from './list-all/list-all.component';\nimport { RouterModule } from '@angular/router';\nimport { MessageRecievedComponent } from './message-display-recieved/message-recieved.component';\nimport { MessageSentComponent } from './message-display-sent/message-sent.component';\nimport { MessageDeletedComponent } from './message-display-deleted/message-deleted.component';\nimport { AuthModule } from '../auth/auth.module';\n\n@NgModule({\n  declarations: [ListAllComponent, MessageRecievedComponent, MessageSentComponent,MessageDeletedComponent],\n  imports: [\n    CommonModule, RouterModule, AuthModule\n  ],\n\n})\nexport class MessagesModule { }\n","import { Observable, Subscription } from 'rxjs';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { takenNameValidatorAsync } from \"src/app/core/validators/takenNameValidatorAsync\";\nimport { Component, OnDestroy, DoCheck, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { HelperService } from 'src/app/core/services/helper.service';\nimport { RecipeService } from 'src/app/core/services/recipe.service';\nimport { CategoryService } from 'src/app/core/services/category.service';\nimport { IRecipeEdit } from 'src/app/core/interfaces/recipes/IRecipeEdit';\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\nimport { RecipeDifficulty } from 'src/app/core/enumerations/RecipeDifficulty';\nimport { IRecipeCreate } from 'src/app/core/interfaces/recipes/IRecipeCreate';\nimport { ICategoryOption } from 'src/app/core/interfaces/categories/ICategoryOption';\nimport { IIngredientOption } from 'src/app/core/interfaces/ingredients/IIngredientOption';\n\n@Component({\n  selector: 'acr-create-edit-form',\n  templateUrl: './create-edit-form.component.html',\n  styleUrls: ['./create-edit-form.component.css'],\n  animations: [\n    trigger('slowShowHideX', [\n      transition('void=>*', [style({ opacity: '0', transform: 'translateX(-20rem) scale(0.1)' }), animate(2000)]),\n      transition('*=>void', [animate(2000), style({ opacity: '0', transform: 'translateX(20rem) scale(0.1)' })]),\n    ]),\n    trigger('slowShowHideY', [\n      transition('void=>*', [style({ opacity: '0.2', transform: 'translateY(-3rem)' }), animate(1000)]),\n      transition('*=>void', [animate(1000), style({ opacity: '0.2', transform: 'scale(0.1)' })]),\n    ])\n  ]\n})\nexport class CreateEditFormComponent implements OnDestroy, DoCheck {\n  subscriptions: Subscription[] = [];\n  categorie$: Observable<ICategoryOption[]> = null; //[{ name: \"no category\", id: -1 }, { name: \"cat1111111111111111\", id: 1 }, { name: \"cat2\", id: 2 }, { name: \"cat3\", id: 3 }]\n  public ingredients: IIngredientOption[] = null// [{ id: 1, name: \"salati\" }, { id: 2, name: \"torshii\" }];\n  form: FormGroup\n\n  get btnDisabled() {   \n    return this.form.pristine || this.form.invalid || HelperService.compareObjects(this._recipe,this.form.value);\n  }\n\n  private _recipe: IRecipeEdit = null;\n  @Input()\n  settings: { headline: string, submitBtnTitle: string };\n\n  @Input()\n  set recipe(value: IRecipeEdit) {\n    this._recipe = value;\n    this.namesAllowed.push(value.name);\n    this.loadData(value)\n  }\n  private namesAllowed: string[] = [];\n\n  @Output()\n  SubmitEvent: EventEmitter<IRecipeCreate> = new EventEmitter<IRecipeCreate>();\n\n  diffGrades = HelperService.getEnumOptions(RecipeDifficulty);\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private recipeService: RecipeService,\n    catService: CategoryService,\n    ingredientService: IngredientService,\n  ) {\n    this.categorie$ = catService.getAllMini();\n    this.subscriptions.push(ingredientService.getAllMini().subscribe(x => { this.ingredients = x; }))\n    this.buildForm();\n  }\n\n  private loadData(data: IRecipeEdit) {\n    data.ingredients.forEach(x => this.addIngredient(x));\n    data.pictures.forEach(x => this.addPicture(x));\n    data.tags.forEach(x => this.addTag(x));\n    this.form.patchValue(data);\n  }\n\n  get videoLink() {\n    if (this.getCtrl('videoLink').invalid || this.form.value['videoLink'].length === 0) { return null }\n    const id = this.form.value['videoLink'].substr(this.form.value['videoLink'].indexOf(\"v=\") + 2 || this.form.value['videoLink'].lastIndexOf(\"\\\\\") + 1);\n    return HelperService.videoLinkMake(id);\n  }\n\n  get myPersonality() {\n    const { userName, cookRank } = this.authService.getUserInfo();\n    return { userName, cookRank };\n  }\n\n  getCtrl(name: string) {\n    return this.form.get(name);\n  }\n\n  getErr(name: string, errName: string) {\n    return this.getCtrl(name).errors[errName];\n  }\n  //Used to clasify input field as valid or not\n  getValClasses(name: string): { 'is-invalid': boolean, 'is-valid': boolean } {\n    const ctrl = this.getCtrl(name);\n    return { 'is-invalid': (ctrl.invalid && ctrl.touched), 'is-valid': ctrl.valid }\n  }\n  //Used to clasify input field as valid or not\n  getCtrlValClasses(ctr: FormControl): { 'is-invalid': boolean, 'is-valid': boolean } {\n    return { 'is-invalid': (ctr.invalid && ctr.touched), 'is-valid': ctr.valid }\n  }\n\n  invalidTouchedCtrl(name: string) {\n    return this.getCtrl(name).invalid && this.getCtrl(name).touched;\n  }\n\n  public formArrs: { pictures: FormArray, tags: FormArray, ingredients: FormArray } = { pictures: undefined, tags: undefined, ingredients: undefined };\n  setFormArrs() {\n    this.formArrs.pictures = this.form.get('pictures') as FormArray;\n    this.formArrs.tags = this.form.get('tags') as FormArray;\n    this.formArrs.ingredients = this.form.get('ingredients') as FormArray;\n  }\n  addPicture(picUrl = \"\") {\n    this.formArrs.pictures.push(this.fb.control(picUrl, [Validators.required, Validators.pattern(\"(http(s?):)([/|.|\\\\w|\\\\s|-])*\\.(?:jpg|gif|png)\")]))\n  }\n  removePicture(index: number = 0) {\n    this.formArrs.pictures.removeAt(index);\n  }\n  addTag(tagName = \"\") {\n    this.formArrs.tags.push(this.fb.control(tagName, [Validators.required, Validators.pattern(\"[a-zA-Z]{3,10}\")]))\n  }\n  removeTag(index: number = 0) {\n    this.formArrs.tags.removeAt(index);\n  }\n\n  addIngredient(ing = { id: 0, ammount: \"\" }) {\n    this.formArrs.ingredients.push(this.createIngredient(ing));\n  }\n  removeIngredient(index: number = 0) {\n    this.formArrs.ingredients.removeAt(index);\n  }\n  private createIngredient({ id, ammount }): FormGroup {\n    return this.fb.group({\n      ammount: [ammount, [Validators.required, Validators.minLength(4), Validators.maxLength(16), Validators.pattern(\"[\\\\d\\\\.\\\\,\\\\/\\\\-]+\\\\s?\\\\w+\")], []],\n      id: [id, [Validators.min(1)], []],\n    })\n  }\n\n  availableIngredients({ id }) {\n    if (!this.formArrs.ingredients || this.ingredients === null) return [];\n    const usedIds = this.formArrs.ingredients.value?.map(x => +x.id);\n    return this.ingredients.filter(x => !usedIds.includes(x.id) || x.id === +id);\n  }\n\n  get validPicturesOnly() {\n    if (!this.formArrs.pictures || this.formArrs.pictures.length === 0) return null;\n    return this.formArrs.pictures.controls.filter(x => x.valid).map(x => x.value);\n  }\n\n  buildForm() {\n    this.form = this.fb.group({\n      id: \"\",\n      authorId: this.authService.getUserInfo().id,\n      name: [\"\", { validators: [Validators.required, Validators.minLength(4), takenNameValidatorAsync(this.recipeService.nameTaken.bind(this.recipeService), this.namesAllowed), Validators.pattern(\"[a-zA-Z ]+\")], updateOn: \"blur\" }],\n      categoryId: [\"-1\", [Validators.min(1), Validators.required], []],\n      description: [\"\", [Validators.required, Validators.minLength(100), Validators.maxLength(25600)], []],\n      mainPicture: [\"\", [Validators.required, Validators.pattern(\"(http(s?):)([/|.|\\\\w|\\\\s|-])*\\.(?:jpg|gif|png)\")], []],\n      videoLink: [\"\", [], []],\n      difficulty: [1, [Validators.required], []],\n      pictures: this.fb.array([]),\n      tags: this.fb.array([]),\n      ingredients: this.fb.array([])\n    },  // { updateOn: \"blur\" }\n    )\n    this.setFormArrs();\n  }\n\n  ngDoCheck() {\n    //Validates that we have atleast one ingredient chosen!\n    if (this.form.valid && (!this.form.value.ingredients || this.form.value.ingredients.length === 0)) {\n      this.form.setErrors({ \"noIngredient\": true })\n    } else if (this.form.hasError(\"noIngredient\")) {\n      this.form.setErrors({ \"noIngredient\": false })\n    }\n  }\n\n  submitRecipe() {\n    if (this.form.invalid || this.form.pristine) return;\n    this.SubmitEvent.emit(this.form.value);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.filter(x => !x.closed).forEach(x => x.unsubscribe());\n  }\n}","<section class=\"main px-2\">\n    <div class=\"row justify-content-start\">\n        <div class=\"col-9\">\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <h3 class=\"text-left py-3\"> <i class=\"fas fa-scroll\"></i> &nbsp; {{settings.headline}}</h3>\n                </div>\n                <div class=\"col-4\"></div>\n                <div class=\"col-4\">\n                    <h3 class=\"text-right py-3\"> {{myPersonality.cookRank}}: {{myPersonality.userName}}</h3>\n                </div>\n            </div>\n            <!-- {{form.value|json}} \n            [nshClassIfClass]=\"[['is-valid','ng-valid'],['is-invalid','ng-invalid ng-touched']]\"   [ngClass]=\"getValClasses('name')\"-->\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitRecipe()\">\n                <fieldset>\n                    <legend class=\"text-center pb-3\">Please Provide Recipe Info</legend>\n                    <div class=\"row justify-content-between pl-3\">\n                        <div class=\"col-3\">\n                            <div class=\"form-group \">\n                                <div class=\"form-group has-danger has-success\">\n                                    <label class=\"form-control-label h5\" for=\"name\"> Recipe Name*:</label>\n                                    <input formControlName=\"name\" class=\"form-control\" id=\"name\"  placeholder=\"Name...\" [ngClass]=\"getValClasses('name')\"\n                                    [nshClassIfClass]=\"[['is-valid','ng-valid'],['is-invalid','ng-invalid ng-touched']]\">\n                                    <div class=\"invalid-feedback\" *ngIf=\"invalidTouchedCtrl('name')\"\n                                        [innerText]=\"getErr('name','required')?'Please provide Recipe Name!':\n                                                                               getErr('name','minlength')?'Please provide name with length atleast '+getErr('name','minlength')['requiredLength']+' symbols long!':\n                                                                               getErr('name','valueTaken')?'The name ' + getErr('name','valueTaken') + ' is already in use!':\n                                                                               getErr('name','pattern')?'Please provide name consisting of only latin letters!':'unknown-Error'\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-2\">\n                            <div class=\"form-group has-success has-danger\">\n                                <label class=\"form-control-label pr-3 h5\" for=\"category\"> Category*:</label>\n                                <select class=\"custom-select\" formControlName=\"categoryId\" id=\"category\" [ngClass]=\"getValClasses('categoryId')\">\n                                    <option  [value]=\"-1\">Choose...</option>                                            \n                                    <option *ngFor=\"let opt of (categorie$ | async); index as i\" [value]=\"opt.id\">{{opt.name}}</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div class=\"col-3\">\n                            <div class=\"form-group \">\n                                <label class=\"pr-4 h5\" for=\"difficulty\"> Difficulty*:</label>\n                                <div class=\"row justify-content-between px-3 pt-2\">\n                                    <div class=\"custom-control custom-radio col-3\"\n                                        *ngFor=\"let dif of diffGrades; let i=index;\">\n                                        <input class=\"custom-control-input\" type=\"radio\" formControlName=\"difficulty\" [value]=\"dif[1]\" [id]=\"dif[0]|lowercase\">\n                                        <label class=\"custom-control-label\" [for]=\"dif[0]|lowercase\">{{dif[0]}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-3\">\n                            <label class=\"form-control-label h5\" for=\"main-pic\"> Main Picture*:</label>\n                            <div class=\"form-group mb-0\">\n                                <div class=\"row justify-content-start\">\n                                    <div class=\"col-10 px-0\">\n                                        <div class=\"form-group has-danger has-success\">\n                                            <input class=\"form-control\" type=\"url\" id=\"main-pic\" formControlName=\"mainPicture\" placeholder=\"Picture url...\"\n                                                [ngClass]=\"getValClasses('mainPicture')\">\n                                            <div class=\"invalid-feedback\" *ngIf=\"invalidTouchedCtrl('mainPicture')\"\n                                                [innerText]=\"getErr('mainPicture','required')?'Please provide Picture URL':\n                                                             getErr('mainPicture','pattern')?'Picture URL invalid!':'unknown-Error'\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-2\">\n                                        <p class=\"img-func text-success\" (click)=\"addPicture()\"><i class=\"fas fa-plus-circle\"></i></p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row justify-content-between pl-3\">\n                        <div class=\"col-9\">\n                            <div class=\"row justify-content-between\">\n                                <div class=\"col-5\"> \n                                    <label class=\"form-control-label\"><span class=\"img-func text-success\" (click)=\"addIngredient()\"><i class=\"fas fa-plus-circle\"></i></span>&nbsp; <span class=\"h5 pb-2\">Ingredients:</span></label>\n                                    <div formArrayName=\"ingredients\" *ngFor=\"let ing of formArrs.ingredients?.controls; index as i;\" @slowShowHideY>\n                                        <div [formGroupName]=\"i\" class=\"row justify-content-between\">\n                                            <div class=\"col-6 pr-0\">\n                                                <div class=\"form-group has-danger\">\n                                                    <label class=\"form-control-label h6\" [for]=\"'id'+i\">Type*:</label>\n                                                    <select class=\"custom-select\" formControlName=\"id\" [id]=\"'id'+i\"\n                                                        [ngClass]=\"{'is-invalid': ing.get('id').invalid && (ing.get('id').touched || ing.get('ammount').valid)}\">\n                                                        <option value=\"0\" disabled>Choose!...</option>\n                                                        <option *ngFor=\"let opt of availableIngredients(ing.value)\" [value]=\"opt.id\">{{opt.name}}</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-4 pr-0\">\n                                                <div class=\"form-group has-danger has-success\">\n                                                    <label class=\"form-control-label h6\" for=\"ammount\">Ammount*:</label>\n                                                    <input formControlName=\"ammount\" class=\"form-control\" id=\"ammount\" placeholder=\"Ammount...\"\n                                                        [ngClass]=\"getCtrlValClasses(ing.get('ammount'))\">\n                                                    <div class=\"invalid-feedback\"\n                                                        *ngIf=\"ing.get('ammount').invalid &&ing.get('ammount').touched\"\n                                                        [innerText]=\"ing.get('ammount').errors['required']?'Please Provide Valid Ammount!':\n                                                        ing.get('ammount').errors['minlength']?'Please provide ammount with length minimum '+ing.get('ammount').errors['minlength']['requiredLength']+' symbols long!':\n                                                        ing.get('ammount').errors['maxlength']?'Please provide ammount with length maximum '+ing.get('ammount').errors['maxlength']['requiredLength']+' symbols long!':\n                                                        ing.get('ammount').errors['pattern']?'Ammount not valid must contain digits (1 space) and letters!':'unknown error!'\">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-2 pt-4\">\n                                                <p class=\"img-func text-danger\" (click)=\"removeIngredient(i)\"><i class=\"fas fa-minus-circle\"></i></p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"alert alert-danger\" *ngIf=\"form?.errors && form.errors['noIngredient']\">\n                                        <span>Please provide atleast one ingredient!</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-7\">\n                                    <div class=\"form-group\">\n                                        <label for=\"desc\" class=\"h5\">Description*:</label>\n                                        <textarea class=\"form-control\" formControlName=\"description\" id=\"desc\" rows=\"12\"\n                                            placeholder=\"Describe how to cook this meal please...\"></textarea>\n                                    </div>\n                                    <div *ngIf=\"getCtrl('description').touched &&getCtrl('description').invalid\">\n                                        <div class=\"alert alert-danger\">\n                                            <span *ngIf=\"getCtrl('description').errors['required']\"> Please provide description!</span>\n                                            <span *ngIf=\"getCtrl('description').errors['minlength']\"> Please provide description with length atleast {{getCtrl('description').errors['minlength']['requiredLength']}} symbols long!</span>\n                                            <span *ngIf=\"getCtrl('description').errors['maxlength']\"> Please provide description with length lesser than {{getCtrl('description').errors['maxlength']['requiredLength']}} symbols long!</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-3 pl-0\">\n                            <div class=\"pl-3\" formArrayName=\"pictures\"\n                                *ngFor=\"let pic of formArrs.pictures?.controls; index as i;\"  @slowShowHideY>\n                                <label class=\"form-control-label pr-3 h6\" [for]=\"'pic'+i\"> Picture {{i+1}}*:</label>\n                                <div class=\"row justify-content-between\">\n                                    <div class=\"col-10 px-0 \">\n                                        <div class=\"form-group has-danger has-success mb-0\">\n                                            <input class=\"form-control my-0 py-0\" [formControl]=\"pic\" [id]=\"'pic'+i\"\n                                                [ngClass]=\"getCtrlValClasses(pic)\"\n                                                [placeholder]=\"'Picture '+(1+i)+' url...'\">&nbsp;\n                                            <div *ngIf=\"pic.invalid && pic.touched\" class=\"invalid-feedback\"\n                                                [innerText]=\"pic.errors['required']?'Please provide Picture URL':\n                                                pic.errors['pattern']?'Picture URL invalid!':'unknown-Error'\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-2\">\n                                        <p class=\"img-func text-danger\" (click)=\"removePicture(i)\"> <i\n                                                class=\"fas fa-minus-circle\"></i></p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"form-group  px-0\">\n                                    <label class=\"form-control-label pr-3\" for=\"videoUrl\"><i class=\"fab fa-youtube h5\"></i>&nbsp; YouTube Video URL:</label>\n                                    <input formControlName=\"videoLink\" class=\"form-control\" id=\"videoUrl\" placeholder=\"Youtube video...optional\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row justify-content-between pl-4\">\n                        <div class=\"col-10 \">\n                            <div class=\"form-group row has-danger has-success\" formArrayName=\"tags\">\n                                  <label class=\"control-label form-inline py-0\" ><span class=\"img-func text-success\" (click)=\"addTag()\"><i class=\"fas fa-plus-circle\"></i></span>&nbsp; Tags:</label>\n                                    <div *ngFor=\"let tagCtrl of getCtrl('tags')['controls']; index as i\" class=\"col-2 input-group py-2\">\n                                        <input class=\"form-control px-0 pl-1 lime-border\" [formControl]=\"tagCtrl\" type=\"text\" placeholder=\"tag...\" [ngClass]=\"getCtrlValClasses(tagCtrl)\">             \n                                        <div class=\"input-group-append\">\n                                            <span class=\"input-group-text lime lighten-2  px-2\"  (click)=\"removeTag(i)\" id=\"remTagBtn\" ><i class=\"fas fa-minus-circle text-danger\" aria-hidden=\"true\"></i></span>\n                                        </div>\n                                    </div>\n                            </div>\n                        </div>\n                        <div class=\"col-2\">\n                            <button type=\"submit\" class=\"btn btn-primary py-3 btn-sm\" [disabled]=\"btnDisabled\" [innerHTML]=\"settings.submitBtnTitle | htmlRaw\"></button>\n                            <!-- <button type=\"submit\" class=\"btn btn-primary py-3 btn-sm\" >Log</button> -->\n                        </div>\n                    </div>\n                </fieldset>\n            </form>\n        </div>\n\n        <div class=\"col-3 media pt-4\">\n            <div class=\"row w-100 px-2\">\n                <div *ngIf=\"form.get('mainPicture').valid\" class=\"col-12\" @slowShowHideX>\n                    <h5>Main Picture:</h5>\n                    <img class=\"img-fluid rounded\" [src]=\"form.value['mainPicture']\" alt=\"new recipe main pic\">\n                </div>\n                <div *ngIf=\"validPicturesOnly?.length\" class=\"col-12 pt-3\" @slowShowHideX>\n                    <h5>Additional Pictures: {{validPicturesOnly.length}}</h5>\n                    <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\n                        <ol class=\"carousel-indicators\">\n                            <li data-target=\"#carouselExampleIndicators\" *ngFor=\"let p of validPicturesOnly; let i=index;\" [attr.data-slide-to]=\"i\"></li>\n                        </ol>                  \n                        <div class=\"carousel-inner\">\n                        <div class=\"carousel-item\" *ngFor=\"let picUrl of validPicturesOnly; let i=index;\" [ngClass]=\"{'active': picUrl===form.value['pictures'][0]}\">\n                            <img  [src]=\"picUrl\" class=\"d-block rounded\" width=\"100%\" [alt]=\"'recipe picture '+(i+1)\">\n                        </div>\n                        </div>\n                        <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n                        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                        <span class=\"sr-only\">Previous</span>\n                        </a>\n                        <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n                        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                        <span class=\"sr-only\">Next</span>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"py-4 col-12\" >\n                <h5 *ngIf=\"videoLink\" width=\"90%\">Additional Video:</h5>\n                    <div *ngIf=\"videoLink\" class=\"pt-4 mt-3 embed-responsive embed-responsive-16by9\" @slowShowHideX>\n                        <iframe class=\"embed-responsive-item\" [attr.src]=\"videoLink | safe\" allowfullscreen></iframe>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Subscription } from 'rxjs';\nimport { Component, OnDestroy } from '@angular/core';\nimport { RecipeService } from 'src/app/core/services/recipe.service';\nimport { RecipeDifficulty } from 'src/app/core/enumerations/RecipeDifficulty';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { IRecipeCreate } from 'src/app/core/interfaces/recipes/IRecipeCreate';\n\n@Component({\n  selector: 'acr-create-rec',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css'],\n})\nexport class CreateRecipeComponent implements OnDestroy {\n\n  subscriptions: Subscription[] = [];\n  settings={ headline: \"Create new Recipe\", submitBtnTitle: \"Post This Recipe\" };\n\n  diffGrades = Object.entries(RecipeDifficulty).filter((_, index, arr) => index < arr.length / 2);\n  constructor(private recipeService: RecipeService, private toastr: ToastrService, private router: Router) {\n  }\n\n  submitRecipe(newRecipe: IRecipeCreate) {\n    this.subscriptions.push(this.recipeService.submitRecipe(newRecipe).subscribe((id: string) => {\n      this.toastr.success(\"Successfully published a new recipe\", \"Congratulations!\")\n      this.router.navigate([\"/recipes/details\", id]);\n    }, (e) => {\n      this.toastr.error(\"Something went wrong please try again\");\n    }))\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.filter(x => !x.closed).forEach(x => x.unsubscribe())\n  }\n}","<acr-create-edit-form [settings]=\"settings\" (SubmitEvent)=\"submitRecipe($event)\">\n</acr-create-edit-form>","import { Subscription } from 'rxjs';\nimport { Component, ViewChild } from '@angular/core';\nimport { RecipeService } from 'src/app/core/services/recipe.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SignalRRecipeDetailsService } from 'src/app/core/services/signal-r.recipe-details.service';\nimport { CreateEditFormComponent } from '../create-edit-form/create-edit-form.component';\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\nimport { IRecipeEdit } from 'src/app/core/interfaces/recipes/IRecipeEdit';\n\n\nconst isSame = (el1, el2) => JSON.stringify(el1) === JSON.stringify(el2);\n\n\n@Component({\n  selector: 'acr-edit-rec',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css'],\n})\nexport class EditRecipeComponent {\n  settings = { headline: \"Edit Recipe\", submitBtnTitle: \"<i class='fas fa-wrench'></i> Edit This Recipe\" };\n\n  subscriptions: Subscription[] = [];\n  public recipe: IRecipeEdit = null;\n\n  @ViewChild(CreateEditFormComponent)\n  childForm: CreateEditFormComponent\n\n  constructor(\n    private singalRService: SignalRRecipeDetailsService,\n    private recipeService: RecipeService,\n    private ingredientService: IngredientService,\n    route: ActivatedRoute,\n    private toastr: ToastrService,\n    private router: Router) {\n    this.recipe = route.snapshot.data.data;\n    \n  }\n\n  submitRecipe(value: IRecipeEdit) {\n    this.subscriptions.push(this.recipeService.editRecipe(value).subscribe((r: string) => {\n      this.toastr.success(\"Successfully edited a recipe\", \"Congratulations!\")\n    \n      let patchValueForSignalR = {\n        name: value.name,\n        description: value.description,\n        pictures: value.pictures,\n        difficulty: +value.difficulty,\n        videoLink: value.videoLink,\n        tags: value.tags,\n      }\n      \n      if (isSame(value.ingredients, this.recipe.ingredients) && Number(value.categoryId) === this.recipe.categoryId) {\n        console.log(\"bez call!\");  this.sendSignalRData(patchValueForSignalR); //If ingredients and category is no need to API call...\n      } else {\n        this.childForm.categorie$.subscribe(v => {\n         console.log(\"pravq Call do bazata!\");\n         patchValueForSignalR[\"categoryName\"] = v.find(x => x.id === +value.categoryId).name\n         this.ingredientService.getRecipeIngredients(value.id).subscribe(ings => {\n           patchValueForSignalR[\"ingredients\"] = ings;\n           this.sendSignalRData(patchValueForSignalR); \n          })\n        }).add(()=>this.closeStreams())\n      }\n      this.router.navigate([\"/recipes/details\", r]);      \n    }, (e) => { this.toastr.error(\"Something went wrong please try again\"); console.log(e) }))\n  };\n\nprivate sendSignalRData(data:any){\n  this.singalRService.startConnection({ id: this.recipe.id }).then(()=> this.singalRService.patchRecipeData(data)).finally(()=>this.closeStreams());\n}\n\n private closeStreams(): void {\n    this.subscriptions.filter(x => !x.closed).forEach(x => x.unsubscribe());\n    this.singalRService.stopConnection();\n  }\n}","<acr-create-edit-form [settings]=\"settings\" (SubmitEvent)=\"submitRecipe($event)\" [recipe]=\"recipe\">\n</acr-create-edit-form>","import { NgxSpinnerService } from \"ngx-spinner\";\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\n\n@Component({\n  selector: 'acr-list-recipes',\n  templateUrl: './list-recipes.component.html',\n  styleUrls: []\n})\n\nexport class ListRecipesComponent implements OnInit {\n\n  public recipesContainer: { fetched: IRecipeMiniInfo[], page: number, endReached: boolean } = { fetched: [], page: 1, endReached: false };\n\n  public isLoading: boolean = false;\n  public notFound: boolean = false;\n  constructor(private spinner: NgxSpinnerService) { }\n\n  @Input()\n  title: string;\n\n  @Input()\n  loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>>;\n\n  ngOnInit(): void {\n    this.loadingMethod.subscribe(met => {\n      this.recipesContainer = { fetched: [], page: 1, endReached: false };\n      this.fetchRecipes();\n    })\n  }\n\n  get scrolSayLoad() {\n    return document.body.scrollHeight - (window.scrollY + window.innerHeight) < 0\n  }\n\n  @HostListener(\"window:scroll\", [])\n  handleKeyDown() {\n    if (this.recipesContainer.endReached || !this.scrolSayLoad || this.isLoading) { return }\n    this.fetchRecipes();\n  }\n\n  private fetchRecipes() {\n    this.startLoadingInfo();\n    this.loadingMethod.getValue()(this.recipesContainer.page++)\n      .subscribe(x => {\n        if (x.length === 0) {\n          this.recipesContainer.endReached = true;\n          this.stopLoadingInfo();\n        }\n        this.recipesContainer.fetched.splice(this.recipesContainer.fetched.length, 0, ...x);\n        this.stopLoadingInfo();\n      }\n        , (e) => {\n          this.stopLoadingInfo();\n          console.log(e, \"problemNSH\");\n          this.notFound = true;\n        })\n  }\n\n  private startLoadingInfo() {\n    this.isLoading = true;\n    if (this.recipesContainer.endReached) return;\n    this.spinner.show();\n  }\n\n  private stopLoadingInfo() {\n    this.isLoading = false;\n    this.spinner.hide();\n  }\n}","<h3 class=\"text-center pt-4\" [innerHTML]=\"title | htmlRaw\"></h3>\n<div class=\"row\">\n\n    <div class=\"col-2\"></div>\n    <div class=\"col-10\">\n        <acr-recipe-card *ngFor=\"let item of recipesContainer.fetched\" [recipe]=\"item\"></acr-recipe-card>\n    </div>\n    <div class=\"col-2\"></div>\n</div>\n<div class=\"row pb-4 mb-4 justify-content-center\">\n\n    <div *ngIf=\"isLoading\">\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-scale-multiple\">\n            <p style=\"font-size: 20px; color: white\">Loading...</p>\n        </ngx-spinner>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\" !isLoading && recipesContainer.fetched.length===0\">\n    <div class=\"col-4\"></div>\n    <div class=\"col-4\">\n        <h3 class=\"text-center py-4\"> Sorry No results for your search... </h3>\n        <img width=\"100%\" src=\"https://lh5.googleusercontent.com/proxy/bzT0KbGaK4qzgclV6hH_gbo3KfnMJBiywQ3VBkWZiGT8I7VbisSxA1FSsJ_5C4hGj7x71QAr30rFdpmGjWmH2oTErs2bi-fXcCnjW_k4cd33PgsImR5ONdbqGyu8DSymxdHD0KMD6z_AcwMGEJA\"\n            alt=\"\">\n    </div>\n    <div class=\"col-4\"></div>\n</div>\n","import { Component } from '@angular/core';\nimport { RecipeService } from 'src/app/core/services/recipe.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\n\n@Component({\n  selector: 'acr-list-all',\n  template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\n})\nexport class ListAllRComponent {\n\n  title = \"<i class='fas fa-scroll'></i>&nbsp; All Recipes...\";\n  loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\n\n  constructor(recipeService: RecipeService) {\n    this.loadingMethod = new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"all\", undefined))\n  }\n\n}\n","import { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListCommentedRecentlyRComponent {\r\n    title = \"<i class='far fa-clock'></i>&nbsp; Recently Commented Recipes...\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod =new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"commented-recently\", undefined))\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListHighlyRatedRComponent {\r\n    title = \"<i class='fas fa-medal'></i>&nbsp; Hihly Rated Recipes...\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod = new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"highly-rated\", undefined))\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CategoryService } from 'src/app/core/services/category.service';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListInCategoryRComponent {\r\n    title: string = \"\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService, activatedRoute: ActivatedRoute, catService: CategoryService) {\r\n        const id = activatedRoute.snapshot.params[\"id\"];\r\n// debugger;\r\n        this.loadingMethod = new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"category\", +id))\r\n        catService.getDetails(+id).subscribe(det => {\r\n            this.title = `<i class='far fa-bookmark'></i> &nbsp;Recipes In Category: ${det.name}`;\r\n        })\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IngredientService } from 'src/app/core/services/ingredient.service';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListIngredientsContainingRComponent {\r\n    title = \"<i class='fas fa-flask'></i> &nbsp; Recipes Containing Ingredients\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n    constructor(recipeService: RecipeService, route: ActivatedRoute, ingredientService: IngredientService) {\r\n        const ingIds = route.snapshot.params[\"ingids\"];\r\n        this.loadingMethod = new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"ingredients\", ingIds))\r\n\r\n        ingredientService.getIngredientNames(ingIds).subscribe(x => {\r\n            debugger;\r\n            this.title +=': '+ x.join(\", \");\r\n        })\r\n\r\n\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListMostCommentedRComponent {\r\n    title = \"<i class='far fa-comments'></i> &nbsp; Most Commented Recipes...\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod = new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"commented\", undefined))\r\n    }\r\n}\r\n","import { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListMostFavouredRComponent {\r\n    title = \"<i class='fas fa-grin-hearts'></i>&nbsp; Everyone's First Choise...\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod =new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"most-favoured\", undefined))\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListMostRatedRComponent {\r\n    title = \"<i class='fas fa-users'></i>&nbsp; Recipes With Most Votes...\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod =new BehaviorSubject( recipeService.getRecipes.bind(recipeService, \"most-rated\", undefined))\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListMostRecentRComponent {\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n    title = \"<i class='fas fa-concierge-bell'></i> &nbsp; Recently Published Recipes... (in the past 2 months)\";\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod =new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"recent\", undefined))\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListMyCommentedRComponent {\r\n    title = \"<i class='far fa-comment-alt'></i>&nbsp; My Commented Recipes...\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod = new BehaviorSubject(recipeService.getPrivateRecipes.bind(recipeService, \"my-commented\"))\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListMyFavouriteRComponent {\r\n    title = \"<i class='far fa-heart'></i>&nbsp; My Favourite Recipes...\";\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService) {\r\n        this.loadingMethod = new BehaviorSubject(recipeService.getPrivateRecipes.bind(recipeService, \"my-favourite\"))\r\n    }\r\n}","import { Observable, BehaviorSubject } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListSearchedRComponent {\r\n    title: string;\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService, route: ActivatedRoute) {\r\n        route.params.subscribe(({ phrase }) => {\r\n            this.title = `<i class='fas fa-search'></i>&nbsp; Results Of Search for...<span class=\"text-info font-italic\">\"${phrase}\"</span>`\r\n            let method = recipeService.getRecipes.bind(recipeService, \"search\", phrase);\r\n            if (this.loadingMethod === null) {\r\n                this.loadingMethod = new BehaviorSubject(method)\r\n            } else {\r\n                this.loadingMethod.next(method);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\nimport { RecipeService } from 'src/app/core/services/recipe.service';\r\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\r\n\r\n@Component({\r\n    selector: 'acr-list-all',\r\n    template: `<acr-list-recipes [title]=\"title\" [loadingMethod]=\"loadingMethod\"></acr-list-recipes>`,\r\n})\r\nexport class ListUserSharedRComponent {\r\n    title: string;\r\n    loadingMethod: BehaviorSubject<(page: number) => Observable<IRecipeMiniInfo[]>> = null\r\n\r\n    constructor(recipeService: RecipeService, route: ActivatedRoute, authService: AuthService) {\r\n        const userName: string = route.snapshot.params[\"username\"];\r\n        this.loadingMethod = new BehaviorSubject(recipeService.getRecipes.bind(recipeService, \"user\", userName))\r\n        this.title = (authService.isAuthenticated() && authService.getUserInfo().userName.toLowerCase() === userName.toLowerCase())\r\n                                                                ? `<i class='fas fa-share-alt'></i></i>&nbsp; My Shared Recipes...`\r\n                                                                : `<i class='fas fa-user'></i></i>&nbsp; ${userName}'s Recipes...`;\r\n    }\r\n}","export * from './filters/all/list-allR.component';\r\nexport * from './filters/most-recent/list-MostRecentR.component';\r\nexport * from './filters/most-favoured/list-mostFavouredR.component';\r\nexport * from './filters/searched/list-searchedR.component';\r\nexport * from './filters/most-commented/list-mostCommentedR.component';\r\nexport * from './filters/most-rated/list-mostRatedR.component';\r\nexport * from './filters/highly-rated/list-highlyRatedR.component';\r\nexport * from './filters/commented-recently/list-commentedRecentlyR.component';\r\nexport * from './filters/user-shared/list-userSharedR.component';\r\nexport * from './filters/my-favourite/list-myFavourite'\r\nexport * from './filters/my-commented/list-myCommentedR.component'\r\nexport * from './filters/ings-contain/list-ingredientsContainingR.component'\r\nexport * from './filters/in-category/list-inCategory.component'","import { Component, OnInit, Input, } from '@angular/core';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { IRecipeMiniInfo } from 'src/app/core/interfaces/recipes/recipeMiniInfo';\nimport { HelperService, CustomDateFormats as CustomDateFormats } from 'src/app/core/services/helper.service';\nimport { CookRank } from 'src/app/core/enumerations/CookRank';\n\n\n@Component({\n  selector: 'acr-recipe-card',\n  templateUrl: './recipe-card.component.html',\n  styleUrls: ['./recipe-card.component.css'],\n  animations: [\n    trigger('fade', [\n      transition('void=>*', [style({ opacity: '0', transform: 'translateX(-15rem) scaleX(0.1)' }), animate(1500, style({ opacity: '1', transform: 'translateX(0) scaleX(1)' }))]),\n    ])]\n})\n\nexport class RecipeCartComponent implements OnInit {\n\n  get cookRank() {\n    return CookRank[this.recipe.authorCookRank];\n  }\n\n  @Input()\n  public recipe: IRecipeMiniInfo = {\n    id: \"someId\",\n    name: \"Ramen\",\n    description: \"More description! Lorem, ipsum dolor sit amet consectetur adipisicing elit.Debitis molestiae quae voluptate, vitae cumque aspernatur fugit autem quo minus accusantium uttotam delectus maxime, velit reiciendis obcaecati, quasi sit ipsam! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Debitis molestiae quae voluptate, vitae cumque aspernatur fugit autem quo minus accusantium ut totam delectus maxime, velit reiciendis obcaecati, quasi sit ipsam! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Debitis molestiae quae voluptate, vitae cumque aspernatur fugit autem quo minus accusantium ut totam delectus maxime, velit reiciendis obcaecati, quasi sit ipsam! Lorem, ipsum dolor sit amet consectetur adipisicingelit. Debitis molestiae quae voluptate, vitae cumque aspernatur fugit autem quo minus accusantium ut totam delectus maxime, velit reiciendis obcaecati, quasi sit ipsam!\",\n    mainPicture: \"https://prods3.imgix.net/images/articles/2017_08/Non-feature-cold-summer-ramen-recipe-noodle-soup1.jpg?auto=format%2Ccompress&ixjsv=2.2.3\",\n    authorUserName: \"User12\",\n    authorCookRank: 1,\n    dateOfCreation: \"0\",\n    subInfo: {\n      rating: 7,\n      category: \"BreakFast\",\n      categoryId: 13,\n      commentsCount: 0,\n      ingredientsCount: 4,\n      difficulty: \"Hard\",\n      fans: 0,\n    }\n  }\n\n  constructor() { }\n\n  infoShown: boolean = false;\n  ngOnInit(): void {\n  }\n\n\n  displayInfo(timeDelay: number = 1000) {\n    setTimeout(() =>\n      this.infoShown = true, timeDelay)\n  }\n\n  hideInfo(timeDelay: number = 1000) {\n    setTimeout(() =>\n      this.infoShown = false, timeDelay)\n  }\n\n  get date() {\n    return HelperService.dateConvert(this.recipe.dateOfCreation, CustomDateFormats.DefaultFormater)\n  }\n\n}\n","<div class=\"row justify-content-start \" (mouseenter)=\"displayInfo(0)\" (mouseleave)=\"hideInfo()\">\n    <div class=\"card border-primary my-2 mx-4 col-8 px-0\">\n        <div class=\"card-header py-0\">\n            <div class=\"row justify-content-between pt-1\">\n                <div class=\"col-6 pt-2 mt-1\"><i class=\"fas fa-scroll\"></i>&nbsp;\n                    <a class=\"h5\" [routerLink]=\"['/recipes/details', recipe.id]\"> {{recipe.name}}</a>\n                </div>\n                <div class=\"col-5\">\n                    <div class=\"float-right h6\">\n                        <div height=\"15\" width=\"15\">\n                            <img src=\"../../../../assets/hat.png\" alt=\"cook-hat\">\n                        </div>\n                        {{cookRank}}\n                        &nbsp; <a [routerLink]=\"['/user-data/profile/', recipe.authorUserName]\"\n                            class=\"text-success \">{{recipe.authorUserName}} </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body p-2 h5 mb-0 pt-3\">\n            <div class=\" px-2\">\n                <div class=\"img-date pr-2 mx-0\">\n                    <img class=\"meal-picture\" [src]=\"recipe.mainPicture\" alt=\"picture of meal\">\n                    <div class=\"pt-1\">\n                        <p class=\" font-italic h6 my-0\"> Added on : <span class=\" font-italic small-font my-0\">{{date}}</span></p>\n                        \n                    </div>\n                </div>\n                <div class=\"info pl-2\">\n                    <p class=\"mb-2 h6\"> {{recipe.description}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div @fade class=\"col-3\" *ngIf=\"infoShown\">\n        <acr-recipe-sub-info [info]=\"recipe.subInfo\"></acr-recipe-sub-info>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { IRecipeMiniSubInfo } from 'src/app/core/interfaces/recipes/recipeMiniSubInfo';\n\n@Component({\n  selector: 'acr-recipe-sub-info',\n  templateUrl: './recipe-sub-info-card.component.html',\n  styleUrls: ['./recipe-sub-info-card.component.css']\n})\nexport class RecipeSubInfoCardComponent {\n\n  @Input()\n  info: IRecipeMiniSubInfo;\n\n  constructor() { }\n}\n","<div class=\"card border-info my-4 mx-4 col-8 h5 pt-3\">\n    <div *ngIf=\"!info.fans && (!info.rating || !info.commentsCount)\" id=\"menuDiv\">\n        <p  class=\"text-center h3 py-2\"> <i\n                class=\"fas fa-utensils\"></i></p>\n\n    </div>\n    <table class=\"table table-borderless h6\">\n\n        <tbody>\n            <tr>\n                <td class=\"py-2 my-0 pl-0\">Category:</td>\n                <td class=\"py-2 my-0 px-0\"><i class=\"far fa-bookmark\"></i> &nbsp; <a [routerLink]=\"['/categories/details',info.categoryId]\">{{info.category}}</a>\n                </td>\n            </tr>\n            <tr *ngIf=\"info.rating\">\n                <td class=\"py-2 my-0 pl-0\">Rating:</td>\n                <td class=\"py-2 my-0 px-0\"><i class=\"fas fa-star-half-alt\"></i> &nbsp; {{info.rating | number:'1.2'}}\n                </td>\n            </tr>\n            <tr *ngIf=\"info.commentsCount\">\n                <td class=\"py-2 my-0 pl-0\">Comments:</td>\n                <td class=\"py-2 my-0 px-0\"><i class=\"far fa-comments\"></i> &nbsp; {{info.commentsCount}}</td>\n            </tr>\n            <tr>\n                <td class=\"py-2 my-0 pl-0\">Difficulty:</td>\n                <td class=\"py-2 my-0 px-0\"><i class=\"fas fa-dumbbell\"></i> &nbsp; {{info.difficulty}}</td>\n            </tr>\n            <tr>\n                <td class=\"py-2 my-0 pl-0\">Ingredients:</td>\n                <td class=\"py-2 my-0 px-0\"><i class=\"fas fa-atom\"></i> &nbsp; {{info.ingredientsCount}}</td>\n            </tr>\n            <tr *ngIf=\"info.fans\">\n                <td class=\"py-2 my-0 pl-0\">Admirers:</td>\n                <td class=\"py-2 my-0 px-0\"><i class=\"fas fa-user-plus\"></i> &nbsp; {{info.fans}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnDestroy, } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { HelperService, CustomDateFormats } from 'src/app/core/services/helper.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RecipeService } from 'src/app/core/services/recipe.service';\nimport { SignalRRecipeDetailsService } from 'src/app/core/services/signal-r.recipe-details.service';\nimport { CookRank } from 'src/app/core/enumerations/CookRank';\nimport { RecipeDifficulty } from 'src/app/core/enumerations/RecipeDifficulty';\nimport { IRecipeDetails } from 'src/app/core/interfaces/recipes/RecipeDetails';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { DialogQuestionComponent } from 'src/app/core/components/questionComponent/dialog-question.component';\n\n@Component({\n  selector: 'acr-rec-det',\n  templateUrl: './recipe-details.component.html',\n  styleUrls: ['./recipe-details.component.css']\n})\nexport class RecipeDetailsComponent implements OnDestroy {\n  ratingNames = [\"Distasteful\", \"Questionable\", \"Acceptable\", \"Recomendable\", \"Good\", \"Magnifique\"]\n\n  constructor(\n    private router: Router,\n    route: ActivatedRoute,\n    private authService: AuthService,\n    private recipeService: RecipeService,\n    private dialog: MatDialog,\n    private toastr: ToastrService,\n    public singalRService: SignalRRecipeDetailsService) {\n    this.recipe = route.snapshot.data.data;\n    singalRService.startConnection(this.recipe);\n  }\n\n  get cookRank() {\n    return CookRank[this.recipe.authorCookRank];\n  }\n\n  get difficulty() {\n    return RecipeDifficulty[this.recipe.difficulty];\n  }\n\n  get tags() {\n    return this.recipe.tags.join(\", \");\n  }\n  public recipe: IRecipeDetails = null;\n  // {\n  //   id: \"2safdg2sadsadasd\",\n  //   name: \"Боб с кюфтета\",\n  //   authorUserName: \"User5\",\n  //   authorCookRank: \"Wizard\",\n  //   categoryName: \"BreakFast\",\n  //   dateOfLastEdit: \"2/18/2020 8:18:57 PM\",\n  //   description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Error corrupti necessitatibus odit illum incidunt autem soluta molestiae officia iusto doloremque voluptates facilis vero cumque, voluptatum, tenetur ullam blanditiis deserunt magnam. Lorem ipsum dolor sit amet consectetur adipisicing elit. Error corrupti necessitatibus odit illum incidunt autem soluta molestiae officia iusto doloremque voluptates facilis vero cumque, voluptatum, tenetur ullam blanditiis deserunt magnam. Lorem ipsum dolor sit amet consectetur adipisicing elit. Error corrupti necessitatibus odit illum incidunt autem soluta molestiae officia iusto doloremque voluptates facilis vero cumque, voluptatum, tenetur ullam blanditiis deserunt magnam.\",\n  //   pictures: [\"https://www.theflavorbender.com/wp-content/uploads/2019/01/Easy-Chicken-Ramen-Featured.jpg\",\n  //     \"https://www.justonecookbook.com/wp-content/uploads/2017/07/Spicy-Shoyu-Ramen-NEW-500x400.jpg\",\n  //     \"https://cdn.ruled.me/wp-content/uploads/2019/09/ramen-bowl-featured.jpg\"],\n  //   videoLink: \"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\",\n  //   votes: [{ name: \"amet\", vote: 3 }, { name: \"aspar\", vote: 4 }, { name: \"chukcha\", vote: 4 }, { name: \"User1\", vote: 3 }],\n  //   difficulty: 2,\n  //   tags: [\"kufteta\", \"bobove\", \"zaprujka\", \"bobec\"],\n  //   ingredients: [\n  //     { name: \"Tomato\", ammount: \"2 spns\", picURL: \"https://cdn.ruled.me/wp-content/uploads/2019/09/ramen-bowl-featured.jpg\", id: 2, isVegan: false, isEssential: true },\n  //     { name: \"Tomato\", ammount: \"2 spns\", picURL: \"https://cdn.ruled.me/wp-content/uploads/2019/09/ramen-bowl-featured.jpg\", id: 2, isVegan: true, isEssential: false },\n  //     { name: \"Tomato\", ammount: \"2 spns\", picURL: \"https://cdn.ruled.me/wp-content/uploads/2019/09/ramen-bowl-featured.jpg\", id: 2, isVegan: false, isEssential: true }\n  //   ],\n  //   favorizers: [\"Aladin\", \"Sebaidin\", \"Maradin\", \"Martin\"],\n  // }\n\n  get isUDAuthorized() {\n    return this.authService.isAdmin || this.myName === this.recipe.authorUserName;\n  }\n\n  trimAppropriate(str: string, maxLength) {\n    let res = str.slice(0, maxLength);\n    let lastSpace = res.lastIndexOf(' ');\n    return res.slice(0, lastSpace) + \"...\";\n  }\n\n  goToEdit() {\n    this.router.navigate([\"/recipes/edit\", this.recipe.id]);\n  }\n\n  get videoLink() {\n    if (!this.recipe.videoLink) return null;\n    const id = this.recipe.videoLink.substr(this.recipe.videoLink.indexOf(\"v=\") + 2 || this.recipe.videoLink.lastIndexOf(\"\\\\\") + 1);\n    return HelperService.videoLinkMake(id);\n  }\n\n  get ratingProperties() {\n    const meaningfullVotes = this.recipe.votes.slice().filter(v => v.vote > 0);\n    const currentRating = meaningfullVotes.reduce((acc, next, _, arr) => acc + (next.vote / arr.length), 0);\n    const rating = Math.round(currentRating * 2) / 2;\n    const result = {\n      halfStar: rating - Math.floor(rating) > 0,\n      positive: new Array(Math.floor(rating)),\n      lacking: new Array(6 - Math.ceil(rating)),\n      overal: Math.floor(rating) - 1,\n      voterCount: meaningfullVotes.length,\n      avRating: currentRating,\n      ratingName: meaningfullVotes.length > 1 ? this.ratingNames[Math.floor(rating) - 1] : \"No votes yet!\"\n    };\n    return result;\n  }\n\n  get isFavourite() {\n    return this.isLoggedIn && this.recipe.favorizers.includes(this.authService.getUserInfo().userName)\n  }\n\n  get dateAdded() {\n    return HelperService.dateConvert(this.recipe.dateOfLastEdit, CustomDateFormats.DefaultFormater)\n  }\n\n  get isLoggedIn() {\n    return this.authService.isAuthenticated();\n  }\n\n  get myVote(): number {\n    if (!this.isLoggedIn || !this.recipe) return 0;\n    const mv = this.recipe.votes.find(x => x.name === this.myName);\n    if (!mv) return 0;\n    return mv.vote;\n  }\n  set myVote(v) { console.log(v) }//this getter is bound as default value of select btn!\n\n  rateBtnEnabled({ choise }) {\n    if (isNaN(choise) + choise === 0) return false;\n    return this.authService.isAuthenticated() && +choise > 0 && +choise !== this.myVote;\n  }\n\n  makeVote({ choise }) {\n    choise = +choise;\n    if (![1, 2, 3, 4, 5, 6].includes(choise)) return;\n    this.recipeService.rateRecipe(this.recipe.id, choise).subscribe(() => {\n      let myVoting = this.recipe.votes.find(x => x.name === this.myName);\n      if (myVoting) {\n        myVoting.vote = choise;\n      } else {\n        this.recipe.votes.push({ name: this.myName, vote: choise });\n      }\n      this.singalRService.patchRecipeData({ votes: this.recipe.votes })\n    })\n  }\n\n  get myName() {\n    if (!this.isLoggedIn) return null;\n    return this.authService.getUserInfo().userName;\n  }\n\n  favUnfav() {\n    if (!this.isLoggedIn) return;\n\n    this.recipeService.favUnfavRecipe(this.recipe.id).subscribe(i_favedR => {\n      if (i_favedR && !this.recipe.favorizers.includes(this.myName)) {\n        this.recipe.favorizers.push(this.myName);\n      } else if (!i_favedR && this.recipe.favorizers.includes(this.myName)) {\n        this.recipe.favorizers = this.recipe.favorizers.filter(n => n !== this.myName);\n      }\n      this.singalRService.patchRecipeData({ favorizers: this.recipe.favorizers });\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.singalRService.stopConnection();\n  }\n\n  confirmDelete() {\n    let dialogRef = this.dialog.open(DialogQuestionComponent,\n      {\n        width: \"40em\",\n        data: {\n          title: `Confirm Deletion Please:`,\n          question: `Are you sure you wish to delete ${this.recipe.name}?`,\n          picUrl: this.recipe.mainPicture,\n          positiveAnswerBtnName: '<i class=\"far fa-trash-alt\"></i> Delete',\n          negativeAnswerBtnName: '<i class=\"fas fa-ban\"></i> Abort'\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === \"true\") {\n          this.recipeService.deleteIngredientById(this.recipe.id).subscribe(() => {\n            this.toastr.success(`Removed recipe ${this.recipe.name}`, \"Success!\");\n            this.router.navigate(['/index']);\n          }, (err) => {\n            this.toastr.error(`Recipe ${this.recipe.name} was not removed`, \"Failure\");\n            console.log(err);\n          });\n        }\n      })\n  }\n}","<section class=\"main\">\r\n    <div class=\"row justify-content-start pt-3\">\r\n        <div class=\"col-3 p-3 mt-4\">\r\n            <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\r\n                <ol class=\"carousel-indicators\">\r\n                    <li data-target=\"#carouselExampleIndicators\" *ngFor=\"let pic of recipe.pictures; let i=index;\" [attr.data-slide-to]=\"i\"></li>\r\n                </ol>                  \r\n                <div class=\"carousel-inner\">\r\n                  <div class=\"carousel-item\" *ngFor=\"let pic of recipe.pictures; let i=index;\" [ngClass]=\"{'active': pic===recipe.pictures[0]}\">\r\n                    <img  [src]=\"pic\" class=\"d-block w-100 round\" [alt]=\"'recipe picture '+(i+1)\">\r\n                  </div>\r\n                </div>\r\n                <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                  <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                  <span class=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                  <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                  <span class=\"sr-only\">Next</span>\r\n                </a>\r\n            </div>\r\n                <div class=\"embed-responsive embed-responsive-16by9\" *ngIf=\"videoLink\">\r\n                    <iframe class=\"embed-responsive-item\" [attr.src]=\"videoLink | safe\" allowfullscreen></iframe>\r\n                </div>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <div class=\"row justify-content-between pr-4 pl-2\">\r\n                <div class=\"col-5 text-left\"><h3><i class=\"fas fa-scroll\"></i>&nbsp;{{recipe.name}} <span *ngIf=\"isUDAuthorized\">\r\n                    <span class=\" btn btn-sm btn-primary\" (click)=\"goToEdit()\"><i class=\"fas fa-tools\"></i> Edit</span>\r\n                    <span class=\" btn btn-sm btn-danger ml-2\" (click)=\"confirmDelete()\"><i class=\"far fa-trash-alt\"></i> Delete</span></span>\r\n                </h3></div>\r\n                <div class=\"col-4 pl-2\">\r\n                    <h4 class=\"pt-2 text-center\"><span *ngIf=\"ratingProperties.voterCount\"><i *ngFor=\"let star of ratingProperties.positive\" class=\"fas fa-star pr-1\"></i><i *ngIf=\"ratingProperties.halfStar\" class=\"fas fa-star-half-alt pr-1\"></i><i *ngFor=\"let star of ratingProperties.lacking\" class=\"far fa-star pr-1\"></i>  &nbsp;</span>{{ratingProperties.ratingName}}</h4>\r\n                </div>\r\n                <div class=\"col-3\">\r\n                    <div class=\" text-left d-inline d-block\">\r\n                        <h5 class=\"pb-0 pr-2 py-0 my-0\">\r\n                            <img src=\"../../../../assets/hat.png\" class=\"cook-hat\"  alt=\"cook-hat\">\r\n                            {{cookRank}}  &nbsp;\r\n                            <a [routerLink]=\"['/user-data/profile/', recipe.authorUserName]\"> {{recipe.authorUserName}}</a></h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"hr\"></div>\r\n            <h4 class=\"text-center pb-2\"><i class=\"far fa-bookmark\"></i> &nbsp;Category:  <a [routerLink]=\"['/categories/details',recipe.categoryId]\">{{recipe.categoryName}}</a></h4> \r\n            <div class=\"row justify-content-between pt-2 px-3\">\r\n                <div class=\"col-5\">\r\n                    <h5>Ingredients: </h5> \r\n                    <table>\r\n                        <tbody>\r\n                            <tr  class=\"ings\" *ngFor=\"let ing of recipe.ingredients;index as i\">                           \r\n                                <td><a [routerLink]=\"['/ingredients',{outlets: {'ing-outlet':['details',ing.id]}}]\">{{ing.name}}</a></td>\r\n                                <td>{{ing.ammount}}</td>\r\n                                <td>{{ing.isVegan?\"Vegan\":\"Non-Vegan\"}}</td>\r\n                                <td class=\"ing-info\">\r\n                                    <button class=\"btn btn-link text-info\" [popover]=\"ingInfo\" [popoverOnHover]=\"true\" popoverPlacement=\"top right\">\r\n                                        <span *ngIf=\"!ing.isEssential\"><i class=\"fas fa-question-circle\"></i></span>\r\n                                        <span *ngIf=\"ing.isEssential\"><i class=\"fas fa-check-circle\"></i></span>\r\n                                    </button>\r\n                                        <popover-content #ingInfo \r\n                                            [title]=\"ing.name\"                        \r\n                                            [animation]=\"true\" \r\n                                            closeOnClickOutside=\"true\">\r\n                                            <div class=\"ing-cart\">\r\n                                                <img [src]=\"ing.picURL\" [alt]=\"ing.name+'-picture'\">\r\n                                                <p>{{ trimAppropriate(ing.description,110)}}</p>\r\n                                            </div>\r\n                                        </popover-content>\r\n                                </td>\r\n                             </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col-7\">\r\n                    <form #f=\"ngForm\" (ngSubmit)=\"makeVote(f.value)\">\r\n                        <label for=\"choise\">Rate This Recipe:</label>\r\n                        <div class=\"row justify-content-start\">\r\n                            <div class=\"col-4\">\r\n                                <select  name=\"choise\" ngModel [(ngModel)]=\"myVote\" class=\"custom-select\" id=\"choise\" [disabled]=\"!isLoggedIn\">\r\n                                    <option  *ngIf=\"myVote===0\"  value=\"0\" selected disabled >Choose rating...</option>\r\n                                    <option *ngFor=\"let opt of ratingNames; let i=index;\" [value]=\"i+1\">{{opt}}</option>>\r\n                                </select>\r\n                            </div>\r\n                        <div class=\"col-3 pt-1\">\r\n                            <button type=\"submit\" class=\"btn btn-primary btn-sm\" [ngClass]=\"{'not-allowed': !rateBtnEnabled(f.value)}\" [disabled]=\"!rateBtnEnabled(f.value)\"><i class=\"fas fa-star\"> </i>&nbsp; <span [innerHTML]=\"myVote? 'Change':'Give'\" ></span> Rating </button>\r\n                        </div>\r\n                        <div class=\"col-5 pt-1 px-0\">\r\n<div class=\"fav-btn\">\r\n    <mat-button-toggle color=\"warn\" #btn=\"matButtonToggle\" [checked]=\"isLoggedIn && isFavourite\" (click)=\"favUnfav()\" [ngClass]=\"{'not-allowed': !isLoggedIn}\" [disabled]=\"!isLoggedIn\">\r\n        <span *ngIf=\"isFavourite; else removeOpt\" opt=\"addOpt\"> <i class=\"fas fa-heart-broken\"></i>&nbsp; Remove from Favourite </span>\r\n        <ng-template #removeOpt><i class=\"fas fa-heart\"></i>&nbsp; Add to Favourite</ng-template>\r\n    </mat-button-toggle>\r\n    <!-- {{btn.checked}} -->\r\n</div>\r\n                            <!-- <button type=\"button\" (click)=\"favUnfav()\" class=\"btn btn-primary btn-sm\" [ngClass]=\"{'not-allowed': !isLoggedIn}\" [disabled]=\"!isLoggedIn\">\r\n                                <span *ngIf=\"isFavourite; else removeOpt\" opt=\"addOpt\"> <i class=\"fas fa-heart-broken\"></i>&nbsp; Remove from Favourite </span>\r\n                                <ng-template #removeOpt><i class=\"fas fa-heart\"></i>&nbsp; Add to Favourite </ng-template>\r\n                            </button>             -->\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                    <div class=\"col-12 py-2\">\r\n                        <div class=\"row justify-content-start\">         \r\n                            <div class=\"col-7 px-0\">\r\n                                <ul class=\"undecorated\">\r\n                                    <li ><i class=\"fas fa-user\"></i> &nbsp; {{ratingProperties.voterCount}} Voters</li>\r\n                                    <li ><i class=\"fas fa-poll\"></i> &nbsp; {{ratingProperties.avRating | number:\"1.2\"}} Average Rating</li>\r\n                                    <li ><i class=\"fas fa-user\"></i> &nbsp; {{recipe.favorizers.length}} users Bookmerked this recipe</li>\r\n                                    <li ><i class=\"far fa-clock\"></i> &nbsp; Last Modified: {{dateAdded}}</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"col-5\">\r\n                                <ul class=\"undecorated\">\r\n                                    <li ><i class=\"fas fa-dumbbell\"></i> &nbsp; Difficulty: {{difficulty}}</li>\r\n                                    <li ><i class=\"far fa-bookmark\"></i> &nbsp; Tags: {{tags}}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"pt-2\">\r\n                <h4>How to prepare:</h4>\r\n            <p>{{recipe.description}}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"main\">\r\n    <acr-list-comments [recipeId]=\"recipe.id\" [recipeAuthorUserName]=\"recipe.authorUserName\" [signalR]=\"singalRService\"></acr-list-comments>\r\n</section>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RecipeCartComponent } from './recipe-cart/recipe-main/recipe-card.component';\r\nimport { RecipeSubInfoCardComponent } from './recipe-cart/recipe-sub-info-card/recipe-sub-info-card.component';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { RecipeDetailsComponent } from './recipe-details/recipe-details.component';\r\nimport { CreateRecipeComponent } from './create/create.component';\r\nimport { EditRecipeComponent } from './edit/edit.component';\r\nimport { CreateEditFormComponent } from './create-edit-form/create-edit-form.component';\r\nimport { CommentsModule } from '../comments/comments.module';\r\nimport { ListRecipesComponent } from './list-recipes/base/list-recipes.component';\r\nimport { ListAllRComponent, ListMostRecentRComponent, ListMostFavouredRComponent, ListSearchedRComponent, ListMostCommentedRComponent, ListMostRatedRComponent, ListHighlyRatedRComponent, ListCommentedRecentlyRComponent, ListUserSharedRComponent, ListMyFavouriteRComponent, ListMyCommentedRComponent, ListIngredientsContainingRComponent, ListInCategoryRComponent } from './list-recipes/recipes-list-exporter';\r\nconst recipeListings = [ListRecipesComponent, ListAllRComponent, ListCommentedRecentlyRComponent, ListHighlyRatedRComponent, ListMostCommentedRComponent, ListMostRecentRComponent, ListSearchedRComponent, ListMostFavouredRComponent, ListMostRatedRComponent, ListUserSharedRComponent, ListMyFavouriteRComponent, ListMyCommentedRComponent, ListIngredientsContainingRComponent,ListInCategoryRComponent];\r\n\r\n@NgModule({\r\n  declarations: [RecipeCartComponent, RecipeSubInfoCardComponent, RecipeDetailsComponent,\r\n    CreateRecipeComponent, EditRecipeComponent, CreateEditFormComponent, recipeListings\r\n      ],\r\n  imports: [\r\n     AppRoutingModule, CoreModule, CommentsModule\r\n  ],\r\n  exports: []\r\n})\r\nexport class RecipesModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'acr-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  public year: number = new Date().getFullYear();\n  ngOnInit() {\n    setInterval(() => {\n      this.year = new Date().getFullYear()\n    }, 1000 * 60 * 60 * 24);\n  }\n}","<footer class=\"footer text-center py-3 bg-dark fixed-bottom text-warning\">© {{year}} Acresh:\n    <a routerLink=\"GDPR\"> GDPR Policy</a>\n</footer>","import { Component, DoCheck, ViewChild, ElementRef } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { MessageService } from 'src/app/core/services/message.service';\n\n@Component({\n  selector: 'acr-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements DoCheck {\n  public userName: string = null;\n  constructor(private router: Router, private authService: AuthService, private toastr: ToastrService, private messageService: MessageService) { }\n\n  @ViewChild(\"searchPhrase\")\n  phrase: ElementRef;\n\n\n  ngDoCheck() {\n    if (this.authService.isAuthenticated() && !this.userName) {\n      this.userName = this.authService.getUserInfo().userName;\n      this.messageService.signalR.startConnection(this.userName).then(() => this.messageService.signalR.updateUserUnreadCount(this.userName))\n    }\n  }\n\n  get unreadCount() {\n    return this.messageService.signalR.unreadCount;\n  }\n\n  ngOnDestroy() {\n    this.messageService.signalR.stopConnection()\n  }\n\n  logout() {\n    this.authService.clearUserData();\n    this.toastr.show(\"Goodbye user!\");\n    this.userName = null;\n    this.router.navigate([\"\"]);\n    this.messageService.signalR.stopConnection()\n  }\n\n  search() {\n    let v: string = this.phrase.nativeElement.value;\n    if (v.length < 2) return;\n    this.router.navigate([`/recipes/search/${v}`]);\n   // this.router.navigate([`/recipes/search/${v}`, { phrase: v }]);\n    this.phrase.nativeElement.value = '';\n  }\n\n}","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark nav-pills\">\n  <a class=\"navbar-brand\" routerLink=\"\"><span class=\"acsh\">ACRESH</span></a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\"\n    aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n    <ul class=\"navbar-nav mr-auto\">\n\n      <li class=\"nav-item mr-2\">\n        <a class=\"nav-link\" routerLink=\"couldron\" routerLinkActive=\"active\"><i class=\"fas fa-flask\"></i> Couldron</a>\n      </li>\n      <div class=\"dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\">\n          <i class=\"fas fa-scroll\"></i> Recipes\n        </a>\n\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n          <a class=\"dropdown-item\" routerLink=\"recipes/all\"><i class='fas fa-scroll'></i>&nbsp; All Recipes</a>\n          <a class=\"dropdown-item\" routerLink=\"recipes/recent\"><i class='fas fa-concierge-bell'></i> &nbsp; Recently Added Recipes</a>\n          <a class=\"dropdown-item\" routerLink=\"recipes/commented\"><i class='far fa-comments'></i> &nbsp; Most Commented Recipes</a>\n          <a class=\"dropdown-item\" routerLink=\"recipes/commented-recently\"><i class='far fa-clock'></i>&nbsp; Recently Commented Recipes</a>\n          <a class=\"dropdown-item\" routerLink=\"recipes/highly-rated\"><i class='fas fa-medal'></i>&nbsp; Highly Rated Recipes</a>\n          <a class=\"dropdown-item\" routerLink=\"recipes/most-rated\"><i class='fas fa-users'></i>&nbsp; Most Rated Recipes</a>\n          <a class=\"dropdown-item\" routerLink=\"recipes/most-favoured\"><i class='fas fa-grin-hearts'></i>&nbsp; Most Favoured</a>\n        </div>\n      </div>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/ingredients\"><i class=\"fas fa-puzzle-piece\"></i>&nbsp;Ingredients</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"categories/\"><i class=\"fas fa-book-open\"></i> Categories</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav mr-auto main-logo\">\n      <li class=\"nav-item\">\n        <h4 class=\"nav-link font-italic\"><span class=\"acsh\">A</span>pplication for <span\n            class=\"acsh\">C</span>ooking\n          <span class=\"acsh\">RE</span>cipes <span\n            class=\"acsh\">SH</span>aring </h4>\n      </li>\n    </ul>\n\n    <ul *ngIf=\"userName; else unloggedOptions\" class=\"navbar-nav pl-2 pr-0\">\n      <li class=\"nav-item\">\n        <div class=\"dropdown dropdown-menu-right\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            <i class=\"fa fa-user fa-lg\"></i> {{userName}}\n          </a>\n\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item \" [routerLink]=\"['/user-data/profile/', userName]\"><i class=\"fas fa-user-cog\"></i> &nbsp; My Profile</a>\n            <a class=\"dropdown-item \" [routerLink]=\"['/recipes/add-new']\"><i class=\"fas fa-plus-circle\"></i> &nbsp; Share New Recipe</a>\n            <a class=\"dropdown-item pt-2\" routerLink=\"/message-box\"><i class=\"far fa-envelope\"></i> &nbsp; Communications\n              <span class=\"badge badge-pill badge-danger ml-2 py-2 my-0 px-2\" *ngIf=\"unreadCount\"> {{unreadCount}}</span>\n            </a>\n            <a class=\"dropdown-item \" routerLink=\"/recipes/my-commented\"><i class=\"far fa-comment-alt\"></i> &nbsp; My Commented</a>\n            <a class=\"dropdown-item\" routerLink=\"/recipes/my-favourite\"><i class=\"far fa-heart\"></i>&nbsp; My Favourite Recipes</a>\n            <a class=\"dropdown-item\" [routerLink]=\"['/recipes/user/',userName]\"><i class=\"fas fa-share-alt\"></i> &nbsp; My Shared Recipes</a>\n            <a class=\"dropdown-item\" (click)=\"logout()\"><i class=\"fas fa-sign-out-alt\"></i> &nbsp; Logout</a>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <ng-template #unloggedOptions>\n      <ul class=\"navbar-nav pl-2 pr-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link \" routerLink=\"authentication/login\" routerLinkActive=\"active\">Login</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/authentication/register\" routerLinkActive=\"active\">Register</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">About</a>\n        </li>\n      </ul>\n    </ng-template>\n    <div class=\"input-group pl-2 pr-2 col-2 ml-0\">\n      <input #searchPhrase class=\"form-control my-0 py-1 lime-border\" type=\"text\" placeholder=\"Name of recipe...\" aria-label=\"Search\">\n      <div class=\"input-group-append\">\n        <span class=\"input-group-text lime lighten-2\" (click)=\"search()\" id=\"sbtn\"><i class=\"fas fa-search\" aria-hidden=\"true\"></i></span>\n      </div>\n    </div>\n  </div>\n</nav>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'acr-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\npublic chupakabra=null;\n  constructor(private authService:AuthService) { }\n\n\ngetChupakabra(){\nthis.authService.getChupakabra().subscribe(c=>{\n  this.chupakabra=c;\n  console.log(this.authService.getUserInfo())\n})//,this.chupakabra=null)\n}\n\n  ngOnInit() {\n  }\n\n}\n","<button class=\"btn btn-primary\" (click)=\"getChupakabra()\"> GetChupakabra </button>\n{{chupakabra|json}}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { MainComponent } from './components/main/main.component';\n\n\n@NgModule({\n  declarations: [HeaderComponent, FooterComponent, MainComponent],\n  imports: [\n    CommonModule,AppRoutingModule\n  ],\n  exports:[HeaderComponent,FooterComponent,MainComponent]\n})\nexport class SharedModule { }\n","import { Action } from '@ngrx/store';\r\nimport { IUserUnreadMsgCount } from 'src/app/core/interfaces/store/user.unread.msg-count.model';\r\n\r\nexport const SET_UNR_MESSAGE_COUNT = \"[UnrMessage] Set\";\r\nexport const RESET_UNR_MESSAGE_COUNT = \"[UnrMessage] Reset\";\r\nexport const INCREMENT_UNR_MESSAGE_COUNT = \"[UnrMessage] Increment\";\r\n\r\n\r\nexport class SetMessageCount implements Action {\r\n    readonly type: string = SET_UNR_MESSAGE_COUNT\r\n    constructor(public payload: IUserUnreadMsgCount) { }\r\n}\r\n\r\nexport class ResetMessageCount implements Action {\r\n    readonly type: string = RESET_UNR_MESSAGE_COUNT\r\n    constructor(public payload: string) { }\r\n}\r\n\r\nexport class IncrementMessageCount implements Action {\r\n    readonly type: string = INCREMENT_UNR_MESSAGE_COUNT\r\n    constructor(public payload: string) { }\r\n}\r\n\r\nexport type Actions = SetMessageCount | ResetMessageCount | IncrementMessageCount;","import * as MsgOptions from \"../actions/user.unread.count.action\"\r\nimport { IUserUnreadMsgCount } from 'src/app/core/interfaces/store/user.unread.msg-count.model'\r\n\r\nconst initialValue: IUserUnreadMsgCount[] = [{ userName: \"kitodar\", unreadMessagesCount: -2 }];\r\n\r\nexport function unreadMsgsReducer(state: IUserUnreadMsgCount[] = initialValue, action: MsgOptions.Actions): IUserUnreadMsgCount[] {\r\n    switch (action.type) {\r\n        case MsgOptions.RESET_UNR_MESSAGE_COUNT:\r\n            return [];\r\n        case MsgOptions.SET_UNR_MESSAGE_COUNT:\r\n            return setUnreadMessagesCountForUser(state, action.payload);\r\n\r\n        case MsgOptions.INCREMENT_UNR_MESSAGE_COUNT:\r\n            return addNewUnreadMessage(state, action.payload);\r\n\r\n        case MsgOptions.RESET_UNR_MESSAGE_COUNT:\r\n            return resetUserUnreadMessages(state, action.payload);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction setUnreadMessagesCountForUser(state: IUserUnreadMsgCount[], userUnrMessages) {\r\n    return [...state.slice().filter(x => x.userName !== userUnrMessages.userName), userUnrMessages]\r\n}\r\n\r\nfunction addNewUnreadMessage(state: IUserUnreadMsgCount[], username) {\r\n    console.log(state, \"asiktir\");\r\n    let foundUser = state.find(x => x.userName === username);\r\n    if (!foundUser) { return state; }\r\n    let { userName, unreadMessagesCount } = foundUser;\r\n    if (!userName) {\r\n        //it does not matter for this user he ll see when he logs in!\r\n        return state;\r\n    }\r\n    unreadMessagesCount++;\r\n    return [...state.slice().filter(x => x.userName !== userName), { userName, unreadMessagesCount: unreadMessagesCount }]\r\n}\r\n\r\nfunction resetUserUnreadMessages(state: IUserUnreadMsgCount[], username) {\r\n    return state.slice().filter(x => x.userName !== username);\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}